{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema BswapAddLiquidityPreviewCombination
module Binance.Types.BswapAddLiquidityPreviewCombination where

import qualified Binance.Common
import Binance.TypeAlias
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.bswapAddLiquidityPreviewCombination@ in the specification.
data BswapAddLiquidityPreviewCombination = BswapAddLiquidityPreviewCombination
  { -- | baseAmt
    bswapAddLiquidityPreviewCombinationBaseAmt :: GHC.Int.Int64,
    -- | baseAsset
    bswapAddLiquidityPreviewCombinationBaseAsset :: Data.Text.Internal.Text,
    -- | price
    bswapAddLiquidityPreviewCombinationPrice :: GHC.Types.Double,
    -- | quoteAmt
    bswapAddLiquidityPreviewCombinationQuoteAmt :: GHC.Int.Int64,
    -- | quoteAsset
    bswapAddLiquidityPreviewCombinationQuoteAsset :: Data.Text.Internal.Text,
    -- | share
    bswapAddLiquidityPreviewCombinationShare :: GHC.Types.Double
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON BswapAddLiquidityPreviewCombination where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["baseAmt" Data.Aeson.Types.ToJSON..= bswapAddLiquidityPreviewCombinationBaseAmt obj] : ["baseAsset" Data.Aeson.Types.ToJSON..= bswapAddLiquidityPreviewCombinationBaseAsset obj] : ["price" Data.Aeson.Types.ToJSON..= bswapAddLiquidityPreviewCombinationPrice obj] : ["quoteAmt" Data.Aeson.Types.ToJSON..= bswapAddLiquidityPreviewCombinationQuoteAmt obj] : ["quoteAsset" Data.Aeson.Types.ToJSON..= bswapAddLiquidityPreviewCombinationQuoteAsset obj] : ["share" Data.Aeson.Types.ToJSON..= bswapAddLiquidityPreviewCombinationShare obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["baseAmt" Data.Aeson.Types.ToJSON..= bswapAddLiquidityPreviewCombinationBaseAmt obj] : ["baseAsset" Data.Aeson.Types.ToJSON..= bswapAddLiquidityPreviewCombinationBaseAsset obj] : ["price" Data.Aeson.Types.ToJSON..= bswapAddLiquidityPreviewCombinationPrice obj] : ["quoteAmt" Data.Aeson.Types.ToJSON..= bswapAddLiquidityPreviewCombinationQuoteAmt obj] : ["quoteAsset" Data.Aeson.Types.ToJSON..= bswapAddLiquidityPreviewCombinationQuoteAsset obj] : ["share" Data.Aeson.Types.ToJSON..= bswapAddLiquidityPreviewCombinationShare obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON BswapAddLiquidityPreviewCombination where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "BswapAddLiquidityPreviewCombination" (\obj -> (((((GHC.Base.pure BswapAddLiquidityPreviewCombination GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "baseAmt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "baseAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "price")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "quoteAmt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "quoteAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "share"))

-- | Create a new 'BswapAddLiquidityPreviewCombination' with all required fields.
mkBswapAddLiquidityPreviewCombination ::
  -- | 'bswapAddLiquidityPreviewCombinationBaseAmt'
  GHC.Int.Int64 ->
  -- | 'bswapAddLiquidityPreviewCombinationBaseAsset'
  Data.Text.Internal.Text ->
  -- | 'bswapAddLiquidityPreviewCombinationPrice'
  GHC.Types.Double ->
  -- | 'bswapAddLiquidityPreviewCombinationQuoteAmt'
  GHC.Int.Int64 ->
  -- | 'bswapAddLiquidityPreviewCombinationQuoteAsset'
  Data.Text.Internal.Text ->
  -- | 'bswapAddLiquidityPreviewCombinationShare'
  GHC.Types.Double ->
  BswapAddLiquidityPreviewCombination
mkBswapAddLiquidityPreviewCombination bswapAddLiquidityPreviewCombinationBaseAmt bswapAddLiquidityPreviewCombinationBaseAsset bswapAddLiquidityPreviewCombinationPrice bswapAddLiquidityPreviewCombinationQuoteAmt bswapAddLiquidityPreviewCombinationQuoteAsset bswapAddLiquidityPreviewCombinationShare =
  BswapAddLiquidityPreviewCombination
    { bswapAddLiquidityPreviewCombinationBaseAmt = bswapAddLiquidityPreviewCombinationBaseAmt,
      bswapAddLiquidityPreviewCombinationBaseAsset = bswapAddLiquidityPreviewCombinationBaseAsset,
      bswapAddLiquidityPreviewCombinationPrice = bswapAddLiquidityPreviewCombinationPrice,
      bswapAddLiquidityPreviewCombinationQuoteAmt = bswapAddLiquidityPreviewCombinationQuoteAmt,
      bswapAddLiquidityPreviewCombinationQuoteAsset = bswapAddLiquidityPreviewCombinationQuoteAsset,
      bswapAddLiquidityPreviewCombinationShare = bswapAddLiquidityPreviewCombinationShare
    }
