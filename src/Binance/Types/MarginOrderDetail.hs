{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema MarginOrderDetail
module Binance.Types.MarginOrderDetail where

import qualified Binance.Common
import Binance.TypeAlias
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.marginOrderDetail@ in the specification.
data MarginOrderDetail = MarginOrderDetail
  { -- | clientOrderId
    marginOrderDetailClientOrderId :: Data.Text.Internal.Text,
    -- | cummulativeQuoteQty
    marginOrderDetailCummulativeQuoteQty :: Data.Text.Internal.Text,
    -- | executedQty
    marginOrderDetailExecutedQty :: Data.Text.Internal.Text,
    -- | icebergQty
    marginOrderDetailIcebergQty :: Data.Text.Internal.Text,
    -- | isIsolated
    marginOrderDetailIsIsolated :: GHC.Types.Bool,
    -- | isWorking
    marginOrderDetailIsWorking :: GHC.Types.Bool,
    -- | orderId
    marginOrderDetailOrderId :: GHC.Int.Int64,
    -- | origQty
    marginOrderDetailOrigQty :: Data.Text.Internal.Text,
    -- | price
    marginOrderDetailPrice :: Data.Text.Internal.Text,
    -- | side
    marginOrderDetailSide :: Data.Text.Internal.Text,
    -- | status
    marginOrderDetailStatus :: Data.Text.Internal.Text,
    -- | stopPrice
    marginOrderDetailStopPrice :: Data.Text.Internal.Text,
    -- | symbol
    marginOrderDetailSymbol :: Data.Text.Internal.Text,
    -- | time
    marginOrderDetailTime :: GHC.Int.Int64,
    -- | timeInForce
    marginOrderDetailTimeInForce :: Data.Text.Internal.Text,
    -- | type
    marginOrderDetailType :: Data.Text.Internal.Text,
    -- | updateTime
    marginOrderDetailUpdateTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON MarginOrderDetail where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= marginOrderDetailClientOrderId obj] : ["cummulativeQuoteQty" Data.Aeson.Types.ToJSON..= marginOrderDetailCummulativeQuoteQty obj] : ["executedQty" Data.Aeson.Types.ToJSON..= marginOrderDetailExecutedQty obj] : ["icebergQty" Data.Aeson.Types.ToJSON..= marginOrderDetailIcebergQty obj] : ["isIsolated" Data.Aeson.Types.ToJSON..= marginOrderDetailIsIsolated obj] : ["isWorking" Data.Aeson.Types.ToJSON..= marginOrderDetailIsWorking obj] : ["orderId" Data.Aeson.Types.ToJSON..= marginOrderDetailOrderId obj] : ["origQty" Data.Aeson.Types.ToJSON..= marginOrderDetailOrigQty obj] : ["price" Data.Aeson.Types.ToJSON..= marginOrderDetailPrice obj] : ["side" Data.Aeson.Types.ToJSON..= marginOrderDetailSide obj] : ["status" Data.Aeson.Types.ToJSON..= marginOrderDetailStatus obj] : ["stopPrice" Data.Aeson.Types.ToJSON..= marginOrderDetailStopPrice obj] : ["symbol" Data.Aeson.Types.ToJSON..= marginOrderDetailSymbol obj] : ["time" Data.Aeson.Types.ToJSON..= marginOrderDetailTime obj] : ["timeInForce" Data.Aeson.Types.ToJSON..= marginOrderDetailTimeInForce obj] : ["type" Data.Aeson.Types.ToJSON..= marginOrderDetailType obj] : ["updateTime" Data.Aeson.Types.ToJSON..= marginOrderDetailUpdateTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= marginOrderDetailClientOrderId obj] : ["cummulativeQuoteQty" Data.Aeson.Types.ToJSON..= marginOrderDetailCummulativeQuoteQty obj] : ["executedQty" Data.Aeson.Types.ToJSON..= marginOrderDetailExecutedQty obj] : ["icebergQty" Data.Aeson.Types.ToJSON..= marginOrderDetailIcebergQty obj] : ["isIsolated" Data.Aeson.Types.ToJSON..= marginOrderDetailIsIsolated obj] : ["isWorking" Data.Aeson.Types.ToJSON..= marginOrderDetailIsWorking obj] : ["orderId" Data.Aeson.Types.ToJSON..= marginOrderDetailOrderId obj] : ["origQty" Data.Aeson.Types.ToJSON..= marginOrderDetailOrigQty obj] : ["price" Data.Aeson.Types.ToJSON..= marginOrderDetailPrice obj] : ["side" Data.Aeson.Types.ToJSON..= marginOrderDetailSide obj] : ["status" Data.Aeson.Types.ToJSON..= marginOrderDetailStatus obj] : ["stopPrice" Data.Aeson.Types.ToJSON..= marginOrderDetailStopPrice obj] : ["symbol" Data.Aeson.Types.ToJSON..= marginOrderDetailSymbol obj] : ["time" Data.Aeson.Types.ToJSON..= marginOrderDetailTime obj] : ["timeInForce" Data.Aeson.Types.ToJSON..= marginOrderDetailTimeInForce obj] : ["type" Data.Aeson.Types.ToJSON..= marginOrderDetailType obj] : ["updateTime" Data.Aeson.Types.ToJSON..= marginOrderDetailUpdateTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON MarginOrderDetail where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "MarginOrderDetail" (\obj -> ((((((((((((((((GHC.Base.pure MarginOrderDetail GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "clientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cummulativeQuoteQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "executedQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "icebergQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "isIsolated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "isWorking")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "origQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "price")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "side")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "stopPrice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "time")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "timeInForce")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "updateTime"))

-- | Create a new 'MarginOrderDetail' with all required fields.
mkMarginOrderDetail ::
  -- | 'marginOrderDetailClientOrderId'
  Data.Text.Internal.Text ->
  -- | 'marginOrderDetailCummulativeQuoteQty'
  Data.Text.Internal.Text ->
  -- | 'marginOrderDetailExecutedQty'
  Data.Text.Internal.Text ->
  -- | 'marginOrderDetailIcebergQty'
  Data.Text.Internal.Text ->
  -- | 'marginOrderDetailIsIsolated'
  GHC.Types.Bool ->
  -- | 'marginOrderDetailIsWorking'
  GHC.Types.Bool ->
  -- | 'marginOrderDetailOrderId'
  GHC.Int.Int64 ->
  -- | 'marginOrderDetailOrigQty'
  Data.Text.Internal.Text ->
  -- | 'marginOrderDetailPrice'
  Data.Text.Internal.Text ->
  -- | 'marginOrderDetailSide'
  Data.Text.Internal.Text ->
  -- | 'marginOrderDetailStatus'
  Data.Text.Internal.Text ->
  -- | 'marginOrderDetailStopPrice'
  Data.Text.Internal.Text ->
  -- | 'marginOrderDetailSymbol'
  Data.Text.Internal.Text ->
  -- | 'marginOrderDetailTime'
  GHC.Int.Int64 ->
  -- | 'marginOrderDetailTimeInForce'
  Data.Text.Internal.Text ->
  -- | 'marginOrderDetailType'
  Data.Text.Internal.Text ->
  -- | 'marginOrderDetailUpdateTime'
  GHC.Int.Int64 ->
  MarginOrderDetail
mkMarginOrderDetail marginOrderDetailClientOrderId marginOrderDetailCummulativeQuoteQty marginOrderDetailExecutedQty marginOrderDetailIcebergQty marginOrderDetailIsIsolated marginOrderDetailIsWorking marginOrderDetailOrderId marginOrderDetailOrigQty marginOrderDetailPrice marginOrderDetailSide marginOrderDetailStatus marginOrderDetailStopPrice marginOrderDetailSymbol marginOrderDetailTime marginOrderDetailTimeInForce marginOrderDetailType marginOrderDetailUpdateTime =
  MarginOrderDetail
    { marginOrderDetailClientOrderId = marginOrderDetailClientOrderId,
      marginOrderDetailCummulativeQuoteQty = marginOrderDetailCummulativeQuoteQty,
      marginOrderDetailExecutedQty = marginOrderDetailExecutedQty,
      marginOrderDetailIcebergQty = marginOrderDetailIcebergQty,
      marginOrderDetailIsIsolated = marginOrderDetailIsIsolated,
      marginOrderDetailIsWorking = marginOrderDetailIsWorking,
      marginOrderDetailOrderId = marginOrderDetailOrderId,
      marginOrderDetailOrigQty = marginOrderDetailOrigQty,
      marginOrderDetailPrice = marginOrderDetailPrice,
      marginOrderDetailSide = marginOrderDetailSide,
      marginOrderDetailStatus = marginOrderDetailStatus,
      marginOrderDetailStopPrice = marginOrderDetailStopPrice,
      marginOrderDetailSymbol = marginOrderDetailSymbol,
      marginOrderDetailTime = marginOrderDetailTime,
      marginOrderDetailTimeInForce = marginOrderDetailTimeInForce,
      marginOrderDetailType = marginOrderDetailType,
      marginOrderDetailUpdateTime = marginOrderDetailUpdateTime
    }
