{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema SavingsFixedActivityRedemptionRecord
module Binance.Types.SavingsFixedActivityRedemptionRecord where

import qualified Binance.Common
import Binance.TypeAlias
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.savingsFixedActivityRedemptionRecord.items@ in the specification.
data SavingsFixedActivityRedemptionRecordItem = SavingsFixedActivityRedemptionRecordItem
  { -- | amount
    savingsFixedActivityRedemptionRecordItemAmount :: Data.Text.Internal.Text,
    -- | asset
    savingsFixedActivityRedemptionRecordItemAsset :: Data.Text.Internal.Text,
    -- | createTime
    savingsFixedActivityRedemptionRecordItemCreateTime :: GHC.Int.Int64,
    -- | interest
    savingsFixedActivityRedemptionRecordItemInterest :: Data.Text.Internal.Text,
    -- | principal
    savingsFixedActivityRedemptionRecordItemPrincipal :: Data.Text.Internal.Text,
    -- | projectId
    savingsFixedActivityRedemptionRecordItemProjectId :: Data.Text.Internal.Text,
    -- | projectName
    savingsFixedActivityRedemptionRecordItemProjectName :: Data.Text.Internal.Text,
    -- | startTime
    savingsFixedActivityRedemptionRecordItemStartTime :: GHC.Int.Int64,
    -- | status
    savingsFixedActivityRedemptionRecordItemStatus :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SavingsFixedActivityRedemptionRecordItem where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemAmount obj] : ["asset" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemAsset obj] : ["createTime" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemCreateTime obj] : ["interest" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemInterest obj] : ["principal" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemPrincipal obj] : ["projectId" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemProjectId obj] : ["projectName" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemProjectName obj] : ["startTime" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemStartTime obj] : ["status" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemStatus obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemAmount obj] : ["asset" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemAsset obj] : ["createTime" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemCreateTime obj] : ["interest" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemInterest obj] : ["principal" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemPrincipal obj] : ["projectId" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemProjectId obj] : ["projectName" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemProjectName obj] : ["startTime" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemStartTime obj] : ["status" Data.Aeson.Types.ToJSON..= savingsFixedActivityRedemptionRecordItemStatus obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SavingsFixedActivityRedemptionRecordItem where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SavingsFixedActivityRedemptionRecordItem" (\obj -> ((((((((GHC.Base.pure SavingsFixedActivityRedemptionRecordItem GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "createTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interest")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "principal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "projectId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "projectName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "startTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status"))

-- | Create a new 'SavingsFixedActivityRedemptionRecordItem' with all required fields.
mkSavingsFixedActivityRedemptionRecordItem ::
  -- | 'savingsFixedActivityRedemptionRecordItemAmount'
  Data.Text.Internal.Text ->
  -- | 'savingsFixedActivityRedemptionRecordItemAsset'
  Data.Text.Internal.Text ->
  -- | 'savingsFixedActivityRedemptionRecordItemCreateTime'
  GHC.Int.Int64 ->
  -- | 'savingsFixedActivityRedemptionRecordItemInterest'
  Data.Text.Internal.Text ->
  -- | 'savingsFixedActivityRedemptionRecordItemPrincipal'
  Data.Text.Internal.Text ->
  -- | 'savingsFixedActivityRedemptionRecordItemProjectId'
  Data.Text.Internal.Text ->
  -- | 'savingsFixedActivityRedemptionRecordItemProjectName'
  Data.Text.Internal.Text ->
  -- | 'savingsFixedActivityRedemptionRecordItemStartTime'
  GHC.Int.Int64 ->
  -- | 'savingsFixedActivityRedemptionRecordItemStatus'
  Data.Text.Internal.Text ->
  SavingsFixedActivityRedemptionRecordItem
mkSavingsFixedActivityRedemptionRecordItem savingsFixedActivityRedemptionRecordItemAmount savingsFixedActivityRedemptionRecordItemAsset savingsFixedActivityRedemptionRecordItemCreateTime savingsFixedActivityRedemptionRecordItemInterest savingsFixedActivityRedemptionRecordItemPrincipal savingsFixedActivityRedemptionRecordItemProjectId savingsFixedActivityRedemptionRecordItemProjectName savingsFixedActivityRedemptionRecordItemStartTime savingsFixedActivityRedemptionRecordItemStatus =
  SavingsFixedActivityRedemptionRecordItem
    { savingsFixedActivityRedemptionRecordItemAmount = savingsFixedActivityRedemptionRecordItemAmount,
      savingsFixedActivityRedemptionRecordItemAsset = savingsFixedActivityRedemptionRecordItemAsset,
      savingsFixedActivityRedemptionRecordItemCreateTime = savingsFixedActivityRedemptionRecordItemCreateTime,
      savingsFixedActivityRedemptionRecordItemInterest = savingsFixedActivityRedemptionRecordItemInterest,
      savingsFixedActivityRedemptionRecordItemPrincipal = savingsFixedActivityRedemptionRecordItemPrincipal,
      savingsFixedActivityRedemptionRecordItemProjectId = savingsFixedActivityRedemptionRecordItemProjectId,
      savingsFixedActivityRedemptionRecordItemProjectName = savingsFixedActivityRedemptionRecordItemProjectName,
      savingsFixedActivityRedemptionRecordItemStartTime = savingsFixedActivityRedemptionRecordItemStartTime,
      savingsFixedActivityRedemptionRecordItemStatus = savingsFixedActivityRedemptionRecordItemStatus
    }

-- | Defines an alias for the schema located at @components.schemas.savingsFixedActivityRedemptionRecord@ in the specification.
type SavingsFixedActivityRedemptionRecord = [SavingsFixedActivityRedemptionRecordItem]
