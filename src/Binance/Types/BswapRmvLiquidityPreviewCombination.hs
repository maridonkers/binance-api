{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema BswapRmvLiquidityPreviewCombination
module Binance.Types.BswapRmvLiquidityPreviewCombination where

import qualified Binance.Common
import Binance.TypeAlias
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.bswapRmvLiquidityPreviewCombination@ in the specification.
data BswapRmvLiquidityPreviewCombination = BswapRmvLiquidityPreviewCombination
  { -- | baseAmt
    bswapRmvLiquidityPreviewCombinationBaseAmt :: GHC.Int.Int64,
    -- | baseAsset
    bswapRmvLiquidityPreviewCombinationBaseAsset :: Data.Text.Internal.Text,
    -- | price
    bswapRmvLiquidityPreviewCombinationPrice :: GHC.Types.Double,
    -- | quoteAmt
    bswapRmvLiquidityPreviewCombinationQuoteAmt :: GHC.Int.Int64,
    -- | quoteAsset
    bswapRmvLiquidityPreviewCombinationQuoteAsset :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON BswapRmvLiquidityPreviewCombination where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["baseAmt" Data.Aeson.Types.ToJSON..= bswapRmvLiquidityPreviewCombinationBaseAmt obj] : ["baseAsset" Data.Aeson.Types.ToJSON..= bswapRmvLiquidityPreviewCombinationBaseAsset obj] : ["price" Data.Aeson.Types.ToJSON..= bswapRmvLiquidityPreviewCombinationPrice obj] : ["quoteAmt" Data.Aeson.Types.ToJSON..= bswapRmvLiquidityPreviewCombinationQuoteAmt obj] : ["quoteAsset" Data.Aeson.Types.ToJSON..= bswapRmvLiquidityPreviewCombinationQuoteAsset obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["baseAmt" Data.Aeson.Types.ToJSON..= bswapRmvLiquidityPreviewCombinationBaseAmt obj] : ["baseAsset" Data.Aeson.Types.ToJSON..= bswapRmvLiquidityPreviewCombinationBaseAsset obj] : ["price" Data.Aeson.Types.ToJSON..= bswapRmvLiquidityPreviewCombinationPrice obj] : ["quoteAmt" Data.Aeson.Types.ToJSON..= bswapRmvLiquidityPreviewCombinationQuoteAmt obj] : ["quoteAsset" Data.Aeson.Types.ToJSON..= bswapRmvLiquidityPreviewCombinationQuoteAsset obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON BswapRmvLiquidityPreviewCombination where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "BswapRmvLiquidityPreviewCombination" (\obj -> ((((GHC.Base.pure BswapRmvLiquidityPreviewCombination GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "baseAmt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "baseAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "price")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "quoteAmt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "quoteAsset"))

-- | Create a new 'BswapRmvLiquidityPreviewCombination' with all required fields.
mkBswapRmvLiquidityPreviewCombination ::
  -- | 'bswapRmvLiquidityPreviewCombinationBaseAmt'
  GHC.Int.Int64 ->
  -- | 'bswapRmvLiquidityPreviewCombinationBaseAsset'
  Data.Text.Internal.Text ->
  -- | 'bswapRmvLiquidityPreviewCombinationPrice'
  GHC.Types.Double ->
  -- | 'bswapRmvLiquidityPreviewCombinationQuoteAmt'
  GHC.Int.Int64 ->
  -- | 'bswapRmvLiquidityPreviewCombinationQuoteAsset'
  Data.Text.Internal.Text ->
  BswapRmvLiquidityPreviewCombination
mkBswapRmvLiquidityPreviewCombination bswapRmvLiquidityPreviewCombinationBaseAmt bswapRmvLiquidityPreviewCombinationBaseAsset bswapRmvLiquidityPreviewCombinationPrice bswapRmvLiquidityPreviewCombinationQuoteAmt bswapRmvLiquidityPreviewCombinationQuoteAsset =
  BswapRmvLiquidityPreviewCombination
    { bswapRmvLiquidityPreviewCombinationBaseAmt = bswapRmvLiquidityPreviewCombinationBaseAmt,
      bswapRmvLiquidityPreviewCombinationBaseAsset = bswapRmvLiquidityPreviewCombinationBaseAsset,
      bswapRmvLiquidityPreviewCombinationPrice = bswapRmvLiquidityPreviewCombinationPrice,
      bswapRmvLiquidityPreviewCombinationQuoteAmt = bswapRmvLiquidityPreviewCombinationQuoteAmt,
      bswapRmvLiquidityPreviewCombinationQuoteAsset = bswapRmvLiquidityPreviewCombinationQuoteAsset
    }
