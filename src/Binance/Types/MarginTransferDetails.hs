{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema MarginTransferDetails
module Binance.Types.MarginTransferDetails where

import qualified Binance.Common
import Binance.TypeAlias
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.marginTransferDetails@ in the specification.
data MarginTransferDetails = MarginTransferDetails
  { -- | rows
    marginTransferDetailsRows :: ([MarginTransferDetailsRows]),
    -- | total
    marginTransferDetailsTotal :: GHC.Int.Int32
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON MarginTransferDetails where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= marginTransferDetailsRows obj] : ["total" Data.Aeson.Types.ToJSON..= marginTransferDetailsTotal obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= marginTransferDetailsRows obj] : ["total" Data.Aeson.Types.ToJSON..= marginTransferDetailsTotal obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON MarginTransferDetails where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "MarginTransferDetails" (\obj -> (GHC.Base.pure MarginTransferDetails GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "rows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'MarginTransferDetails' with all required fields.
mkMarginTransferDetails ::
  -- | 'marginTransferDetailsRows'
  [MarginTransferDetailsRows] ->
  -- | 'marginTransferDetailsTotal'
  GHC.Int.Int32 ->
  MarginTransferDetails
mkMarginTransferDetails marginTransferDetailsRows marginTransferDetailsTotal =
  MarginTransferDetails
    { marginTransferDetailsRows = marginTransferDetailsRows,
      marginTransferDetailsTotal = marginTransferDetailsTotal
    }

-- | Defines the object schema located at @components.schemas.marginTransferDetails.properties.rows.items@ in the specification.
data MarginTransferDetailsRows = MarginTransferDetailsRows
  { -- | amount
    marginTransferDetailsRowsAmount :: Data.Text.Internal.Text,
    -- | asset
    marginTransferDetailsRowsAsset :: Data.Text.Internal.Text,
    -- | status
    marginTransferDetailsRowsStatus :: Data.Text.Internal.Text,
    -- | timestamp
    marginTransferDetailsRowsTimestamp :: GHC.Int.Int64,
    -- | transFrom
    marginTransferDetailsRowsTransFrom :: Data.Text.Internal.Text,
    -- | transTo
    marginTransferDetailsRowsTransTo :: Data.Text.Internal.Text,
    -- | txId
    marginTransferDetailsRowsTxId :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON MarginTransferDetailsRows where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= marginTransferDetailsRowsAmount obj] : ["asset" Data.Aeson.Types.ToJSON..= marginTransferDetailsRowsAsset obj] : ["status" Data.Aeson.Types.ToJSON..= marginTransferDetailsRowsStatus obj] : ["timestamp" Data.Aeson.Types.ToJSON..= marginTransferDetailsRowsTimestamp obj] : ["transFrom" Data.Aeson.Types.ToJSON..= marginTransferDetailsRowsTransFrom obj] : ["transTo" Data.Aeson.Types.ToJSON..= marginTransferDetailsRowsTransTo obj] : ["txId" Data.Aeson.Types.ToJSON..= marginTransferDetailsRowsTxId obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= marginTransferDetailsRowsAmount obj] : ["asset" Data.Aeson.Types.ToJSON..= marginTransferDetailsRowsAsset obj] : ["status" Data.Aeson.Types.ToJSON..= marginTransferDetailsRowsStatus obj] : ["timestamp" Data.Aeson.Types.ToJSON..= marginTransferDetailsRowsTimestamp obj] : ["transFrom" Data.Aeson.Types.ToJSON..= marginTransferDetailsRowsTransFrom obj] : ["transTo" Data.Aeson.Types.ToJSON..= marginTransferDetailsRowsTransTo obj] : ["txId" Data.Aeson.Types.ToJSON..= marginTransferDetailsRowsTxId obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON MarginTransferDetailsRows where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "MarginTransferDetailsRows" (\obj -> ((((((GHC.Base.pure MarginTransferDetailsRows GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "timestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transFrom")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transTo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "txId"))

-- | Create a new 'MarginTransferDetailsRows' with all required fields.
mkMarginTransferDetailsRows ::
  -- | 'marginTransferDetailsRowsAmount'
  Data.Text.Internal.Text ->
  -- | 'marginTransferDetailsRowsAsset'
  Data.Text.Internal.Text ->
  -- | 'marginTransferDetailsRowsStatus'
  Data.Text.Internal.Text ->
  -- | 'marginTransferDetailsRowsTimestamp'
  GHC.Int.Int64 ->
  -- | 'marginTransferDetailsRowsTransFrom'
  Data.Text.Internal.Text ->
  -- | 'marginTransferDetailsRowsTransTo'
  Data.Text.Internal.Text ->
  -- | 'marginTransferDetailsRowsTxId'
  GHC.Int.Int64 ->
  MarginTransferDetailsRows
mkMarginTransferDetailsRows marginTransferDetailsRowsAmount marginTransferDetailsRowsAsset marginTransferDetailsRowsStatus marginTransferDetailsRowsTimestamp marginTransferDetailsRowsTransFrom marginTransferDetailsRowsTransTo marginTransferDetailsRowsTxId =
  MarginTransferDetailsRows
    { marginTransferDetailsRowsAmount = marginTransferDetailsRowsAmount,
      marginTransferDetailsRowsAsset = marginTransferDetailsRowsAsset,
      marginTransferDetailsRowsStatus = marginTransferDetailsRowsStatus,
      marginTransferDetailsRowsTimestamp = marginTransferDetailsRowsTimestamp,
      marginTransferDetailsRowsTransFrom = marginTransferDetailsRowsTransFrom,
      marginTransferDetailsRowsTransTo = marginTransferDetailsRowsTransTo,
      marginTransferDetailsRowsTxId = marginTransferDetailsRowsTxId
    }
