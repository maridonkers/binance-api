{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema OrderDetails
module Binance.Types.OrderDetails where

import qualified Binance.Common
import Binance.TypeAlias
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.orderDetails@ in the specification.
data OrderDetails = OrderDetails
  { -- | clientOrderId
    orderDetailsClientOrderId :: Data.Text.Internal.Text,
    -- | cummulativeQuoteQty
    orderDetailsCummulativeQuoteQty :: Data.Text.Internal.Text,
    -- | executedQty
    orderDetailsExecutedQty :: Data.Text.Internal.Text,
    -- | icebergQty
    orderDetailsIcebergQty :: Data.Text.Internal.Text,
    -- | isWorking
    orderDetailsIsWorking :: GHC.Types.Bool,
    -- | orderId
    orderDetailsOrderId :: GHC.Int.Int64,
    -- | orderListId: Unless OCO, value will be -1
    orderDetailsOrderListId :: GHC.Int.Int64,
    -- | origQty
    orderDetailsOrigQty :: Data.Text.Internal.Text,
    -- | origQuoteOrderQty
    orderDetailsOrigQuoteOrderQty :: Data.Text.Internal.Text,
    -- | price
    orderDetailsPrice :: Data.Text.Internal.Text,
    -- | side
    orderDetailsSide :: Data.Text.Internal.Text,
    -- | status
    orderDetailsStatus :: Data.Text.Internal.Text,
    -- | stopPrice
    orderDetailsStopPrice :: Data.Text.Internal.Text,
    -- | symbol
    orderDetailsSymbol :: Data.Text.Internal.Text,
    -- | time
    orderDetailsTime :: GHC.Int.Int64,
    -- | timeInForce
    orderDetailsTimeInForce :: Data.Text.Internal.Text,
    -- | type
    orderDetailsType :: Data.Text.Internal.Text,
    -- | updateTime
    orderDetailsUpdateTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON OrderDetails where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= orderDetailsClientOrderId obj] : ["cummulativeQuoteQty" Data.Aeson.Types.ToJSON..= orderDetailsCummulativeQuoteQty obj] : ["executedQty" Data.Aeson.Types.ToJSON..= orderDetailsExecutedQty obj] : ["icebergQty" Data.Aeson.Types.ToJSON..= orderDetailsIcebergQty obj] : ["isWorking" Data.Aeson.Types.ToJSON..= orderDetailsIsWorking obj] : ["orderId" Data.Aeson.Types.ToJSON..= orderDetailsOrderId obj] : ["orderListId" Data.Aeson.Types.ToJSON..= orderDetailsOrderListId obj] : ["origQty" Data.Aeson.Types.ToJSON..= orderDetailsOrigQty obj] : ["origQuoteOrderQty" Data.Aeson.Types.ToJSON..= orderDetailsOrigQuoteOrderQty obj] : ["price" Data.Aeson.Types.ToJSON..= orderDetailsPrice obj] : ["side" Data.Aeson.Types.ToJSON..= orderDetailsSide obj] : ["status" Data.Aeson.Types.ToJSON..= orderDetailsStatus obj] : ["stopPrice" Data.Aeson.Types.ToJSON..= orderDetailsStopPrice obj] : ["symbol" Data.Aeson.Types.ToJSON..= orderDetailsSymbol obj] : ["time" Data.Aeson.Types.ToJSON..= orderDetailsTime obj] : ["timeInForce" Data.Aeson.Types.ToJSON..= orderDetailsTimeInForce obj] : ["type" Data.Aeson.Types.ToJSON..= orderDetailsType obj] : ["updateTime" Data.Aeson.Types.ToJSON..= orderDetailsUpdateTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= orderDetailsClientOrderId obj] : ["cummulativeQuoteQty" Data.Aeson.Types.ToJSON..= orderDetailsCummulativeQuoteQty obj] : ["executedQty" Data.Aeson.Types.ToJSON..= orderDetailsExecutedQty obj] : ["icebergQty" Data.Aeson.Types.ToJSON..= orderDetailsIcebergQty obj] : ["isWorking" Data.Aeson.Types.ToJSON..= orderDetailsIsWorking obj] : ["orderId" Data.Aeson.Types.ToJSON..= orderDetailsOrderId obj] : ["orderListId" Data.Aeson.Types.ToJSON..= orderDetailsOrderListId obj] : ["origQty" Data.Aeson.Types.ToJSON..= orderDetailsOrigQty obj] : ["origQuoteOrderQty" Data.Aeson.Types.ToJSON..= orderDetailsOrigQuoteOrderQty obj] : ["price" Data.Aeson.Types.ToJSON..= orderDetailsPrice obj] : ["side" Data.Aeson.Types.ToJSON..= orderDetailsSide obj] : ["status" Data.Aeson.Types.ToJSON..= orderDetailsStatus obj] : ["stopPrice" Data.Aeson.Types.ToJSON..= orderDetailsStopPrice obj] : ["symbol" Data.Aeson.Types.ToJSON..= orderDetailsSymbol obj] : ["time" Data.Aeson.Types.ToJSON..= orderDetailsTime obj] : ["timeInForce" Data.Aeson.Types.ToJSON..= orderDetailsTimeInForce obj] : ["type" Data.Aeson.Types.ToJSON..= orderDetailsType obj] : ["updateTime" Data.Aeson.Types.ToJSON..= orderDetailsUpdateTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON OrderDetails where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "OrderDetails" (\obj -> (((((((((((((((((GHC.Base.pure OrderDetails GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "clientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cummulativeQuoteQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "executedQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "icebergQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "isWorking")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderListId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "origQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "origQuoteOrderQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "price")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "side")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "stopPrice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "time")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "timeInForce")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "updateTime"))

-- | Create a new 'OrderDetails' with all required fields.
mkOrderDetails ::
  -- | 'orderDetailsClientOrderId'
  Data.Text.Internal.Text ->
  -- | 'orderDetailsCummulativeQuoteQty'
  Data.Text.Internal.Text ->
  -- | 'orderDetailsExecutedQty'
  Data.Text.Internal.Text ->
  -- | 'orderDetailsIcebergQty'
  Data.Text.Internal.Text ->
  -- | 'orderDetailsIsWorking'
  GHC.Types.Bool ->
  -- | 'orderDetailsOrderId'
  GHC.Int.Int64 ->
  -- | 'orderDetailsOrderListId'
  GHC.Int.Int64 ->
  -- | 'orderDetailsOrigQty'
  Data.Text.Internal.Text ->
  -- | 'orderDetailsOrigQuoteOrderQty'
  Data.Text.Internal.Text ->
  -- | 'orderDetailsPrice'
  Data.Text.Internal.Text ->
  -- | 'orderDetailsSide'
  Data.Text.Internal.Text ->
  -- | 'orderDetailsStatus'
  Data.Text.Internal.Text ->
  -- | 'orderDetailsStopPrice'
  Data.Text.Internal.Text ->
  -- | 'orderDetailsSymbol'
  Data.Text.Internal.Text ->
  -- | 'orderDetailsTime'
  GHC.Int.Int64 ->
  -- | 'orderDetailsTimeInForce'
  Data.Text.Internal.Text ->
  -- | 'orderDetailsType'
  Data.Text.Internal.Text ->
  -- | 'orderDetailsUpdateTime'
  GHC.Int.Int64 ->
  OrderDetails
mkOrderDetails orderDetailsClientOrderId orderDetailsCummulativeQuoteQty orderDetailsExecutedQty orderDetailsIcebergQty orderDetailsIsWorking orderDetailsOrderId orderDetailsOrderListId orderDetailsOrigQty orderDetailsOrigQuoteOrderQty orderDetailsPrice orderDetailsSide orderDetailsStatus orderDetailsStopPrice orderDetailsSymbol orderDetailsTime orderDetailsTimeInForce orderDetailsType orderDetailsUpdateTime =
  OrderDetails
    { orderDetailsClientOrderId = orderDetailsClientOrderId,
      orderDetailsCummulativeQuoteQty = orderDetailsCummulativeQuoteQty,
      orderDetailsExecutedQty = orderDetailsExecutedQty,
      orderDetailsIcebergQty = orderDetailsIcebergQty,
      orderDetailsIsWorking = orderDetailsIsWorking,
      orderDetailsOrderId = orderDetailsOrderId,
      orderDetailsOrderListId = orderDetailsOrderListId,
      orderDetailsOrigQty = orderDetailsOrigQty,
      orderDetailsOrigQuoteOrderQty = orderDetailsOrigQuoteOrderQty,
      orderDetailsPrice = orderDetailsPrice,
      orderDetailsSide = orderDetailsSide,
      orderDetailsStatus = orderDetailsStatus,
      orderDetailsStopPrice = orderDetailsStopPrice,
      orderDetailsSymbol = orderDetailsSymbol,
      orderDetailsTime = orderDetailsTime,
      orderDetailsTimeInForce = orderDetailsTimeInForce,
      orderDetailsType = orderDetailsType,
      orderDetailsUpdateTime = orderDetailsUpdateTime
    }
