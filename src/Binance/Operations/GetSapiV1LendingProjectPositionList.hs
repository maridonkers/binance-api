{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1LendingProjectPositionList
module Binance.Operations.GetSapiV1LendingProjectPositionList where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/lending/project/position/list
--
-- Weight(IP): 1
getSapiV1LendingProjectPositionList ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingProjectPositionListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1LendingProjectPositionListResponse)
getSapiV1LendingProjectPositionList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1LendingProjectPositionListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingProjectPositionListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ([GetSapiV1LendingProjectPositionListResponseBody200])
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingProjectPositionListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingProjectPositionListResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/lending/project/position/list")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectPositionListParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "projectId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectPositionListParametersQueryProjectId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectPositionListParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectPositionListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectPositionListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectPositionListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/lending\/project\/position\/list.GET.parameters@ in the specification.
data GetSapiV1LendingProjectPositionListParameters = GetSapiV1LendingProjectPositionListParameters
  { -- | queryAsset: Represents the parameter named \'asset\'
    getSapiV1LendingProjectPositionListParametersQueryAsset :: Data.Text.Internal.Text,
    -- | queryProjectId: Represents the parameter named \'projectId\'
    getSapiV1LendingProjectPositionListParametersQueryProjectId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1LendingProjectPositionListParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1LendingProjectPositionListParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStatus: Represents the parameter named \'status\'
    --
    -- Default \`ALL\`
    getSapiV1LendingProjectPositionListParametersQueryStatus :: (GHC.Maybe.Maybe GetSapiV1LendingProjectPositionListParametersQueryStatus),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1LendingProjectPositionListParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingProjectPositionListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryAsset" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListParametersQueryAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryProjectId" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectPositionListParametersQueryProjectId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectPositionListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectPositionListParametersQueryStatus obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryAsset" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListParametersQueryAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryProjectId" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectPositionListParametersQueryProjectId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectPositionListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectPositionListParametersQueryStatus obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingProjectPositionListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LendingProjectPositionListParameters" (\obj -> (((((GHC.Base.pure GetSapiV1LendingProjectPositionListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryProjectId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1LendingProjectPositionListParameters' with all required fields.
mkGetSapiV1LendingProjectPositionListParameters ::
  -- | 'getSapiV1LendingProjectPositionListParametersQueryAsset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectPositionListParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectPositionListParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1LendingProjectPositionListParameters
mkGetSapiV1LendingProjectPositionListParameters getSapiV1LendingProjectPositionListParametersQueryAsset getSapiV1LendingProjectPositionListParametersQuerySignature getSapiV1LendingProjectPositionListParametersQueryTimestamp =
  GetSapiV1LendingProjectPositionListParameters
    { getSapiV1LendingProjectPositionListParametersQueryAsset = getSapiV1LendingProjectPositionListParametersQueryAsset,
      getSapiV1LendingProjectPositionListParametersQueryProjectId = GHC.Maybe.Nothing,
      getSapiV1LendingProjectPositionListParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1LendingProjectPositionListParametersQuerySignature = getSapiV1LendingProjectPositionListParametersQuerySignature,
      getSapiV1LendingProjectPositionListParametersQueryStatus = GHC.Maybe.Nothing,
      getSapiV1LendingProjectPositionListParametersQueryTimestamp = getSapiV1LendingProjectPositionListParametersQueryTimestamp
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/lending\/project\/position\/list.GET.parameters.properties.queryStatus@ in the specification.
--
-- Represents the parameter named \'status\'
--
-- Default \`ALL\`
data GetSapiV1LendingProjectPositionListParametersQueryStatus
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1LendingProjectPositionListParametersQueryStatusOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1LendingProjectPositionListParametersQueryStatusTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"ALL"@
    GetSapiV1LendingProjectPositionListParametersQueryStatusEnumALL
  | -- | Represents the JSON value @"SUBSCRIBABLE"@
    GetSapiV1LendingProjectPositionListParametersQueryStatusEnumSUBSCRIBABLE
  | -- | Represents the JSON value @"UNSUBSCRIBABLE"@
    GetSapiV1LendingProjectPositionListParametersQueryStatusEnumUNSUBSCRIBABLE
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingProjectPositionListParametersQueryStatus where
  toJSON (GetSapiV1LendingProjectPositionListParametersQueryStatusOther val) = val
  toJSON (GetSapiV1LendingProjectPositionListParametersQueryStatusTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1LendingProjectPositionListParametersQueryStatusEnumALL) = "ALL"
  toJSON (GetSapiV1LendingProjectPositionListParametersQueryStatusEnumSUBSCRIBABLE) = "SUBSCRIBABLE"
  toJSON (GetSapiV1LendingProjectPositionListParametersQueryStatusEnumUNSUBSCRIBABLE) = "UNSUBSCRIBABLE"

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingProjectPositionListParametersQueryStatus where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "ALL" -> GetSapiV1LendingProjectPositionListParametersQueryStatusEnumALL
            | val GHC.Classes.== "SUBSCRIBABLE" -> GetSapiV1LendingProjectPositionListParametersQueryStatusEnumSUBSCRIBABLE
            | val GHC.Classes.== "UNSUBSCRIBABLE" -> GetSapiV1LendingProjectPositionListParametersQueryStatusEnumUNSUBSCRIBABLE
            | GHC.Base.otherwise -> GetSapiV1LendingProjectPositionListParametersQueryStatusOther val
      )

-- | Represents a response of the operation 'getSapiV1LendingProjectPositionList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1LendingProjectPositionListResponseError' is used.
data GetSapiV1LendingProjectPositionListResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1LendingProjectPositionListResponseError GHC.Base.String
  | -- | List of fixed project positions
    GetSapiV1LendingProjectPositionListResponse200 ([GetSapiV1LendingProjectPositionListResponseBody200])
  | -- | Bad Request
    GetSapiV1LendingProjectPositionListResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1LendingProjectPositionListResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/lending\/project\/position\/list.GET.responses.200.content.application\/json.schema.items@ in the specification.
data GetSapiV1LendingProjectPositionListResponseBody200 = GetSapiV1LendingProjectPositionListResponseBody200
  { -- | asset
    getSapiV1LendingProjectPositionListResponseBody200Asset :: Data.Text.Internal.Text,
    -- | canTransfer
    getSapiV1LendingProjectPositionListResponseBody200CanTransfer :: GHC.Types.Bool,
    -- | createTimestamp
    getSapiV1LendingProjectPositionListResponseBody200CreateTimestamp :: GHC.Int.Int64,
    -- | duration
    getSapiV1LendingProjectPositionListResponseBody200Duration :: GHC.Int.Int64,
    -- | endTime
    getSapiV1LendingProjectPositionListResponseBody200EndTime :: GHC.Int.Int64,
    -- | interest
    getSapiV1LendingProjectPositionListResponseBody200Interest :: Data.Text.Internal.Text,
    -- | interestRate
    getSapiV1LendingProjectPositionListResponseBody200InterestRate :: Data.Text.Internal.Text,
    -- | lot
    getSapiV1LendingProjectPositionListResponseBody200Lot :: GHC.Int.Int64,
    -- | positionId
    getSapiV1LendingProjectPositionListResponseBody200PositionId :: GHC.Int.Int64,
    -- | principal
    getSapiV1LendingProjectPositionListResponseBody200Principal :: Data.Text.Internal.Text,
    -- | projectId
    getSapiV1LendingProjectPositionListResponseBody200ProjectId :: Data.Text.Internal.Text,
    -- | projectName
    getSapiV1LendingProjectPositionListResponseBody200ProjectName :: Data.Text.Internal.Text,
    -- | purchaseTime
    getSapiV1LendingProjectPositionListResponseBody200PurchaseTime :: GHC.Int.Int64,
    -- | redeemDate
    getSapiV1LendingProjectPositionListResponseBody200RedeemDate :: Data.Text.Internal.Text,
    -- | startTime
    getSapiV1LendingProjectPositionListResponseBody200StartTime :: GHC.Int.Int64,
    -- | status
    getSapiV1LendingProjectPositionListResponseBody200Status :: Data.Text.Internal.Text,
    -- | type
    getSapiV1LendingProjectPositionListResponseBody200Type :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingProjectPositionListResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200Asset obj] : ["canTransfer" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200CanTransfer obj] : ["createTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200CreateTimestamp obj] : ["duration" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200Duration obj] : ["endTime" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200EndTime obj] : ["interest" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200Interest obj] : ["interestRate" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200InterestRate obj] : ["lot" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200Lot obj] : ["positionId" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200PositionId obj] : ["principal" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200Principal obj] : ["projectId" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200ProjectId obj] : ["projectName" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200ProjectName obj] : ["purchaseTime" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200PurchaseTime obj] : ["redeemDate" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200RedeemDate obj] : ["startTime" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200StartTime obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200Status obj] : ["type" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200Type obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200Asset obj] : ["canTransfer" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200CanTransfer obj] : ["createTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200CreateTimestamp obj] : ["duration" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200Duration obj] : ["endTime" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200EndTime obj] : ["interest" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200Interest obj] : ["interestRate" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200InterestRate obj] : ["lot" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200Lot obj] : ["positionId" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200PositionId obj] : ["principal" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200Principal obj] : ["projectId" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200ProjectId obj] : ["projectName" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200ProjectName obj] : ["purchaseTime" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200PurchaseTime obj] : ["redeemDate" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200RedeemDate obj] : ["startTime" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200StartTime obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200Status obj] : ["type" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectPositionListResponseBody200Type obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingProjectPositionListResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LendingProjectPositionListResponseBody200" (\obj -> ((((((((((((((((GHC.Base.pure GetSapiV1LendingProjectPositionListResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "canTransfer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "createTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "duration")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "endTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interest")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interestRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "lot")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "positionId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "principal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "projectId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "projectName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "purchaseTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "redeemDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "startTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))

-- | Create a new 'GetSapiV1LendingProjectPositionListResponseBody200' with all required fields.
mkGetSapiV1LendingProjectPositionListResponseBody200 ::
  -- | 'getSapiV1LendingProjectPositionListResponseBody200Asset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200CanTransfer'
  GHC.Types.Bool ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200CreateTimestamp'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200Duration'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200EndTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200Interest'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200InterestRate'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200Lot'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200PositionId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200Principal'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200ProjectId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200ProjectName'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200PurchaseTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200RedeemDate'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200StartTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200Status'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectPositionListResponseBody200Type'
  Data.Text.Internal.Text ->
  GetSapiV1LendingProjectPositionListResponseBody200
mkGetSapiV1LendingProjectPositionListResponseBody200 getSapiV1LendingProjectPositionListResponseBody200Asset getSapiV1LendingProjectPositionListResponseBody200CanTransfer getSapiV1LendingProjectPositionListResponseBody200CreateTimestamp getSapiV1LendingProjectPositionListResponseBody200Duration getSapiV1LendingProjectPositionListResponseBody200EndTime getSapiV1LendingProjectPositionListResponseBody200Interest getSapiV1LendingProjectPositionListResponseBody200InterestRate getSapiV1LendingProjectPositionListResponseBody200Lot getSapiV1LendingProjectPositionListResponseBody200PositionId getSapiV1LendingProjectPositionListResponseBody200Principal getSapiV1LendingProjectPositionListResponseBody200ProjectId getSapiV1LendingProjectPositionListResponseBody200ProjectName getSapiV1LendingProjectPositionListResponseBody200PurchaseTime getSapiV1LendingProjectPositionListResponseBody200RedeemDate getSapiV1LendingProjectPositionListResponseBody200StartTime getSapiV1LendingProjectPositionListResponseBody200Status getSapiV1LendingProjectPositionListResponseBody200Type =
  GetSapiV1LendingProjectPositionListResponseBody200
    { getSapiV1LendingProjectPositionListResponseBody200Asset = getSapiV1LendingProjectPositionListResponseBody200Asset,
      getSapiV1LendingProjectPositionListResponseBody200CanTransfer = getSapiV1LendingProjectPositionListResponseBody200CanTransfer,
      getSapiV1LendingProjectPositionListResponseBody200CreateTimestamp = getSapiV1LendingProjectPositionListResponseBody200CreateTimestamp,
      getSapiV1LendingProjectPositionListResponseBody200Duration = getSapiV1LendingProjectPositionListResponseBody200Duration,
      getSapiV1LendingProjectPositionListResponseBody200EndTime = getSapiV1LendingProjectPositionListResponseBody200EndTime,
      getSapiV1LendingProjectPositionListResponseBody200Interest = getSapiV1LendingProjectPositionListResponseBody200Interest,
      getSapiV1LendingProjectPositionListResponseBody200InterestRate = getSapiV1LendingProjectPositionListResponseBody200InterestRate,
      getSapiV1LendingProjectPositionListResponseBody200Lot = getSapiV1LendingProjectPositionListResponseBody200Lot,
      getSapiV1LendingProjectPositionListResponseBody200PositionId = getSapiV1LendingProjectPositionListResponseBody200PositionId,
      getSapiV1LendingProjectPositionListResponseBody200Principal = getSapiV1LendingProjectPositionListResponseBody200Principal,
      getSapiV1LendingProjectPositionListResponseBody200ProjectId = getSapiV1LendingProjectPositionListResponseBody200ProjectId,
      getSapiV1LendingProjectPositionListResponseBody200ProjectName = getSapiV1LendingProjectPositionListResponseBody200ProjectName,
      getSapiV1LendingProjectPositionListResponseBody200PurchaseTime = getSapiV1LendingProjectPositionListResponseBody200PurchaseTime,
      getSapiV1LendingProjectPositionListResponseBody200RedeemDate = getSapiV1LendingProjectPositionListResponseBody200RedeemDate,
      getSapiV1LendingProjectPositionListResponseBody200StartTime = getSapiV1LendingProjectPositionListResponseBody200StartTime,
      getSapiV1LendingProjectPositionListResponseBody200Status = getSapiV1LendingProjectPositionListResponseBody200Status,
      getSapiV1LendingProjectPositionListResponseBody200Type = getSapiV1LendingProjectPositionListResponseBody200Type
    }

-- | > GET /sapi/v1/lending/project/position/list
--
-- The same as 'getSapiV1LendingProjectPositionList' but accepts an explicit configuration.
getSapiV1LendingProjectPositionListWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingProjectPositionListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1LendingProjectPositionListResponse)
getSapiV1LendingProjectPositionListWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1LendingProjectPositionListResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingProjectPositionListResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              ([GetSapiV1LendingProjectPositionListResponseBody200])
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingProjectPositionListResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingProjectPositionListResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/lending/project/position/list")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectPositionListParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "projectId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectPositionListParametersQueryProjectId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectPositionListParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectPositionListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectPositionListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectPositionListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/lending/project/position/list
--
-- The same as 'getSapiV1LendingProjectPositionList' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LendingProjectPositionListRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingProjectPositionListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LendingProjectPositionListRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/lending/project/position/list")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectPositionListParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "projectId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectPositionListParametersQueryProjectId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectPositionListParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectPositionListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectPositionListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectPositionListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/lending/project/position/list
--
-- The same as 'getSapiV1LendingProjectPositionList' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LendingProjectPositionListWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingProjectPositionListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LendingProjectPositionListWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/lending/project/position/list")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectPositionListParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "projectId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectPositionListParametersQueryProjectId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectPositionListParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectPositionListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectPositionListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectPositionListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
