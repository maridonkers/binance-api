{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1FuturesLoanRepayHistory
module Binance.Operations.GetSapiV1FuturesLoanRepayHistory where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/futures/loan/repay/history
--
-- Weight(IP): 10
getSapiV1FuturesLoanRepayHistory ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanRepayHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1FuturesLoanRepayHistoryResponse)
getSapiV1FuturesLoanRepayHistory parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1FuturesLoanRepayHistoryResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1FuturesLoanRepayHistoryResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1FuturesLoanRepayHistoryResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1FuturesLoanRepayHistoryResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1FuturesLoanRepayHistoryResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/futures/loan/repay/history")
        [ Binance.Common.QueryParameter (Data.Text.pack "coin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanRepayHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanRepayHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/futures\/loan\/repay\/history.GET.parameters@ in the specification.
data GetSapiV1FuturesLoanRepayHistoryParameters = GetSapiV1FuturesLoanRepayHistoryParameters
  { -- | queryCoin: Represents the parameter named \'coin\'
    --
    -- Coin name
    getSapiV1FuturesLoanRepayHistoryParametersQueryCoin :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1FuturesLoanRepayHistoryParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- Default 500; max 1000.
    getSapiV1FuturesLoanRepayHistoryParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1FuturesLoanRepayHistoryParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1FuturesLoanRepayHistoryParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1FuturesLoanRepayHistoryParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1FuturesLoanRepayHistoryParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1FuturesLoanRepayHistoryParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanRepayHistoryParametersQueryCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanRepayHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanRepayHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanRepayHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanRepayHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanRepayHistoryParametersQueryCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanRepayHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanRepayHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanRepayHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanRepayHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1FuturesLoanRepayHistoryParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1FuturesLoanRepayHistoryParameters" (\obj -> ((((((GHC.Base.pure GetSapiV1FuturesLoanRepayHistoryParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1FuturesLoanRepayHistoryParameters' with all required fields.
mkGetSapiV1FuturesLoanRepayHistoryParameters ::
  -- | 'getSapiV1FuturesLoanRepayHistoryParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanRepayHistoryParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1FuturesLoanRepayHistoryParameters
mkGetSapiV1FuturesLoanRepayHistoryParameters getSapiV1FuturesLoanRepayHistoryParametersQuerySignature getSapiV1FuturesLoanRepayHistoryParametersQueryTimestamp =
  GetSapiV1FuturesLoanRepayHistoryParameters
    { getSapiV1FuturesLoanRepayHistoryParametersQueryCoin = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanRepayHistoryParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanRepayHistoryParametersQueryLimit = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanRepayHistoryParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanRepayHistoryParametersQuerySignature = getSapiV1FuturesLoanRepayHistoryParametersQuerySignature,
      getSapiV1FuturesLoanRepayHistoryParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanRepayHistoryParametersQueryTimestamp = getSapiV1FuturesLoanRepayHistoryParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1FuturesLoanRepayHistory'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1FuturesLoanRepayHistoryResponseError' is used.
data GetSapiV1FuturesLoanRepayHistoryResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1FuturesLoanRepayHistoryResponseError GHC.Base.String
  | -- | Cross-Collateral Repayment History
    GetSapiV1FuturesLoanRepayHistoryResponse200 GetSapiV1FuturesLoanRepayHistoryResponseBody200
  | -- | Bad Request
    GetSapiV1FuturesLoanRepayHistoryResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1FuturesLoanRepayHistoryResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/futures\/loan\/repay\/history.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1FuturesLoanRepayHistoryResponseBody200 = GetSapiV1FuturesLoanRepayHistoryResponseBody200
  { -- | rows
    getSapiV1FuturesLoanRepayHistoryResponseBody200Rows :: ([GetSapiV1FuturesLoanRepayHistoryResponseBody200Rows]),
    -- | total
    getSapiV1FuturesLoanRepayHistoryResponseBody200Total :: GHC.Int.Int32
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1FuturesLoanRepayHistoryResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200Total obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200Total obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1FuturesLoanRepayHistoryResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1FuturesLoanRepayHistoryResponseBody200" (\obj -> (GHC.Base.pure GetSapiV1FuturesLoanRepayHistoryResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "rows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'GetSapiV1FuturesLoanRepayHistoryResponseBody200' with all required fields.
mkGetSapiV1FuturesLoanRepayHistoryResponseBody200 ::
  -- | 'getSapiV1FuturesLoanRepayHistoryResponseBody200Rows'
  [GetSapiV1FuturesLoanRepayHistoryResponseBody200Rows] ->
  -- | 'getSapiV1FuturesLoanRepayHistoryResponseBody200Total'
  GHC.Int.Int32 ->
  GetSapiV1FuturesLoanRepayHistoryResponseBody200
mkGetSapiV1FuturesLoanRepayHistoryResponseBody200 getSapiV1FuturesLoanRepayHistoryResponseBody200Rows getSapiV1FuturesLoanRepayHistoryResponseBody200Total =
  GetSapiV1FuturesLoanRepayHistoryResponseBody200
    { getSapiV1FuturesLoanRepayHistoryResponseBody200Rows = getSapiV1FuturesLoanRepayHistoryResponseBody200Rows,
      getSapiV1FuturesLoanRepayHistoryResponseBody200Total = getSapiV1FuturesLoanRepayHistoryResponseBody200Total
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/futures\/loan\/repay\/history.GET.responses.200.content.application\/json.schema.properties.rows.items@ in the specification.
data GetSapiV1FuturesLoanRepayHistoryResponseBody200Rows = GetSapiV1FuturesLoanRepayHistoryResponseBody200Rows
  { -- | amount
    getSapiV1FuturesLoanRepayHistoryResponseBody200RowsAmount :: Data.Text.Internal.Text,
    -- | coin
    getSapiV1FuturesLoanRepayHistoryResponseBody200RowsCoin :: Data.Text.Internal.Text,
    -- | collateralCoin
    getSapiV1FuturesLoanRepayHistoryResponseBody200RowsCollateralCoin :: Data.Text.Internal.Text,
    -- | confirmedTime
    getSapiV1FuturesLoanRepayHistoryResponseBody200RowsConfirmedTime :: GHC.Int.Int64,
    -- | price
    getSapiV1FuturesLoanRepayHistoryResponseBody200RowsPrice :: Data.Text.Internal.Text,
    -- | releasedCollateral
    getSapiV1FuturesLoanRepayHistoryResponseBody200RowsReleasedCollateral :: Data.Text.Internal.Text,
    -- | repayCollateral
    getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayCollateral :: Data.Text.Internal.Text,
    -- | repayId
    getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayId :: Data.Text.Internal.Text,
    -- | repayType
    getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayType :: Data.Text.Internal.Text,
    -- | status
    getSapiV1FuturesLoanRepayHistoryResponseBody200RowsStatus :: Data.Text.Internal.Text,
    -- | updateTime
    getSapiV1FuturesLoanRepayHistoryResponseBody200RowsUpdateTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1FuturesLoanRepayHistoryResponseBody200Rows where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsAmount obj] : ["coin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsCoin obj] : ["collateralCoin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsCollateralCoin obj] : ["confirmedTime" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsConfirmedTime obj] : ["price" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsPrice obj] : ["releasedCollateral" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsReleasedCollateral obj] : ["repayCollateral" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayCollateral obj] : ["repayId" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayId obj] : ["repayType" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayType obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsStatus obj] : ["updateTime" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsUpdateTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsAmount obj] : ["coin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsCoin obj] : ["collateralCoin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsCollateralCoin obj] : ["confirmedTime" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsConfirmedTime obj] : ["price" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsPrice obj] : ["releasedCollateral" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsReleasedCollateral obj] : ["repayCollateral" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayCollateral obj] : ["repayId" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayId obj] : ["repayType" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayType obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsStatus obj] : ["updateTime" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanRepayHistoryResponseBody200RowsUpdateTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1FuturesLoanRepayHistoryResponseBody200Rows where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1FuturesLoanRepayHistoryResponseBody200Rows" (\obj -> ((((((((((GHC.Base.pure GetSapiV1FuturesLoanRepayHistoryResponseBody200Rows GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "coin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "collateralCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "confirmedTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "price")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "releasedCollateral")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "repayCollateral")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "repayId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "repayType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "updateTime"))

-- | Create a new 'GetSapiV1FuturesLoanRepayHistoryResponseBody200Rows' with all required fields.
mkGetSapiV1FuturesLoanRepayHistoryResponseBody200Rows ::
  -- | 'getSapiV1FuturesLoanRepayHistoryResponseBody200RowsAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanRepayHistoryResponseBody200RowsCoin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanRepayHistoryResponseBody200RowsCollateralCoin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanRepayHistoryResponseBody200RowsConfirmedTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1FuturesLoanRepayHistoryResponseBody200RowsPrice'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanRepayHistoryResponseBody200RowsReleasedCollateral'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayCollateral'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayType'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanRepayHistoryResponseBody200RowsStatus'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanRepayHistoryResponseBody200RowsUpdateTime'
  GHC.Int.Int64 ->
  GetSapiV1FuturesLoanRepayHistoryResponseBody200Rows
mkGetSapiV1FuturesLoanRepayHistoryResponseBody200Rows getSapiV1FuturesLoanRepayHistoryResponseBody200RowsAmount getSapiV1FuturesLoanRepayHistoryResponseBody200RowsCoin getSapiV1FuturesLoanRepayHistoryResponseBody200RowsCollateralCoin getSapiV1FuturesLoanRepayHistoryResponseBody200RowsConfirmedTime getSapiV1FuturesLoanRepayHistoryResponseBody200RowsPrice getSapiV1FuturesLoanRepayHistoryResponseBody200RowsReleasedCollateral getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayCollateral getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayId getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayType getSapiV1FuturesLoanRepayHistoryResponseBody200RowsStatus getSapiV1FuturesLoanRepayHistoryResponseBody200RowsUpdateTime =
  GetSapiV1FuturesLoanRepayHistoryResponseBody200Rows
    { getSapiV1FuturesLoanRepayHistoryResponseBody200RowsAmount = getSapiV1FuturesLoanRepayHistoryResponseBody200RowsAmount,
      getSapiV1FuturesLoanRepayHistoryResponseBody200RowsCoin = getSapiV1FuturesLoanRepayHistoryResponseBody200RowsCoin,
      getSapiV1FuturesLoanRepayHistoryResponseBody200RowsCollateralCoin = getSapiV1FuturesLoanRepayHistoryResponseBody200RowsCollateralCoin,
      getSapiV1FuturesLoanRepayHistoryResponseBody200RowsConfirmedTime = getSapiV1FuturesLoanRepayHistoryResponseBody200RowsConfirmedTime,
      getSapiV1FuturesLoanRepayHistoryResponseBody200RowsPrice = getSapiV1FuturesLoanRepayHistoryResponseBody200RowsPrice,
      getSapiV1FuturesLoanRepayHistoryResponseBody200RowsReleasedCollateral = getSapiV1FuturesLoanRepayHistoryResponseBody200RowsReleasedCollateral,
      getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayCollateral = getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayCollateral,
      getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayId = getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayId,
      getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayType = getSapiV1FuturesLoanRepayHistoryResponseBody200RowsRepayType,
      getSapiV1FuturesLoanRepayHistoryResponseBody200RowsStatus = getSapiV1FuturesLoanRepayHistoryResponseBody200RowsStatus,
      getSapiV1FuturesLoanRepayHistoryResponseBody200RowsUpdateTime = getSapiV1FuturesLoanRepayHistoryResponseBody200RowsUpdateTime
    }

-- | > GET /sapi/v1/futures/loan/repay/history
--
-- The same as 'getSapiV1FuturesLoanRepayHistory' but accepts an explicit configuration.
getSapiV1FuturesLoanRepayHistoryWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanRepayHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1FuturesLoanRepayHistoryResponse)
getSapiV1FuturesLoanRepayHistoryWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1FuturesLoanRepayHistoryResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1FuturesLoanRepayHistoryResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1FuturesLoanRepayHistoryResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1FuturesLoanRepayHistoryResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1FuturesLoanRepayHistoryResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/futures/loan/repay/history")
          [ Binance.Common.QueryParameter (Data.Text.pack "coin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanRepayHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanRepayHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/futures/loan/repay/history
--
-- The same as 'getSapiV1FuturesLoanRepayHistory' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1FuturesLoanRepayHistoryRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanRepayHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1FuturesLoanRepayHistoryRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/futures/loan/repay/history")
        [ Binance.Common.QueryParameter (Data.Text.pack "coin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanRepayHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanRepayHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/futures/loan/repay/history
--
-- The same as 'getSapiV1FuturesLoanRepayHistory' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1FuturesLoanRepayHistoryWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanRepayHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1FuturesLoanRepayHistoryWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/futures/loan/repay/history")
          [ Binance.Common.QueryParameter (Data.Text.pack "coin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanRepayHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanRepayHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanRepayHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
