{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1MarginForceLiquidationRec
module Binance.Operations.GetSapiV1MarginForceLiquidationRec where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/margin/forceLiquidationRec
--
-- - Response in descending order
--
-- Weight(IP): 1
getSapiV1MarginForceLiquidationRec ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginForceLiquidationRecParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1MarginForceLiquidationRecResponse)
getSapiV1MarginForceLiquidationRec parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1MarginForceLiquidationRecResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginForceLiquidationRecResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1MarginForceLiquidationRecResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginForceLiquidationRecResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginForceLiquidationRecResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/forceLiquidationRec")
        [ Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginForceLiquidationRecParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginForceLiquidationRecParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/forceLiquidationRec.GET.parameters@ in the specification.
data GetSapiV1MarginForceLiquidationRecParameters = GetSapiV1MarginForceLiquidationRecParameters
  { -- | queryCurrent: Represents the parameter named \'current\'
    --
    -- Current querying page. Start from 1. Default:1
    getSapiV1MarginForceLiquidationRecParametersQueryCurrent :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginForceLiquidationRecParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryIsolatedSymbol: Represents the parameter named \'isolatedSymbol\'
    --
    -- Isolated symbol
    getSapiV1MarginForceLiquidationRecParametersQueryIsolatedSymbol :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1MarginForceLiquidationRecParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1MarginForceLiquidationRecParametersQuerySignature :: Data.Text.Internal.Text,
    -- | querySize: Represents the parameter named \'size\'
    --
    -- Default:10 Max:100
    getSapiV1MarginForceLiquidationRecParametersQuerySize :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginForceLiquidationRecParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginForceLiquidationRecParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginForceLiquidationRecParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginForceLiquidationRecParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginForceLiquidationRecParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsolatedSymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginForceLiquidationRecParametersQueryIsolatedSymbol obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginForceLiquidationRecParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginForceLiquidationRecParametersQuerySize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginForceLiquidationRecParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginForceLiquidationRecParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginForceLiquidationRecParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsolatedSymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginForceLiquidationRecParametersQueryIsolatedSymbol obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginForceLiquidationRecParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginForceLiquidationRecParametersQuerySize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginForceLiquidationRecParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginForceLiquidationRecParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginForceLiquidationRecParameters" (\obj -> (((((((GHC.Base.pure GetSapiV1MarginForceLiquidationRecParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCurrent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryIsolatedSymbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySize")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1MarginForceLiquidationRecParameters' with all required fields.
mkGetSapiV1MarginForceLiquidationRecParameters ::
  -- | 'getSapiV1MarginForceLiquidationRecParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginForceLiquidationRecParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1MarginForceLiquidationRecParameters
mkGetSapiV1MarginForceLiquidationRecParameters getSapiV1MarginForceLiquidationRecParametersQuerySignature getSapiV1MarginForceLiquidationRecParametersQueryTimestamp =
  GetSapiV1MarginForceLiquidationRecParameters
    { getSapiV1MarginForceLiquidationRecParametersQueryCurrent = GHC.Maybe.Nothing,
      getSapiV1MarginForceLiquidationRecParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1MarginForceLiquidationRecParametersQueryIsolatedSymbol = GHC.Maybe.Nothing,
      getSapiV1MarginForceLiquidationRecParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1MarginForceLiquidationRecParametersQuerySignature = getSapiV1MarginForceLiquidationRecParametersQuerySignature,
      getSapiV1MarginForceLiquidationRecParametersQuerySize = GHC.Maybe.Nothing,
      getSapiV1MarginForceLiquidationRecParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1MarginForceLiquidationRecParametersQueryTimestamp = getSapiV1MarginForceLiquidationRecParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1MarginForceLiquidationRec'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1MarginForceLiquidationRecResponseError' is used.
data GetSapiV1MarginForceLiquidationRecResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1MarginForceLiquidationRecResponseError GHC.Base.String
  | -- | Force Liquidation History, response in descending order
    GetSapiV1MarginForceLiquidationRecResponse200 GetSapiV1MarginForceLiquidationRecResponseBody200
  | -- | Bad Request
    GetSapiV1MarginForceLiquidationRecResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1MarginForceLiquidationRecResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/forceLiquidationRec.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1MarginForceLiquidationRecResponseBody200 = GetSapiV1MarginForceLiquidationRecResponseBody200
  { -- | rows
    getSapiV1MarginForceLiquidationRecResponseBody200Rows :: ([GetSapiV1MarginForceLiquidationRecResponseBody200Rows]),
    -- | total
    getSapiV1MarginForceLiquidationRecResponseBody200Total :: GHC.Int.Int32
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginForceLiquidationRecResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200Total obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200Total obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginForceLiquidationRecResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginForceLiquidationRecResponseBody200" (\obj -> (GHC.Base.pure GetSapiV1MarginForceLiquidationRecResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "rows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'GetSapiV1MarginForceLiquidationRecResponseBody200' with all required fields.
mkGetSapiV1MarginForceLiquidationRecResponseBody200 ::
  -- | 'getSapiV1MarginForceLiquidationRecResponseBody200Rows'
  [GetSapiV1MarginForceLiquidationRecResponseBody200Rows] ->
  -- | 'getSapiV1MarginForceLiquidationRecResponseBody200Total'
  GHC.Int.Int32 ->
  GetSapiV1MarginForceLiquidationRecResponseBody200
mkGetSapiV1MarginForceLiquidationRecResponseBody200 getSapiV1MarginForceLiquidationRecResponseBody200Rows getSapiV1MarginForceLiquidationRecResponseBody200Total =
  GetSapiV1MarginForceLiquidationRecResponseBody200
    { getSapiV1MarginForceLiquidationRecResponseBody200Rows = getSapiV1MarginForceLiquidationRecResponseBody200Rows,
      getSapiV1MarginForceLiquidationRecResponseBody200Total = getSapiV1MarginForceLiquidationRecResponseBody200Total
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/forceLiquidationRec.GET.responses.200.content.application\/json.schema.properties.rows.items@ in the specification.
data GetSapiV1MarginForceLiquidationRecResponseBody200Rows = GetSapiV1MarginForceLiquidationRecResponseBody200Rows
  { -- | avgPrice
    getSapiV1MarginForceLiquidationRecResponseBody200RowsAvgPrice :: Data.Text.Internal.Text,
    -- | executedQty
    getSapiV1MarginForceLiquidationRecResponseBody200RowsExecutedQty :: Data.Text.Internal.Text,
    -- | isIsolated
    getSapiV1MarginForceLiquidationRecResponseBody200RowsIsIsolated :: GHC.Types.Bool,
    -- | orderId
    getSapiV1MarginForceLiquidationRecResponseBody200RowsOrderId :: GHC.Int.Int64,
    -- | price
    getSapiV1MarginForceLiquidationRecResponseBody200RowsPrice :: Data.Text.Internal.Text,
    -- | qty
    getSapiV1MarginForceLiquidationRecResponseBody200RowsQty :: Data.Text.Internal.Text,
    -- | side
    getSapiV1MarginForceLiquidationRecResponseBody200RowsSide :: Data.Text.Internal.Text,
    -- | symbol
    getSapiV1MarginForceLiquidationRecResponseBody200RowsSymbol :: Data.Text.Internal.Text,
    -- | timeInForce
    getSapiV1MarginForceLiquidationRecResponseBody200RowsTimeInForce :: Data.Text.Internal.Text,
    -- | updatedTime
    getSapiV1MarginForceLiquidationRecResponseBody200RowsUpdatedTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginForceLiquidationRecResponseBody200Rows where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["avgPrice" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsAvgPrice obj] : ["executedQty" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsExecutedQty obj] : ["isIsolated" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsIsIsolated obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsOrderId obj] : ["price" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsPrice obj] : ["qty" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsQty obj] : ["side" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsSide obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsSymbol obj] : ["timeInForce" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsTimeInForce obj] : ["updatedTime" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsUpdatedTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["avgPrice" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsAvgPrice obj] : ["executedQty" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsExecutedQty obj] : ["isIsolated" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsIsIsolated obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsOrderId obj] : ["price" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsPrice obj] : ["qty" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsQty obj] : ["side" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsSide obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsSymbol obj] : ["timeInForce" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsTimeInForce obj] : ["updatedTime" Data.Aeson.Types.ToJSON..= getSapiV1MarginForceLiquidationRecResponseBody200RowsUpdatedTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginForceLiquidationRecResponseBody200Rows where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginForceLiquidationRecResponseBody200Rows" (\obj -> (((((((((GHC.Base.pure GetSapiV1MarginForceLiquidationRecResponseBody200Rows GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "avgPrice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "executedQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "isIsolated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "price")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "qty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "side")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "timeInForce")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "updatedTime"))

-- | Create a new 'GetSapiV1MarginForceLiquidationRecResponseBody200Rows' with all required fields.
mkGetSapiV1MarginForceLiquidationRecResponseBody200Rows ::
  -- | 'getSapiV1MarginForceLiquidationRecResponseBody200RowsAvgPrice'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginForceLiquidationRecResponseBody200RowsExecutedQty'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginForceLiquidationRecResponseBody200RowsIsIsolated'
  GHC.Types.Bool ->
  -- | 'getSapiV1MarginForceLiquidationRecResponseBody200RowsOrderId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MarginForceLiquidationRecResponseBody200RowsPrice'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginForceLiquidationRecResponseBody200RowsQty'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginForceLiquidationRecResponseBody200RowsSide'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginForceLiquidationRecResponseBody200RowsSymbol'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginForceLiquidationRecResponseBody200RowsTimeInForce'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginForceLiquidationRecResponseBody200RowsUpdatedTime'
  GHC.Int.Int64 ->
  GetSapiV1MarginForceLiquidationRecResponseBody200Rows
mkGetSapiV1MarginForceLiquidationRecResponseBody200Rows getSapiV1MarginForceLiquidationRecResponseBody200RowsAvgPrice getSapiV1MarginForceLiquidationRecResponseBody200RowsExecutedQty getSapiV1MarginForceLiquidationRecResponseBody200RowsIsIsolated getSapiV1MarginForceLiquidationRecResponseBody200RowsOrderId getSapiV1MarginForceLiquidationRecResponseBody200RowsPrice getSapiV1MarginForceLiquidationRecResponseBody200RowsQty getSapiV1MarginForceLiquidationRecResponseBody200RowsSide getSapiV1MarginForceLiquidationRecResponseBody200RowsSymbol getSapiV1MarginForceLiquidationRecResponseBody200RowsTimeInForce getSapiV1MarginForceLiquidationRecResponseBody200RowsUpdatedTime =
  GetSapiV1MarginForceLiquidationRecResponseBody200Rows
    { getSapiV1MarginForceLiquidationRecResponseBody200RowsAvgPrice = getSapiV1MarginForceLiquidationRecResponseBody200RowsAvgPrice,
      getSapiV1MarginForceLiquidationRecResponseBody200RowsExecutedQty = getSapiV1MarginForceLiquidationRecResponseBody200RowsExecutedQty,
      getSapiV1MarginForceLiquidationRecResponseBody200RowsIsIsolated = getSapiV1MarginForceLiquidationRecResponseBody200RowsIsIsolated,
      getSapiV1MarginForceLiquidationRecResponseBody200RowsOrderId = getSapiV1MarginForceLiquidationRecResponseBody200RowsOrderId,
      getSapiV1MarginForceLiquidationRecResponseBody200RowsPrice = getSapiV1MarginForceLiquidationRecResponseBody200RowsPrice,
      getSapiV1MarginForceLiquidationRecResponseBody200RowsQty = getSapiV1MarginForceLiquidationRecResponseBody200RowsQty,
      getSapiV1MarginForceLiquidationRecResponseBody200RowsSide = getSapiV1MarginForceLiquidationRecResponseBody200RowsSide,
      getSapiV1MarginForceLiquidationRecResponseBody200RowsSymbol = getSapiV1MarginForceLiquidationRecResponseBody200RowsSymbol,
      getSapiV1MarginForceLiquidationRecResponseBody200RowsTimeInForce = getSapiV1MarginForceLiquidationRecResponseBody200RowsTimeInForce,
      getSapiV1MarginForceLiquidationRecResponseBody200RowsUpdatedTime = getSapiV1MarginForceLiquidationRecResponseBody200RowsUpdatedTime
    }

-- | > GET /sapi/v1/margin/forceLiquidationRec
--
-- The same as 'getSapiV1MarginForceLiquidationRec' but accepts an explicit configuration.
getSapiV1MarginForceLiquidationRecWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginForceLiquidationRecParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1MarginForceLiquidationRecResponse)
getSapiV1MarginForceLiquidationRecWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1MarginForceLiquidationRecResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginForceLiquidationRecResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1MarginForceLiquidationRecResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginForceLiquidationRecResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginForceLiquidationRecResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/forceLiquidationRec")
          [ Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginForceLiquidationRecParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginForceLiquidationRecParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/margin/forceLiquidationRec
--
-- The same as 'getSapiV1MarginForceLiquidationRec' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginForceLiquidationRecRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginForceLiquidationRecParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginForceLiquidationRecRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/forceLiquidationRec")
        [ Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginForceLiquidationRecParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginForceLiquidationRecParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/margin/forceLiquidationRec
--
-- The same as 'getSapiV1MarginForceLiquidationRec' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginForceLiquidationRecWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginForceLiquidationRecParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginForceLiquidationRecWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/forceLiquidationRec")
          [ Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginForceLiquidationRecParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginForceLiquidationRecParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginForceLiquidationRecParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
