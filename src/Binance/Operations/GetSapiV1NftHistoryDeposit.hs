{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1NftHistoryDeposit
module Binance.Operations.GetSapiV1NftHistoryDeposit where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/nft/history/deposit
--
-- - The max interval between startTime and endTime is 90 days.
-- - If startTime and endTime are not sent, the recent 7 days\' data will be returned.
--
-- Weight(UID): 3000
getSapiV1NftHistoryDeposit ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1NftHistoryDepositParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1NftHistoryDepositResponse)
getSapiV1NftHistoryDeposit parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1NftHistoryDepositResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1NftHistoryDepositResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1NftHistoryDepositResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1NftHistoryDepositResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1NftHistoryDepositResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/nft/history/deposit")
        [ Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1NftHistoryDepositParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1NftHistoryDepositParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/nft\/history\/deposit.GET.parameters@ in the specification.
data GetSapiV1NftHistoryDepositParameters = GetSapiV1NftHistoryDepositParameters
  { -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1NftHistoryDepositParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- Default 50, Max 50
    getSapiV1NftHistoryDepositParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- Default 1
    getSapiV1NftHistoryDepositParametersQueryPage :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1NftHistoryDepositParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1NftHistoryDepositParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1NftHistoryDepositParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1NftHistoryDepositParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1NftHistoryDepositParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1NftHistoryDepositParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1NftHistoryDepositParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (getSapiV1NftHistoryDepositParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1NftHistoryDepositParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1NftHistoryDepositParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1NftHistoryDepositParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1NftHistoryDepositParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (getSapiV1NftHistoryDepositParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1NftHistoryDepositParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1NftHistoryDepositParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1NftHistoryDepositParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1NftHistoryDepositParameters" (\obj -> ((((((GHC.Base.pure GetSapiV1NftHistoryDepositParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1NftHistoryDepositParameters' with all required fields.
mkGetSapiV1NftHistoryDepositParameters ::
  -- | 'getSapiV1NftHistoryDepositParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1NftHistoryDepositParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1NftHistoryDepositParameters
mkGetSapiV1NftHistoryDepositParameters getSapiV1NftHistoryDepositParametersQuerySignature getSapiV1NftHistoryDepositParametersQueryTimestamp =
  GetSapiV1NftHistoryDepositParameters
    { getSapiV1NftHistoryDepositParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1NftHistoryDepositParametersQueryLimit = GHC.Maybe.Nothing,
      getSapiV1NftHistoryDepositParametersQueryPage = GHC.Maybe.Nothing,
      getSapiV1NftHistoryDepositParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1NftHistoryDepositParametersQuerySignature = getSapiV1NftHistoryDepositParametersQuerySignature,
      getSapiV1NftHistoryDepositParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1NftHistoryDepositParametersQueryTimestamp = getSapiV1NftHistoryDepositParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1NftHistoryDeposit'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1NftHistoryDepositResponseError' is used.
data GetSapiV1NftHistoryDepositResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1NftHistoryDepositResponseError GHC.Base.String
  | -- | NFT Deposit History
    GetSapiV1NftHistoryDepositResponse200 GetSapiV1NftHistoryDepositResponseBody200
  | -- | Bad Request
    GetSapiV1NftHistoryDepositResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1NftHistoryDepositResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/nft\/history\/deposit.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1NftHistoryDepositResponseBody200 = GetSapiV1NftHistoryDepositResponseBody200
  { -- | list
    getSapiV1NftHistoryDepositResponseBody200List :: ([GetSapiV1NftHistoryDepositResponseBody200List]),
    -- | total
    getSapiV1NftHistoryDepositResponseBody200Total :: GHC.Int.Int32
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1NftHistoryDepositResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["list" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositResponseBody200List obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositResponseBody200Total obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["list" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositResponseBody200List obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositResponseBody200Total obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1NftHistoryDepositResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1NftHistoryDepositResponseBody200" (\obj -> (GHC.Base.pure GetSapiV1NftHistoryDepositResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "list")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'GetSapiV1NftHistoryDepositResponseBody200' with all required fields.
mkGetSapiV1NftHistoryDepositResponseBody200 ::
  -- | 'getSapiV1NftHistoryDepositResponseBody200List'
  [GetSapiV1NftHistoryDepositResponseBody200List] ->
  -- | 'getSapiV1NftHistoryDepositResponseBody200Total'
  GHC.Int.Int32 ->
  GetSapiV1NftHistoryDepositResponseBody200
mkGetSapiV1NftHistoryDepositResponseBody200 getSapiV1NftHistoryDepositResponseBody200List getSapiV1NftHistoryDepositResponseBody200Total =
  GetSapiV1NftHistoryDepositResponseBody200
    { getSapiV1NftHistoryDepositResponseBody200List = getSapiV1NftHistoryDepositResponseBody200List,
      getSapiV1NftHistoryDepositResponseBody200Total = getSapiV1NftHistoryDepositResponseBody200Total
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/nft\/history\/deposit.GET.responses.200.content.application\/json.schema.properties.list.items@ in the specification.
data GetSapiV1NftHistoryDepositResponseBody200List = GetSapiV1NftHistoryDepositResponseBody200List
  { -- | contractAdrress
    getSapiV1NftHistoryDepositResponseBody200ListContractAdrress :: Data.Text.Internal.Text,
    -- | network
    getSapiV1NftHistoryDepositResponseBody200ListNetwork :: Data.Text.Internal.Text,
    -- | timestamp
    getSapiV1NftHistoryDepositResponseBody200ListTimestamp :: GHC.Int.Int64,
    -- | tokenId
    getSapiV1NftHistoryDepositResponseBody200ListTokenId :: Data.Text.Internal.Text,
    -- | txID
    getSapiV1NftHistoryDepositResponseBody200ListTxID :: (Binance.Common.Nullable GHC.Types.Int)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1NftHistoryDepositResponseBody200List where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["contractAdrress" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositResponseBody200ListContractAdrress obj] : ["network" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositResponseBody200ListNetwork obj] : ["timestamp" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositResponseBody200ListTimestamp obj] : ["tokenId" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositResponseBody200ListTokenId obj] : ["txID" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositResponseBody200ListTxID obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["contractAdrress" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositResponseBody200ListContractAdrress obj] : ["network" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositResponseBody200ListNetwork obj] : ["timestamp" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositResponseBody200ListTimestamp obj] : ["tokenId" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositResponseBody200ListTokenId obj] : ["txID" Data.Aeson.Types.ToJSON..= getSapiV1NftHistoryDepositResponseBody200ListTxID obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1NftHistoryDepositResponseBody200List where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1NftHistoryDepositResponseBody200List" (\obj -> ((((GHC.Base.pure GetSapiV1NftHistoryDepositResponseBody200List GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "contractAdrress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "network")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "timestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tokenId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "txID"))

-- | Create a new 'GetSapiV1NftHistoryDepositResponseBody200List' with all required fields.
mkGetSapiV1NftHistoryDepositResponseBody200List ::
  -- | 'getSapiV1NftHistoryDepositResponseBody200ListContractAdrress'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1NftHistoryDepositResponseBody200ListNetwork'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1NftHistoryDepositResponseBody200ListTimestamp'
  GHC.Int.Int64 ->
  -- | 'getSapiV1NftHistoryDepositResponseBody200ListTokenId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1NftHistoryDepositResponseBody200ListTxID'
  Binance.Common.Nullable GHC.Types.Int ->
  GetSapiV1NftHistoryDepositResponseBody200List
mkGetSapiV1NftHistoryDepositResponseBody200List getSapiV1NftHistoryDepositResponseBody200ListContractAdrress getSapiV1NftHistoryDepositResponseBody200ListNetwork getSapiV1NftHistoryDepositResponseBody200ListTimestamp getSapiV1NftHistoryDepositResponseBody200ListTokenId getSapiV1NftHistoryDepositResponseBody200ListTxID =
  GetSapiV1NftHistoryDepositResponseBody200List
    { getSapiV1NftHistoryDepositResponseBody200ListContractAdrress = getSapiV1NftHistoryDepositResponseBody200ListContractAdrress,
      getSapiV1NftHistoryDepositResponseBody200ListNetwork = getSapiV1NftHistoryDepositResponseBody200ListNetwork,
      getSapiV1NftHistoryDepositResponseBody200ListTimestamp = getSapiV1NftHistoryDepositResponseBody200ListTimestamp,
      getSapiV1NftHistoryDepositResponseBody200ListTokenId = getSapiV1NftHistoryDepositResponseBody200ListTokenId,
      getSapiV1NftHistoryDepositResponseBody200ListTxID = getSapiV1NftHistoryDepositResponseBody200ListTxID
    }

-- | > GET /sapi/v1/nft/history/deposit
--
-- The same as 'getSapiV1NftHistoryDeposit' but accepts an explicit configuration.
getSapiV1NftHistoryDepositWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1NftHistoryDepositParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1NftHistoryDepositResponse)
getSapiV1NftHistoryDepositWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1NftHistoryDepositResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1NftHistoryDepositResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1NftHistoryDepositResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1NftHistoryDepositResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1NftHistoryDepositResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/nft/history/deposit")
          [ Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1NftHistoryDepositParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1NftHistoryDepositParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/nft/history/deposit
--
-- The same as 'getSapiV1NftHistoryDeposit' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1NftHistoryDepositRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1NftHistoryDepositParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1NftHistoryDepositRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/nft/history/deposit")
        [ Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1NftHistoryDepositParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1NftHistoryDepositParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/nft/history/deposit
--
-- The same as 'getSapiV1NftHistoryDeposit' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1NftHistoryDepositWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1NftHistoryDepositParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1NftHistoryDepositWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/nft/history/deposit")
          [ Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1NftHistoryDepositParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1NftHistoryDepositParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1NftHistoryDepositParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
