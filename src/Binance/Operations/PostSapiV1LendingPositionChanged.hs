{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postSapiV1LendingPositionChanged
module Binance.Operations.PostSapiV1LendingPositionChanged where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /sapi/v1/lending/positionChanged
--
-- - PositionId is mandatory parameter for fixed position.
--
-- Weight(IP): 1
postSapiV1LendingPositionChanged ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1LendingPositionChangedParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response PostSapiV1LendingPositionChangedResponse)
postSapiV1LendingPositionChanged parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostSapiV1LendingPositionChangedResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1LendingPositionChangedResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PostSapiV1LendingPositionChangedResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1LendingPositionChangedResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1LendingPositionChangedResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/lending/positionChanged")
        [ Binance.Common.QueryParameter (Data.Text.pack "projectId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQueryProjectId parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "lot") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQueryLot parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "positionId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1LendingPositionChangedParametersQueryPositionId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1LendingPositionChangedParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/lending\/positionChanged.POST.parameters@ in the specification.
data PostSapiV1LendingPositionChangedParameters = PostSapiV1LendingPositionChangedParameters
  { -- | queryLot: Represents the parameter named \'lot\'
    postSapiV1LendingPositionChangedParametersQueryLot :: Data.Text.Internal.Text,
    -- | queryPositionId: Represents the parameter named \'positionId\'
    postSapiV1LendingPositionChangedParametersQueryPositionId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryProjectId: Represents the parameter named \'projectId\'
    postSapiV1LendingPositionChangedParametersQueryProjectId :: Data.Text.Internal.Text,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    postSapiV1LendingPositionChangedParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    postSapiV1LendingPositionChangedParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    postSapiV1LendingPositionChangedParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1LendingPositionChangedParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryLot" Data.Aeson.Types.ToJSON..= postSapiV1LendingPositionChangedParametersQueryLot obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPositionId" Data.Aeson.Types.ToJSON..=)) (postSapiV1LendingPositionChangedParametersQueryPositionId obj) : ["queryProjectId" Data.Aeson.Types.ToJSON..= postSapiV1LendingPositionChangedParametersQueryProjectId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1LendingPositionChangedParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1LendingPositionChangedParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1LendingPositionChangedParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryLot" Data.Aeson.Types.ToJSON..= postSapiV1LendingPositionChangedParametersQueryLot obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPositionId" Data.Aeson.Types.ToJSON..=)) (postSapiV1LendingPositionChangedParametersQueryPositionId obj) : ["queryProjectId" Data.Aeson.Types.ToJSON..= postSapiV1LendingPositionChangedParametersQueryProjectId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1LendingPositionChangedParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1LendingPositionChangedParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1LendingPositionChangedParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1LendingPositionChangedParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1LendingPositionChangedParameters" (\obj -> (((((GHC.Base.pure PostSapiV1LendingPositionChangedParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryLot")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPositionId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryProjectId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'PostSapiV1LendingPositionChangedParameters' with all required fields.
mkPostSapiV1LendingPositionChangedParameters ::
  -- | 'postSapiV1LendingPositionChangedParametersQueryLot'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1LendingPositionChangedParametersQueryProjectId'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1LendingPositionChangedParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1LendingPositionChangedParametersQueryTimestamp'
  GHC.Int.Int64 ->
  PostSapiV1LendingPositionChangedParameters
mkPostSapiV1LendingPositionChangedParameters postSapiV1LendingPositionChangedParametersQueryLot postSapiV1LendingPositionChangedParametersQueryProjectId postSapiV1LendingPositionChangedParametersQuerySignature postSapiV1LendingPositionChangedParametersQueryTimestamp =
  PostSapiV1LendingPositionChangedParameters
    { postSapiV1LendingPositionChangedParametersQueryLot = postSapiV1LendingPositionChangedParametersQueryLot,
      postSapiV1LendingPositionChangedParametersQueryPositionId = GHC.Maybe.Nothing,
      postSapiV1LendingPositionChangedParametersQueryProjectId = postSapiV1LendingPositionChangedParametersQueryProjectId,
      postSapiV1LendingPositionChangedParametersQueryRecvWindow = GHC.Maybe.Nothing,
      postSapiV1LendingPositionChangedParametersQuerySignature = postSapiV1LendingPositionChangedParametersQuerySignature,
      postSapiV1LendingPositionChangedParametersQueryTimestamp = postSapiV1LendingPositionChangedParametersQueryTimestamp
    }

-- | Represents a response of the operation 'postSapiV1LendingPositionChanged'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostSapiV1LendingPositionChangedResponseError' is used.
data PostSapiV1LendingPositionChangedResponse
  = -- | Means either no matching case available or a parse error
    PostSapiV1LendingPositionChangedResponseError GHC.Base.String
  | -- | Purchase information
    PostSapiV1LendingPositionChangedResponse200 PostSapiV1LendingPositionChangedResponseBody200
  | -- | Bad Request
    PostSapiV1LendingPositionChangedResponse400 Error
  | -- | Unauthorized Request
    PostSapiV1LendingPositionChangedResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/lending\/positionChanged.POST.responses.200.content.application\/json.schema@ in the specification.
data PostSapiV1LendingPositionChangedResponseBody200 = PostSapiV1LendingPositionChangedResponseBody200
  { -- | dailyPurchaseId
    postSapiV1LendingPositionChangedResponseBody200DailyPurchaseId :: GHC.Int.Int64,
    -- | success
    postSapiV1LendingPositionChangedResponseBody200Success :: GHC.Types.Bool,
    -- | time
    postSapiV1LendingPositionChangedResponseBody200Time :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1LendingPositionChangedResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["dailyPurchaseId" Data.Aeson.Types.ToJSON..= postSapiV1LendingPositionChangedResponseBody200DailyPurchaseId obj] : ["success" Data.Aeson.Types.ToJSON..= postSapiV1LendingPositionChangedResponseBody200Success obj] : ["time" Data.Aeson.Types.ToJSON..= postSapiV1LendingPositionChangedResponseBody200Time obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["dailyPurchaseId" Data.Aeson.Types.ToJSON..= postSapiV1LendingPositionChangedResponseBody200DailyPurchaseId obj] : ["success" Data.Aeson.Types.ToJSON..= postSapiV1LendingPositionChangedResponseBody200Success obj] : ["time" Data.Aeson.Types.ToJSON..= postSapiV1LendingPositionChangedResponseBody200Time obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1LendingPositionChangedResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1LendingPositionChangedResponseBody200" (\obj -> ((GHC.Base.pure PostSapiV1LendingPositionChangedResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "dailyPurchaseId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "success")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "time"))

-- | Create a new 'PostSapiV1LendingPositionChangedResponseBody200' with all required fields.
mkPostSapiV1LendingPositionChangedResponseBody200 ::
  -- | 'postSapiV1LendingPositionChangedResponseBody200DailyPurchaseId'
  GHC.Int.Int64 ->
  -- | 'postSapiV1LendingPositionChangedResponseBody200Success'
  GHC.Types.Bool ->
  -- | 'postSapiV1LendingPositionChangedResponseBody200Time'
  GHC.Int.Int64 ->
  PostSapiV1LendingPositionChangedResponseBody200
mkPostSapiV1LendingPositionChangedResponseBody200 postSapiV1LendingPositionChangedResponseBody200DailyPurchaseId postSapiV1LendingPositionChangedResponseBody200Success postSapiV1LendingPositionChangedResponseBody200Time =
  PostSapiV1LendingPositionChangedResponseBody200
    { postSapiV1LendingPositionChangedResponseBody200DailyPurchaseId = postSapiV1LendingPositionChangedResponseBody200DailyPurchaseId,
      postSapiV1LendingPositionChangedResponseBody200Success = postSapiV1LendingPositionChangedResponseBody200Success,
      postSapiV1LendingPositionChangedResponseBody200Time = postSapiV1LendingPositionChangedResponseBody200Time
    }

-- | > POST /sapi/v1/lending/positionChanged
--
-- The same as 'postSapiV1LendingPositionChanged' but accepts an explicit configuration.
postSapiV1LendingPositionChangedWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1LendingPositionChangedParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response PostSapiV1LendingPositionChangedResponse)
postSapiV1LendingPositionChangedWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either PostSapiV1LendingPositionChangedResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1LendingPositionChangedResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              PostSapiV1LendingPositionChangedResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1LendingPositionChangedResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1LendingPositionChangedResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/lending/positionChanged")
          [ Binance.Common.QueryParameter (Data.Text.pack "projectId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQueryProjectId parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "lot") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQueryLot parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "positionId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1LendingPositionChangedParametersQueryPositionId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1LendingPositionChangedParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > POST /sapi/v1/lending/positionChanged
--
-- The same as 'postSapiV1LendingPositionChanged' but returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1LendingPositionChangedRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1LendingPositionChangedParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1LendingPositionChangedRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/lending/positionChanged")
        [ Binance.Common.QueryParameter (Data.Text.pack "projectId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQueryProjectId parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "lot") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQueryLot parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "positionId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1LendingPositionChangedParametersQueryPositionId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1LendingPositionChangedParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > POST /sapi/v1/lending/positionChanged
--
-- The same as 'postSapiV1LendingPositionChanged' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1LendingPositionChangedWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1LendingPositionChangedParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1LendingPositionChangedWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/lending/positionChanged")
          [ Binance.Common.QueryParameter (Data.Text.pack "projectId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQueryProjectId parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "lot") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQueryLot parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "positionId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1LendingPositionChangedParametersQueryPositionId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1LendingPositionChangedParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1LendingPositionChangedParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
