{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation deleteSapiV1SubAccountSubAccountApiIpRestrictionIpList
module Binance.Operations.DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpList where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > DELETE /sapi/v1/sub-account/subAccountApi/ipRestriction/ipList
--
-- Weight(UID): 3000
deleteSapiV1SubAccountSubAccountApiIpRestrictionIpList ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponse)
deleteSapiV1SubAccountSubAccountApiIpRestrictionIpList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "DELETE")
        (Data.Text.pack "/sapi/v1/sub-account/subAccountApi/ipRestriction/ipList")
        [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "subAccountApiKey") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySubAccountApiKey parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "ipAddress") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryIpAddress parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "thirdPartyName") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryThirdPartyName parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/subAccountApi\/ipRestriction\/ipList.DELETE.parameters@ in the specification.
data DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParameters = DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParameters
  { -- | queryEmail: Represents the parameter named \'email\'
    --
    -- Sub-account email
    deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryEmail :: Data.Text.Internal.Text,
    -- | queryIpAddress: Represents the parameter named \'ipAddress\'
    --
    -- Can be added in batches, separated by commas
    deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryIpAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySignature :: Data.Text.Internal.Text,
    -- | querySubAccountApiKey: Represents the parameter named \'subAccountApiKey\'
    deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySubAccountApiKey :: Data.Text.Internal.Text,
    -- | queryThirdPartyName: Represents the parameter named \'thirdPartyName\'
    --
    -- third party IP list name
    deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryThirdPartyName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryEmail" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryEmail obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIpAddress" Data.Aeson.Types.ToJSON..=)) (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryIpAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySignature obj] : ["querySubAccountApiKey" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySubAccountApiKey obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryThirdPartyName" Data.Aeson.Types.ToJSON..=)) (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryThirdPartyName obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryEmail" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryEmail obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIpAddress" Data.Aeson.Types.ToJSON..=)) (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryIpAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySignature obj] : ["querySubAccountApiKey" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySubAccountApiKey obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryThirdPartyName" Data.Aeson.Types.ToJSON..=)) (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryThirdPartyName obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParameters" (\obj -> ((((((GHC.Base.pure DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryEmail")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryIpAddress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySubAccountApiKey")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryThirdPartyName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParameters' with all required fields.
mkDeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParameters ::
  -- | 'deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryEmail'
  Data.Text.Internal.Text ->
  -- | 'deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySubAccountApiKey'
  Data.Text.Internal.Text ->
  -- | 'deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryTimestamp'
  GHC.Int.Int64 ->
  DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParameters
mkDeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParameters deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryEmail deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySignature deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySubAccountApiKey deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryTimestamp =
  DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParameters
    { deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryEmail = deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryEmail,
      deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryIpAddress = GHC.Maybe.Nothing,
      deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryRecvWindow = GHC.Maybe.Nothing,
      deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySignature = deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySignature,
      deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySubAccountApiKey = deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySubAccountApiKey,
      deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryThirdPartyName = GHC.Maybe.Nothing,
      deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryTimestamp = deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryTimestamp
    }

-- | Represents a response of the operation 'deleteSapiV1SubAccountSubAccountApiIpRestrictionIpList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseError' is used.
data DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponse
  = -- | Means either no matching case available or a parse error
    DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseError GHC.Base.String
  | -- | Delete IP information
    DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponse200 DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200
  | -- | Bad Request
    DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponse400 Error
  | -- | Unauthorized Request
    DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/subAccountApi\/ipRestriction\/ipList.DELETE.responses.200.content.application\/json.schema@ in the specification.
data DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200 = DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200
  { -- | apiKey
    deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200ApiKey :: Data.Text.Internal.Text,
    -- | ipList
    deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200IpList :: ([Data.Text.Internal.Text]),
    -- | ipRestrict
    deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200IpRestrict :: Data.Text.Internal.Text,
    -- | updateTime
    deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200UpdateTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["apiKey" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200ApiKey obj] : ["ipList" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200IpList obj] : ["ipRestrict" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200IpRestrict obj] : ["updateTime" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200UpdateTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["apiKey" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200ApiKey obj] : ["ipList" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200IpList obj] : ["ipRestrict" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200IpRestrict obj] : ["updateTime" Data.Aeson.Types.ToJSON..= deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200UpdateTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200" (\obj -> (((GHC.Base.pure DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "apiKey")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "ipList")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "ipRestrict")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "updateTime"))

-- | Create a new 'DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200' with all required fields.
mkDeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200 ::
  -- | 'deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200ApiKey'
  Data.Text.Internal.Text ->
  -- | 'deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200IpList'
  [Data.Text.Internal.Text] ->
  -- | 'deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200IpRestrict'
  Data.Text.Internal.Text ->
  -- | 'deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200UpdateTime'
  GHC.Int.Int64 ->
  DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200
mkDeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200 deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200ApiKey deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200IpList deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200IpRestrict deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200UpdateTime =
  DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200
    { deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200ApiKey = deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200ApiKey,
      deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200IpList = deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200IpList,
      deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200IpRestrict = deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200IpRestrict,
      deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200UpdateTime = deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200UpdateTime
    }

-- | > DELETE /sapi/v1/sub-account/subAccountApi/ipRestriction/ipList
--
-- The same as 'deleteSapiV1SubAccountSubAccountApiIpRestrictionIpList' but accepts an explicit configuration.
deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponse)
deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "DELETE")
          (Data.Text.pack "/sapi/v1/sub-account/subAccountApi/ipRestriction/ipList")
          [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "subAccountApiKey") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySubAccountApiKey parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "ipAddress") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryIpAddress parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "thirdPartyName") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryThirdPartyName parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > DELETE /sapi/v1/sub-account/subAccountApi/ipRestriction/ipList
--
-- The same as 'deleteSapiV1SubAccountSubAccountApiIpRestrictionIpList' but returns the raw 'Data.ByteString.Char8.ByteString'.
deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "DELETE")
        (Data.Text.pack "/sapi/v1/sub-account/subAccountApi/ipRestriction/ipList")
        [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "subAccountApiKey") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySubAccountApiKey parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "ipAddress") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryIpAddress parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "thirdPartyName") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryThirdPartyName parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > DELETE /sapi/v1/sub-account/subAccountApi/ipRestriction/ipList
--
-- The same as 'deleteSapiV1SubAccountSubAccountApiIpRestrictionIpList' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  DeleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "DELETE")
          (Data.Text.pack "/sapi/v1/sub-account/subAccountApi/ipRestriction/ipList")
          [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "subAccountApiKey") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySubAccountApiKey parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "ipAddress") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryIpAddress parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "thirdPartyName") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryThirdPartyName parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteSapiV1SubAccountSubAccountApiIpRestrictionIpListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
