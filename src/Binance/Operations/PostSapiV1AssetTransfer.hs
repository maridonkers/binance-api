{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postSapiV1AssetTransfer
module Binance.Operations.PostSapiV1AssetTransfer where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /sapi/v1/asset/transfer
--
-- You need to enable \`Permits Universal Transfer\` option for the api key which requests this endpoint.
--
-- - \`fromSymbol\` must be sent when type are ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN
-- - \`toSymbol\` must be sent when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN
--
-- ENUM of transfer types:
-- - MAIN_UMFUTURE Spot account transfer to USDⓈ-M Futures account
-- - MAIN_CMFUTURE Spot account transfer to COIN-M Futures account
-- - MAIN_MARGIN Spot account transfer to Margin（cross）account
-- - UMFUTURE_MAIN USDⓈ-M Futures account transfer to Spot account
-- - UMFUTURE_MARGIN USDⓈ-M Futures account transfer to Margin（cross）account
-- - CMFUTURE_MAIN COIN-M Futures account transfer to Spot account
-- - CMFUTURE_MARGIN COIN-M Futures account transfer to Margin(cross) account
-- - MARGIN_MAIN Margin（cross）account transfer to Spot account
-- - MARGIN_UMFUTURE Margin（cross）account transfer to USDⓈ-M Futures
-- - MARGIN_CMFUTURE Margin（cross）account transfer to COIN-M Futures
-- - ISOLATEDMARGIN_MARGIN Isolated margin account transfer to Margin(cross) account
-- - MARGIN_ISOLATEDMARGIN Margin(cross) account transfer to Isolated margin account
-- - ISOLATEDMARGIN_ISOLATEDMARGIN Isolated margin account transfer to Isolated margin account
-- - MAIN_FUNDING Spot account transfer to Funding account
-- - FUNDING_MAIN Funding account transfer to Spot account
-- - FUNDING_UMFUTURE Funding account transfer to UMFUTURE account
-- - UMFUTURE_FUNDING UMFUTURE account transfer to Funding account
-- - MARGIN_FUNDING MARGIN account transfer to Funding account
-- - FUNDING_MARGIN Funding account transfer to Margin account
-- - FUNDING_CMFUTURE Funding account transfer to CMFUTURE account
-- - CMFUTURE_FUNDING CMFUTURE account transfer to Funding account
--
-- Weight(IP): 1
postSapiV1AssetTransfer ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1AssetTransferParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response PostSapiV1AssetTransferResponse)
postSapiV1AssetTransfer parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostSapiV1AssetTransferResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1AssetTransferResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PostSapiV1AssetTransferResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1AssetTransferResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1AssetTransferResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/asset/transfer")
        [ Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "amount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "fromSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetTransferParametersQueryFromSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "toSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetTransferParametersQueryToSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetTransferParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/asset\/transfer.POST.parameters@ in the specification.
data PostSapiV1AssetTransferParameters = PostSapiV1AssetTransferParameters
  { -- | queryAmount: Represents the parameter named \'amount\'
    postSapiV1AssetTransferParametersQueryAmount :: GHC.Types.Double,
    -- | queryAsset: Represents the parameter named \'asset\'
    postSapiV1AssetTransferParametersQueryAsset :: Data.Text.Internal.Text,
    -- | queryFromSymbol: Represents the parameter named \'fromSymbol\'
    --
    -- Must be sent when type are ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN
    postSapiV1AssetTransferParametersQueryFromSymbol :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    postSapiV1AssetTransferParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    postSapiV1AssetTransferParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    postSapiV1AssetTransferParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryToSymbol: Represents the parameter named \'toSymbol\'
    --
    -- Must be sent when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN
    postSapiV1AssetTransferParametersQueryToSymbol :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryType: Represents the parameter named \'type\'
    --
    -- Universal transfer type
    postSapiV1AssetTransferParametersQueryType :: PostSapiV1AssetTransferParametersQueryType
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1AssetTransferParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryAmount" Data.Aeson.Types.ToJSON..= postSapiV1AssetTransferParametersQueryAmount obj] : ["queryAsset" Data.Aeson.Types.ToJSON..= postSapiV1AssetTransferParametersQueryAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFromSymbol" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetTransferParametersQueryFromSymbol obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetTransferParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1AssetTransferParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1AssetTransferParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryToSymbol" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetTransferParametersQueryToSymbol obj) : ["queryType" Data.Aeson.Types.ToJSON..= postSapiV1AssetTransferParametersQueryType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryAmount" Data.Aeson.Types.ToJSON..= postSapiV1AssetTransferParametersQueryAmount obj] : ["queryAsset" Data.Aeson.Types.ToJSON..= postSapiV1AssetTransferParametersQueryAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFromSymbol" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetTransferParametersQueryFromSymbol obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetTransferParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1AssetTransferParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1AssetTransferParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryToSymbol" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetTransferParametersQueryToSymbol obj) : ["queryType" Data.Aeson.Types.ToJSON..= postSapiV1AssetTransferParametersQueryType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1AssetTransferParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1AssetTransferParameters" (\obj -> (((((((GHC.Base.pure PostSapiV1AssetTransferParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryFromSymbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryToSymbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryType"))

-- | Create a new 'PostSapiV1AssetTransferParameters' with all required fields.
mkPostSapiV1AssetTransferParameters ::
  -- | 'postSapiV1AssetTransferParametersQueryAmount'
  GHC.Types.Double ->
  -- | 'postSapiV1AssetTransferParametersQueryAsset'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1AssetTransferParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1AssetTransferParametersQueryTimestamp'
  GHC.Int.Int64 ->
  -- | 'postSapiV1AssetTransferParametersQueryType'
  PostSapiV1AssetTransferParametersQueryType ->
  PostSapiV1AssetTransferParameters
mkPostSapiV1AssetTransferParameters postSapiV1AssetTransferParametersQueryAmount postSapiV1AssetTransferParametersQueryAsset postSapiV1AssetTransferParametersQuerySignature postSapiV1AssetTransferParametersQueryTimestamp postSapiV1AssetTransferParametersQueryType =
  PostSapiV1AssetTransferParameters
    { postSapiV1AssetTransferParametersQueryAmount = postSapiV1AssetTransferParametersQueryAmount,
      postSapiV1AssetTransferParametersQueryAsset = postSapiV1AssetTransferParametersQueryAsset,
      postSapiV1AssetTransferParametersQueryFromSymbol = GHC.Maybe.Nothing,
      postSapiV1AssetTransferParametersQueryRecvWindow = GHC.Maybe.Nothing,
      postSapiV1AssetTransferParametersQuerySignature = postSapiV1AssetTransferParametersQuerySignature,
      postSapiV1AssetTransferParametersQueryTimestamp = postSapiV1AssetTransferParametersQueryTimestamp,
      postSapiV1AssetTransferParametersQueryToSymbol = GHC.Maybe.Nothing,
      postSapiV1AssetTransferParametersQueryType = postSapiV1AssetTransferParametersQueryType
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/asset\/transfer.POST.parameters.properties.queryType@ in the specification.
--
-- Represents the parameter named \'type\'
--
-- Universal transfer type
data PostSapiV1AssetTransferParametersQueryType
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostSapiV1AssetTransferParametersQueryTypeOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostSapiV1AssetTransferParametersQueryTypeTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"MAIN_C2C"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMAINC2C
  | -- | Represents the JSON value @"MAIN_UMFUTURE"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMAINUMFUTURE
  | -- | Represents the JSON value @"MAIN_CMFUTURE"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMAINCMFUTURE
  | -- | Represents the JSON value @"MAIN_MARGIN"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMAINMARGIN
  | -- | Represents the JSON value @"MAIN_MINING"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMAINMINING
  | -- | Represents the JSON value @"C2C_MAIN"@
    PostSapiV1AssetTransferParametersQueryTypeEnumC2CMAIN
  | -- | Represents the JSON value @"C2C_UMFUTURE"@
    PostSapiV1AssetTransferParametersQueryTypeEnumC2CUMFUTURE
  | -- | Represents the JSON value @"C2C_MINING"@
    PostSapiV1AssetTransferParametersQueryTypeEnumC2CMINING
  | -- | Represents the JSON value @"C2C_MARGIN"@
    PostSapiV1AssetTransferParametersQueryTypeEnumC2CMARGIN
  | -- | Represents the JSON value @"UMFUTURE_MAIN"@
    PostSapiV1AssetTransferParametersQueryTypeEnumUMFUTUREMAIN
  | -- | Represents the JSON value @"UMFUTURE_C2C"@
    PostSapiV1AssetTransferParametersQueryTypeEnumUMFUTUREC2C
  | -- | Represents the JSON value @"UMFUTURE_MARGIN"@
    PostSapiV1AssetTransferParametersQueryTypeEnumUMFUTUREMARGIN
  | -- | Represents the JSON value @"CMFUTURE_MAIN"@
    PostSapiV1AssetTransferParametersQueryTypeEnumCMFUTUREMAIN
  | -- | Represents the JSON value @"CMFUTURE_MARGIN"@
    PostSapiV1AssetTransferParametersQueryTypeEnumCMFUTUREMARGIN
  | -- | Represents the JSON value @"MARGIN_MAIN"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMARGINMAIN
  | -- | Represents the JSON value @"MARGIN_UMFUTURE"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMARGINUMFUTURE
  | -- | Represents the JSON value @"MARGIN_CMFUTURE"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMARGINCMFUTURE
  | -- | Represents the JSON value @"MARGIN_MINING"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMARGINMINING
  | -- | Represents the JSON value @"MARGIN_C2C"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMARGINC2C
  | -- | Represents the JSON value @"MINING_MAIN"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMININGMAIN
  | -- | Represents the JSON value @"MINING_UMFUTURE"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMININGUMFUTURE
  | -- | Represents the JSON value @"MINING_C2C"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMININGC2C
  | -- | Represents the JSON value @"MINING_MARGIN"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMININGMARGIN
  | -- | Represents the JSON value @"MAIN_PAY"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMAINPAY
  | -- | Represents the JSON value @"PAY_MAIN"@
    PostSapiV1AssetTransferParametersQueryTypeEnumPAYMAIN
  | -- | Represents the JSON value @"ISOLATEDMARGIN_MARGIN"@
    PostSapiV1AssetTransferParametersQueryTypeEnumISOLATEDMARGINMARGIN
  | -- | Represents the JSON value @"MARGIN_ISOLATEDMARGIN"@
    PostSapiV1AssetTransferParametersQueryTypeEnumMARGINISOLATEDMARGIN
  | -- | Represents the JSON value @"ISOLATEDMARGIN_ISOLATEDMARGIN"@
    PostSapiV1AssetTransferParametersQueryTypeEnumISOLATEDMARGINISOLATEDMARGIN
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1AssetTransferParametersQueryType where
  toJSON (PostSapiV1AssetTransferParametersQueryTypeOther val) = val
  toJSON (PostSapiV1AssetTransferParametersQueryTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMAINC2C) = "MAIN_C2C"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMAINUMFUTURE) = "MAIN_UMFUTURE"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMAINCMFUTURE) = "MAIN_CMFUTURE"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMAINMARGIN) = "MAIN_MARGIN"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMAINMINING) = "MAIN_MINING"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumC2CMAIN) = "C2C_MAIN"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumC2CUMFUTURE) = "C2C_UMFUTURE"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumC2CMINING) = "C2C_MINING"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumC2CMARGIN) = "C2C_MARGIN"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumUMFUTUREMAIN) = "UMFUTURE_MAIN"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumUMFUTUREC2C) = "UMFUTURE_C2C"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumUMFUTUREMARGIN) = "UMFUTURE_MARGIN"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumCMFUTUREMAIN) = "CMFUTURE_MAIN"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumCMFUTUREMARGIN) = "CMFUTURE_MARGIN"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMARGINMAIN) = "MARGIN_MAIN"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMARGINUMFUTURE) = "MARGIN_UMFUTURE"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMARGINCMFUTURE) = "MARGIN_CMFUTURE"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMARGINMINING) = "MARGIN_MINING"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMARGINC2C) = "MARGIN_C2C"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMININGMAIN) = "MINING_MAIN"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMININGUMFUTURE) = "MINING_UMFUTURE"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMININGC2C) = "MINING_C2C"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMININGMARGIN) = "MINING_MARGIN"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMAINPAY) = "MAIN_PAY"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumPAYMAIN) = "PAY_MAIN"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumISOLATEDMARGINMARGIN) = "ISOLATEDMARGIN_MARGIN"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumMARGINISOLATEDMARGIN) = "MARGIN_ISOLATEDMARGIN"
  toJSON (PostSapiV1AssetTransferParametersQueryTypeEnumISOLATEDMARGINISOLATEDMARGIN) = "ISOLATEDMARGIN_ISOLATEDMARGIN"

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1AssetTransferParametersQueryType where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "MAIN_C2C" -> PostSapiV1AssetTransferParametersQueryTypeEnumMAINC2C
            | val GHC.Classes.== "MAIN_UMFUTURE" -> PostSapiV1AssetTransferParametersQueryTypeEnumMAINUMFUTURE
            | val GHC.Classes.== "MAIN_CMFUTURE" -> PostSapiV1AssetTransferParametersQueryTypeEnumMAINCMFUTURE
            | val GHC.Classes.== "MAIN_MARGIN" -> PostSapiV1AssetTransferParametersQueryTypeEnumMAINMARGIN
            | val GHC.Classes.== "MAIN_MINING" -> PostSapiV1AssetTransferParametersQueryTypeEnumMAINMINING
            | val GHC.Classes.== "C2C_MAIN" -> PostSapiV1AssetTransferParametersQueryTypeEnumC2CMAIN
            | val GHC.Classes.== "C2C_UMFUTURE" -> PostSapiV1AssetTransferParametersQueryTypeEnumC2CUMFUTURE
            | val GHC.Classes.== "C2C_MINING" -> PostSapiV1AssetTransferParametersQueryTypeEnumC2CMINING
            | val GHC.Classes.== "C2C_MARGIN" -> PostSapiV1AssetTransferParametersQueryTypeEnumC2CMARGIN
            | val GHC.Classes.== "UMFUTURE_MAIN" -> PostSapiV1AssetTransferParametersQueryTypeEnumUMFUTUREMAIN
            | val GHC.Classes.== "UMFUTURE_C2C" -> PostSapiV1AssetTransferParametersQueryTypeEnumUMFUTUREC2C
            | val GHC.Classes.== "UMFUTURE_MARGIN" -> PostSapiV1AssetTransferParametersQueryTypeEnumUMFUTUREMARGIN
            | val GHC.Classes.== "CMFUTURE_MAIN" -> PostSapiV1AssetTransferParametersQueryTypeEnumCMFUTUREMAIN
            | val GHC.Classes.== "CMFUTURE_MARGIN" -> PostSapiV1AssetTransferParametersQueryTypeEnumCMFUTUREMARGIN
            | val GHC.Classes.== "MARGIN_MAIN" -> PostSapiV1AssetTransferParametersQueryTypeEnumMARGINMAIN
            | val GHC.Classes.== "MARGIN_UMFUTURE" -> PostSapiV1AssetTransferParametersQueryTypeEnumMARGINUMFUTURE
            | val GHC.Classes.== "MARGIN_CMFUTURE" -> PostSapiV1AssetTransferParametersQueryTypeEnumMARGINCMFUTURE
            | val GHC.Classes.== "MARGIN_MINING" -> PostSapiV1AssetTransferParametersQueryTypeEnumMARGINMINING
            | val GHC.Classes.== "MARGIN_C2C" -> PostSapiV1AssetTransferParametersQueryTypeEnumMARGINC2C
            | val GHC.Classes.== "MINING_MAIN" -> PostSapiV1AssetTransferParametersQueryTypeEnumMININGMAIN
            | val GHC.Classes.== "MINING_UMFUTURE" -> PostSapiV1AssetTransferParametersQueryTypeEnumMININGUMFUTURE
            | val GHC.Classes.== "MINING_C2C" -> PostSapiV1AssetTransferParametersQueryTypeEnumMININGC2C
            | val GHC.Classes.== "MINING_MARGIN" -> PostSapiV1AssetTransferParametersQueryTypeEnumMININGMARGIN
            | val GHC.Classes.== "MAIN_PAY" -> PostSapiV1AssetTransferParametersQueryTypeEnumMAINPAY
            | val GHC.Classes.== "PAY_MAIN" -> PostSapiV1AssetTransferParametersQueryTypeEnumPAYMAIN
            | val GHC.Classes.== "ISOLATEDMARGIN_MARGIN" -> PostSapiV1AssetTransferParametersQueryTypeEnumISOLATEDMARGINMARGIN
            | val GHC.Classes.== "MARGIN_ISOLATEDMARGIN" -> PostSapiV1AssetTransferParametersQueryTypeEnumMARGINISOLATEDMARGIN
            | val GHC.Classes.== "ISOLATEDMARGIN_ISOLATEDMARGIN" -> PostSapiV1AssetTransferParametersQueryTypeEnumISOLATEDMARGINISOLATEDMARGIN
            | GHC.Base.otherwise -> PostSapiV1AssetTransferParametersQueryTypeOther val
      )

-- | Represents a response of the operation 'postSapiV1AssetTransfer'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostSapiV1AssetTransferResponseError' is used.
data PostSapiV1AssetTransferResponse
  = -- | Means either no matching case available or a parse error
    PostSapiV1AssetTransferResponseError GHC.Base.String
  | -- | Transfer id
    PostSapiV1AssetTransferResponse200 PostSapiV1AssetTransferResponseBody200
  | -- | Bad Request
    PostSapiV1AssetTransferResponse400 Error
  | -- | Unauthorized Request
    PostSapiV1AssetTransferResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/asset\/transfer.POST.responses.200.content.application\/json.schema@ in the specification.
data PostSapiV1AssetTransferResponseBody200 = PostSapiV1AssetTransferResponseBody200
  { -- | tranId
    postSapiV1AssetTransferResponseBody200TranId :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1AssetTransferResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["tranId" Data.Aeson.Types.ToJSON..= postSapiV1AssetTransferResponseBody200TranId obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["tranId" Data.Aeson.Types.ToJSON..= postSapiV1AssetTransferResponseBody200TranId obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1AssetTransferResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1AssetTransferResponseBody200" (\obj -> GHC.Base.pure PostSapiV1AssetTransferResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tranId"))

-- | Create a new 'PostSapiV1AssetTransferResponseBody200' with all required fields.
mkPostSapiV1AssetTransferResponseBody200 ::
  -- | 'postSapiV1AssetTransferResponseBody200TranId'
  GHC.Int.Int64 ->
  PostSapiV1AssetTransferResponseBody200
mkPostSapiV1AssetTransferResponseBody200 postSapiV1AssetTransferResponseBody200TranId = PostSapiV1AssetTransferResponseBody200 {postSapiV1AssetTransferResponseBody200TranId = postSapiV1AssetTransferResponseBody200TranId}

-- | > POST /sapi/v1/asset/transfer
--
-- The same as 'postSapiV1AssetTransfer' but accepts an explicit configuration.
postSapiV1AssetTransferWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1AssetTransferParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response PostSapiV1AssetTransferResponse)
postSapiV1AssetTransferWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either PostSapiV1AssetTransferResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1AssetTransferResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              PostSapiV1AssetTransferResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1AssetTransferResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1AssetTransferResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/asset/transfer")
          [ Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "amount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "fromSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetTransferParametersQueryFromSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "toSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetTransferParametersQueryToSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetTransferParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > POST /sapi/v1/asset/transfer
--
-- The same as 'postSapiV1AssetTransfer' but returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1AssetTransferRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1AssetTransferParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1AssetTransferRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/asset/transfer")
        [ Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "amount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "fromSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetTransferParametersQueryFromSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "toSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetTransferParametersQueryToSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetTransferParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > POST /sapi/v1/asset/transfer
--
-- The same as 'postSapiV1AssetTransfer' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1AssetTransferWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1AssetTransferParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1AssetTransferWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/asset/transfer")
          [ Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "amount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "fromSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetTransferParametersQueryFromSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "toSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetTransferParametersQueryToSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetTransferParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetTransferParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
