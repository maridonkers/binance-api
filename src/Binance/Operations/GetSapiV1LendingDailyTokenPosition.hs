{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1LendingDailyTokenPosition
module Binance.Operations.GetSapiV1LendingDailyTokenPosition where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/lending/daily/token/position
--
-- Weight(IP): 1
getSapiV1LendingDailyTokenPosition ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingDailyTokenPositionParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1LendingDailyTokenPositionResponse)
getSapiV1LendingDailyTokenPosition parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1LendingDailyTokenPositionResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingDailyTokenPositionResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ([GetSapiV1LendingDailyTokenPositionResponseBody200])
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingDailyTokenPositionResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingDailyTokenPositionResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/lending/daily/token/position")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyTokenPositionParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyTokenPositionParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyTokenPositionParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyTokenPositionParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/lending\/daily\/token\/position.GET.parameters@ in the specification.
data GetSapiV1LendingDailyTokenPositionParameters = GetSapiV1LendingDailyTokenPositionParameters
  { -- | queryAsset: Represents the parameter named \'asset\'
    getSapiV1LendingDailyTokenPositionParametersQueryAsset :: Data.Text.Internal.Text,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1LendingDailyTokenPositionParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1LendingDailyTokenPositionParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1LendingDailyTokenPositionParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingDailyTokenPositionParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryAsset" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionParametersQueryAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingDailyTokenPositionParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryAsset" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionParametersQueryAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingDailyTokenPositionParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingDailyTokenPositionParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LendingDailyTokenPositionParameters" (\obj -> (((GHC.Base.pure GetSapiV1LendingDailyTokenPositionParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1LendingDailyTokenPositionParameters' with all required fields.
mkGetSapiV1LendingDailyTokenPositionParameters ::
  -- | 'getSapiV1LendingDailyTokenPositionParametersQueryAsset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyTokenPositionParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyTokenPositionParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1LendingDailyTokenPositionParameters
mkGetSapiV1LendingDailyTokenPositionParameters getSapiV1LendingDailyTokenPositionParametersQueryAsset getSapiV1LendingDailyTokenPositionParametersQuerySignature getSapiV1LendingDailyTokenPositionParametersQueryTimestamp =
  GetSapiV1LendingDailyTokenPositionParameters
    { getSapiV1LendingDailyTokenPositionParametersQueryAsset = getSapiV1LendingDailyTokenPositionParametersQueryAsset,
      getSapiV1LendingDailyTokenPositionParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1LendingDailyTokenPositionParametersQuerySignature = getSapiV1LendingDailyTokenPositionParametersQuerySignature,
      getSapiV1LendingDailyTokenPositionParametersQueryTimestamp = getSapiV1LendingDailyTokenPositionParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1LendingDailyTokenPosition'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1LendingDailyTokenPositionResponseError' is used.
data GetSapiV1LendingDailyTokenPositionResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1LendingDailyTokenPositionResponseError GHC.Base.String
  | -- | List of flexible product positions
    GetSapiV1LendingDailyTokenPositionResponse200 ([GetSapiV1LendingDailyTokenPositionResponseBody200])
  | -- | Bad Request
    GetSapiV1LendingDailyTokenPositionResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1LendingDailyTokenPositionResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/lending\/daily\/token\/position.GET.responses.200.content.application\/json.schema.items@ in the specification.
data GetSapiV1LendingDailyTokenPositionResponseBody200 = GetSapiV1LendingDailyTokenPositionResponseBody200
  { -- | annualInterestRate
    getSapiV1LendingDailyTokenPositionResponseBody200AnnualInterestRate :: Data.Text.Internal.Text,
    -- | asset
    getSapiV1LendingDailyTokenPositionResponseBody200Asset :: Data.Text.Internal.Text,
    -- | avgAnnualInterestRate
    getSapiV1LendingDailyTokenPositionResponseBody200AvgAnnualInterestRate :: Data.Text.Internal.Text,
    -- | canRedeem
    getSapiV1LendingDailyTokenPositionResponseBody200CanRedeem :: GHC.Types.Bool,
    -- | dailyInterestRate
    getSapiV1LendingDailyTokenPositionResponseBody200DailyInterestRate :: Data.Text.Internal.Text,
    -- | freeAmount
    getSapiV1LendingDailyTokenPositionResponseBody200FreeAmount :: Data.Text.Internal.Text,
    -- | freezeAmount
    getSapiV1LendingDailyTokenPositionResponseBody200FreezeAmount :: Data.Text.Internal.Text,
    -- | lockedAmount
    getSapiV1LendingDailyTokenPositionResponseBody200LockedAmount :: Data.Text.Internal.Text,
    -- | productId
    getSapiV1LendingDailyTokenPositionResponseBody200ProductId :: Data.Text.Internal.Text,
    -- | productName
    getSapiV1LendingDailyTokenPositionResponseBody200ProductName :: Data.Text.Internal.Text,
    -- | redeemingAmount
    getSapiV1LendingDailyTokenPositionResponseBody200RedeemingAmount :: Data.Text.Internal.Text,
    -- | todayPurchasedAmount
    getSapiV1LendingDailyTokenPositionResponseBody200TodayPurchasedAmount :: Data.Text.Internal.Text,
    -- | totalAmount
    getSapiV1LendingDailyTokenPositionResponseBody200TotalAmount :: Data.Text.Internal.Text,
    -- | totalInterest
    getSapiV1LendingDailyTokenPositionResponseBody200TotalInterest :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingDailyTokenPositionResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["annualInterestRate" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200AnnualInterestRate obj] : ["asset" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200Asset obj] : ["avgAnnualInterestRate" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200AvgAnnualInterestRate obj] : ["canRedeem" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200CanRedeem obj] : ["dailyInterestRate" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200DailyInterestRate obj] : ["freeAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200FreeAmount obj] : ["freezeAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200FreezeAmount obj] : ["lockedAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200LockedAmount obj] : ["productId" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200ProductId obj] : ["productName" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200ProductName obj] : ["redeemingAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200RedeemingAmount obj] : ["todayPurchasedAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200TodayPurchasedAmount obj] : ["totalAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200TotalAmount obj] : ["totalInterest" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200TotalInterest obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["annualInterestRate" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200AnnualInterestRate obj] : ["asset" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200Asset obj] : ["avgAnnualInterestRate" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200AvgAnnualInterestRate obj] : ["canRedeem" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200CanRedeem obj] : ["dailyInterestRate" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200DailyInterestRate obj] : ["freeAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200FreeAmount obj] : ["freezeAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200FreezeAmount obj] : ["lockedAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200LockedAmount obj] : ["productId" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200ProductId obj] : ["productName" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200ProductName obj] : ["redeemingAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200RedeemingAmount obj] : ["todayPurchasedAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200TodayPurchasedAmount obj] : ["totalAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200TotalAmount obj] : ["totalInterest" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyTokenPositionResponseBody200TotalInterest obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingDailyTokenPositionResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LendingDailyTokenPositionResponseBody200" (\obj -> (((((((((((((GHC.Base.pure GetSapiV1LendingDailyTokenPositionResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "annualInterestRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "avgAnnualInterestRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "canRedeem")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "dailyInterestRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "freeAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "freezeAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "lockedAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "productId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "productName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "redeemingAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "todayPurchasedAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalInterest"))

-- | Create a new 'GetSapiV1LendingDailyTokenPositionResponseBody200' with all required fields.
mkGetSapiV1LendingDailyTokenPositionResponseBody200 ::
  -- | 'getSapiV1LendingDailyTokenPositionResponseBody200AnnualInterestRate'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyTokenPositionResponseBody200Asset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyTokenPositionResponseBody200AvgAnnualInterestRate'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyTokenPositionResponseBody200CanRedeem'
  GHC.Types.Bool ->
  -- | 'getSapiV1LendingDailyTokenPositionResponseBody200DailyInterestRate'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyTokenPositionResponseBody200FreeAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyTokenPositionResponseBody200FreezeAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyTokenPositionResponseBody200LockedAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyTokenPositionResponseBody200ProductId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyTokenPositionResponseBody200ProductName'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyTokenPositionResponseBody200RedeemingAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyTokenPositionResponseBody200TodayPurchasedAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyTokenPositionResponseBody200TotalAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyTokenPositionResponseBody200TotalInterest'
  Data.Text.Internal.Text ->
  GetSapiV1LendingDailyTokenPositionResponseBody200
mkGetSapiV1LendingDailyTokenPositionResponseBody200 getSapiV1LendingDailyTokenPositionResponseBody200AnnualInterestRate getSapiV1LendingDailyTokenPositionResponseBody200Asset getSapiV1LendingDailyTokenPositionResponseBody200AvgAnnualInterestRate getSapiV1LendingDailyTokenPositionResponseBody200CanRedeem getSapiV1LendingDailyTokenPositionResponseBody200DailyInterestRate getSapiV1LendingDailyTokenPositionResponseBody200FreeAmount getSapiV1LendingDailyTokenPositionResponseBody200FreezeAmount getSapiV1LendingDailyTokenPositionResponseBody200LockedAmount getSapiV1LendingDailyTokenPositionResponseBody200ProductId getSapiV1LendingDailyTokenPositionResponseBody200ProductName getSapiV1LendingDailyTokenPositionResponseBody200RedeemingAmount getSapiV1LendingDailyTokenPositionResponseBody200TodayPurchasedAmount getSapiV1LendingDailyTokenPositionResponseBody200TotalAmount getSapiV1LendingDailyTokenPositionResponseBody200TotalInterest =
  GetSapiV1LendingDailyTokenPositionResponseBody200
    { getSapiV1LendingDailyTokenPositionResponseBody200AnnualInterestRate = getSapiV1LendingDailyTokenPositionResponseBody200AnnualInterestRate,
      getSapiV1LendingDailyTokenPositionResponseBody200Asset = getSapiV1LendingDailyTokenPositionResponseBody200Asset,
      getSapiV1LendingDailyTokenPositionResponseBody200AvgAnnualInterestRate = getSapiV1LendingDailyTokenPositionResponseBody200AvgAnnualInterestRate,
      getSapiV1LendingDailyTokenPositionResponseBody200CanRedeem = getSapiV1LendingDailyTokenPositionResponseBody200CanRedeem,
      getSapiV1LendingDailyTokenPositionResponseBody200DailyInterestRate = getSapiV1LendingDailyTokenPositionResponseBody200DailyInterestRate,
      getSapiV1LendingDailyTokenPositionResponseBody200FreeAmount = getSapiV1LendingDailyTokenPositionResponseBody200FreeAmount,
      getSapiV1LendingDailyTokenPositionResponseBody200FreezeAmount = getSapiV1LendingDailyTokenPositionResponseBody200FreezeAmount,
      getSapiV1LendingDailyTokenPositionResponseBody200LockedAmount = getSapiV1LendingDailyTokenPositionResponseBody200LockedAmount,
      getSapiV1LendingDailyTokenPositionResponseBody200ProductId = getSapiV1LendingDailyTokenPositionResponseBody200ProductId,
      getSapiV1LendingDailyTokenPositionResponseBody200ProductName = getSapiV1LendingDailyTokenPositionResponseBody200ProductName,
      getSapiV1LendingDailyTokenPositionResponseBody200RedeemingAmount = getSapiV1LendingDailyTokenPositionResponseBody200RedeemingAmount,
      getSapiV1LendingDailyTokenPositionResponseBody200TodayPurchasedAmount = getSapiV1LendingDailyTokenPositionResponseBody200TodayPurchasedAmount,
      getSapiV1LendingDailyTokenPositionResponseBody200TotalAmount = getSapiV1LendingDailyTokenPositionResponseBody200TotalAmount,
      getSapiV1LendingDailyTokenPositionResponseBody200TotalInterest = getSapiV1LendingDailyTokenPositionResponseBody200TotalInterest
    }

-- | > GET /sapi/v1/lending/daily/token/position
--
-- The same as 'getSapiV1LendingDailyTokenPosition' but accepts an explicit configuration.
getSapiV1LendingDailyTokenPositionWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingDailyTokenPositionParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1LendingDailyTokenPositionResponse)
getSapiV1LendingDailyTokenPositionWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1LendingDailyTokenPositionResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingDailyTokenPositionResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              ([GetSapiV1LendingDailyTokenPositionResponseBody200])
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingDailyTokenPositionResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingDailyTokenPositionResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/lending/daily/token/position")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyTokenPositionParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyTokenPositionParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyTokenPositionParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyTokenPositionParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/lending/daily/token/position
--
-- The same as 'getSapiV1LendingDailyTokenPosition' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LendingDailyTokenPositionRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingDailyTokenPositionParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LendingDailyTokenPositionRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/lending/daily/token/position")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyTokenPositionParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyTokenPositionParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyTokenPositionParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyTokenPositionParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/lending/daily/token/position
--
-- The same as 'getSapiV1LendingDailyTokenPosition' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LendingDailyTokenPositionWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingDailyTokenPositionParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LendingDailyTokenPositionWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/lending/daily/token/position")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyTokenPositionParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyTokenPositionParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyTokenPositionParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyTokenPositionParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
