{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1BlvtRedeemRecord
module Binance.Operations.GetSapiV1BlvtRedeemRecord where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/blvt/redeem/record
--
-- - Only the data of the latest 90 days is available
--
-- Weight(IP): 1
getSapiV1BlvtRedeemRecord ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1BlvtRedeemRecordParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1BlvtRedeemRecordResponse)
getSapiV1BlvtRedeemRecord parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1BlvtRedeemRecordResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1BlvtRedeemRecordResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ([GetSapiV1BlvtRedeemRecordResponseBody200])
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1BlvtRedeemRecordResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1BlvtRedeemRecordResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/blvt/redeem/record")
        [ Binance.Common.QueryParameter (Data.Text.pack "tokenName") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryTokenName parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "id") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BlvtRedeemRecordParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BlvtRedeemRecordParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/blvt\/redeem\/record.GET.parameters@ in the specification.
data GetSapiV1BlvtRedeemRecordParameters = GetSapiV1BlvtRedeemRecordParameters
  { -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1BlvtRedeemRecordParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryId: Represents the parameter named \'id\'
    getSapiV1BlvtRedeemRecordParametersQueryId :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- default 1000, max 1000
    getSapiV1BlvtRedeemRecordParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1BlvtRedeemRecordParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1BlvtRedeemRecordParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1BlvtRedeemRecordParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1BlvtRedeemRecordParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryTokenName: Represents the parameter named \'tokenName\'
    --
    -- BTCDOWN, BTCUP
    getSapiV1BlvtRedeemRecordParametersQueryTokenName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1BlvtRedeemRecordParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1BlvtRedeemRecordParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryId" Data.Aeson.Types.ToJSON..=)) (getSapiV1BlvtRedeemRecordParametersQueryId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1BlvtRedeemRecordParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1BlvtRedeemRecordParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1BlvtRedeemRecordParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTokenName" Data.Aeson.Types.ToJSON..=)) (getSapiV1BlvtRedeemRecordParametersQueryTokenName obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1BlvtRedeemRecordParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryId" Data.Aeson.Types.ToJSON..=)) (getSapiV1BlvtRedeemRecordParametersQueryId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1BlvtRedeemRecordParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1BlvtRedeemRecordParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1BlvtRedeemRecordParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTokenName" Data.Aeson.Types.ToJSON..=)) (getSapiV1BlvtRedeemRecordParametersQueryTokenName obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1BlvtRedeemRecordParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1BlvtRedeemRecordParameters" (\obj -> (((((((GHC.Base.pure GetSapiV1BlvtRedeemRecordParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryTokenName"))

-- | Create a new 'GetSapiV1BlvtRedeemRecordParameters' with all required fields.
mkGetSapiV1BlvtRedeemRecordParameters ::
  -- | 'getSapiV1BlvtRedeemRecordParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1BlvtRedeemRecordParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1BlvtRedeemRecordParameters
mkGetSapiV1BlvtRedeemRecordParameters getSapiV1BlvtRedeemRecordParametersQuerySignature getSapiV1BlvtRedeemRecordParametersQueryTimestamp =
  GetSapiV1BlvtRedeemRecordParameters
    { getSapiV1BlvtRedeemRecordParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1BlvtRedeemRecordParametersQueryId = GHC.Maybe.Nothing,
      getSapiV1BlvtRedeemRecordParametersQueryLimit = GHC.Maybe.Nothing,
      getSapiV1BlvtRedeemRecordParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1BlvtRedeemRecordParametersQuerySignature = getSapiV1BlvtRedeemRecordParametersQuerySignature,
      getSapiV1BlvtRedeemRecordParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1BlvtRedeemRecordParametersQueryTimestamp = getSapiV1BlvtRedeemRecordParametersQueryTimestamp,
      getSapiV1BlvtRedeemRecordParametersQueryTokenName = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'getSapiV1BlvtRedeemRecord'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1BlvtRedeemRecordResponseError' is used.
data GetSapiV1BlvtRedeemRecordResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1BlvtRedeemRecordResponseError GHC.Base.String
  | -- | List of redemption record
    GetSapiV1BlvtRedeemRecordResponse200 ([GetSapiV1BlvtRedeemRecordResponseBody200])
  | -- | Bad Request
    GetSapiV1BlvtRedeemRecordResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1BlvtRedeemRecordResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/blvt\/redeem\/record.GET.responses.200.content.application\/json.schema.items@ in the specification.
data GetSapiV1BlvtRedeemRecordResponseBody200 = GetSapiV1BlvtRedeemRecordResponseBody200
  { -- | amount: Redemption amount
    getSapiV1BlvtRedeemRecordResponseBody200Amount :: Data.Text.Internal.Text,
    -- | fee: Reemption fee
    getSapiV1BlvtRedeemRecordResponseBody200Fee :: Data.Text.Internal.Text,
    -- | id
    getSapiV1BlvtRedeemRecordResponseBody200Id :: GHC.Types.Double,
    -- | nav: NAV of redemption
    getSapiV1BlvtRedeemRecordResponseBody200Nav :: Data.Text.Internal.Text,
    -- | netProceed: Net redemption value in usdt
    getSapiV1BlvtRedeemRecordResponseBody200NetProceed :: Data.Text.Internal.Text,
    -- | timestamp
    getSapiV1BlvtRedeemRecordResponseBody200Timestamp :: GHC.Int.Int64,
    -- | tokenName
    getSapiV1BlvtRedeemRecordResponseBody200TokenName :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1BlvtRedeemRecordResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordResponseBody200Amount obj] : ["fee" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordResponseBody200Fee obj] : ["id" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordResponseBody200Id obj] : ["nav" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordResponseBody200Nav obj] : ["netProceed" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordResponseBody200NetProceed obj] : ["timestamp" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordResponseBody200Timestamp obj] : ["tokenName" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordResponseBody200TokenName obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordResponseBody200Amount obj] : ["fee" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordResponseBody200Fee obj] : ["id" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordResponseBody200Id obj] : ["nav" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordResponseBody200Nav obj] : ["netProceed" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordResponseBody200NetProceed obj] : ["timestamp" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordResponseBody200Timestamp obj] : ["tokenName" Data.Aeson.Types.ToJSON..= getSapiV1BlvtRedeemRecordResponseBody200TokenName obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1BlvtRedeemRecordResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1BlvtRedeemRecordResponseBody200" (\obj -> ((((((GHC.Base.pure GetSapiV1BlvtRedeemRecordResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "fee")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "nav")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "netProceed")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "timestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tokenName"))

-- | Create a new 'GetSapiV1BlvtRedeemRecordResponseBody200' with all required fields.
mkGetSapiV1BlvtRedeemRecordResponseBody200 ::
  -- | 'getSapiV1BlvtRedeemRecordResponseBody200Amount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1BlvtRedeemRecordResponseBody200Fee'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1BlvtRedeemRecordResponseBody200Id'
  GHC.Types.Double ->
  -- | 'getSapiV1BlvtRedeemRecordResponseBody200Nav'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1BlvtRedeemRecordResponseBody200NetProceed'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1BlvtRedeemRecordResponseBody200Timestamp'
  GHC.Int.Int64 ->
  -- | 'getSapiV1BlvtRedeemRecordResponseBody200TokenName'
  Data.Text.Internal.Text ->
  GetSapiV1BlvtRedeemRecordResponseBody200
mkGetSapiV1BlvtRedeemRecordResponseBody200 getSapiV1BlvtRedeemRecordResponseBody200Amount getSapiV1BlvtRedeemRecordResponseBody200Fee getSapiV1BlvtRedeemRecordResponseBody200Id getSapiV1BlvtRedeemRecordResponseBody200Nav getSapiV1BlvtRedeemRecordResponseBody200NetProceed getSapiV1BlvtRedeemRecordResponseBody200Timestamp getSapiV1BlvtRedeemRecordResponseBody200TokenName =
  GetSapiV1BlvtRedeemRecordResponseBody200
    { getSapiV1BlvtRedeemRecordResponseBody200Amount = getSapiV1BlvtRedeemRecordResponseBody200Amount,
      getSapiV1BlvtRedeemRecordResponseBody200Fee = getSapiV1BlvtRedeemRecordResponseBody200Fee,
      getSapiV1BlvtRedeemRecordResponseBody200Id = getSapiV1BlvtRedeemRecordResponseBody200Id,
      getSapiV1BlvtRedeemRecordResponseBody200Nav = getSapiV1BlvtRedeemRecordResponseBody200Nav,
      getSapiV1BlvtRedeemRecordResponseBody200NetProceed = getSapiV1BlvtRedeemRecordResponseBody200NetProceed,
      getSapiV1BlvtRedeemRecordResponseBody200Timestamp = getSapiV1BlvtRedeemRecordResponseBody200Timestamp,
      getSapiV1BlvtRedeemRecordResponseBody200TokenName = getSapiV1BlvtRedeemRecordResponseBody200TokenName
    }

-- | > GET /sapi/v1/blvt/redeem/record
--
-- The same as 'getSapiV1BlvtRedeemRecord' but accepts an explicit configuration.
getSapiV1BlvtRedeemRecordWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1BlvtRedeemRecordParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1BlvtRedeemRecordResponse)
getSapiV1BlvtRedeemRecordWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1BlvtRedeemRecordResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1BlvtRedeemRecordResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              ([GetSapiV1BlvtRedeemRecordResponseBody200])
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1BlvtRedeemRecordResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1BlvtRedeemRecordResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/blvt/redeem/record")
          [ Binance.Common.QueryParameter (Data.Text.pack "tokenName") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryTokenName parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "id") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BlvtRedeemRecordParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BlvtRedeemRecordParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/blvt/redeem/record
--
-- The same as 'getSapiV1BlvtRedeemRecord' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1BlvtRedeemRecordRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1BlvtRedeemRecordParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1BlvtRedeemRecordRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/blvt/redeem/record")
        [ Binance.Common.QueryParameter (Data.Text.pack "tokenName") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryTokenName parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "id") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BlvtRedeemRecordParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BlvtRedeemRecordParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/blvt/redeem/record
--
-- The same as 'getSapiV1BlvtRedeemRecord' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1BlvtRedeemRecordWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1BlvtRedeemRecordParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1BlvtRedeemRecordWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/blvt/redeem/record")
          [ Binance.Common.QueryParameter (Data.Text.pack "tokenName") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryTokenName parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "id") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BlvtRedeemRecordParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BlvtRedeemRecordParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BlvtRedeemRecordParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
