{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1CapitalWithdrawHistory
module Binance.Operations.GetSapiV1CapitalWithdrawHistory where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/capital/withdraw/history
--
-- Fetch withdraw history.
--
-- - \`network\` may not be in the response for old withdraw.
-- - Please notice the default \`startTime\` and \`endTime\` to make sure that time interval is within 0-90 days.
-- - If both \`startTime\` and \`endTime\` are sent, time between \`startTime\` and \`endTime\` must be less than 90 days
--
-- Weight(IP): 1
getSapiV1CapitalWithdrawHistory ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1CapitalWithdrawHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1CapitalWithdrawHistoryResponse)
getSapiV1CapitalWithdrawHistory parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1CapitalWithdrawHistoryResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1CapitalWithdrawHistoryResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ([GetSapiV1CapitalWithdrawHistoryResponseBody200])
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1CapitalWithdrawHistoryResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1CapitalWithdrawHistoryResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/capital/withdraw/history")
        [ Binance.Common.QueryParameter (Data.Text.pack "coin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "withdrawOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryWithdrawOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "offset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryOffset parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalWithdrawHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalWithdrawHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/capital\/withdraw\/history.GET.parameters@ in the specification.
data GetSapiV1CapitalWithdrawHistoryParameters = GetSapiV1CapitalWithdrawHistoryParameters
  { -- | queryCoin: Represents the parameter named \'coin\'
    --
    -- Coin name
    getSapiV1CapitalWithdrawHistoryParametersQueryCoin :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1CapitalWithdrawHistoryParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- Default 500; max 1000.
    getSapiV1CapitalWithdrawHistoryParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryOffset: Represents the parameter named \'offset\'
    getSapiV1CapitalWithdrawHistoryParametersQueryOffset :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1CapitalWithdrawHistoryParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1CapitalWithdrawHistoryParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1CapitalWithdrawHistoryParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryStatus: Represents the parameter named \'status\'
    --
    -- * \`0\` - Email Sent
    -- * \`1\` - Cancelled
    -- * \`2\` - Awaiting Approval
    -- * \`3\` - Rejected
    -- * \`4\` - Processing
    -- * \`5\` - Failure
    -- * \`6\` - Completed
    getSapiV1CapitalWithdrawHistoryParametersQueryStatus :: (GHC.Maybe.Maybe GetSapiV1CapitalWithdrawHistoryParametersQueryStatus),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1CapitalWithdrawHistoryParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryWithdrawOrderId: Represents the parameter named \'withdrawOrderId\'
    getSapiV1CapitalWithdrawHistoryParametersQueryWithdrawOrderId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1CapitalWithdrawHistoryParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOffset" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryOffset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryStartTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryStatus obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryWithdrawOrderId" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryWithdrawOrderId obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOffset" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryOffset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryStartTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryStatus obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryWithdrawOrderId" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryParametersQueryWithdrawOrderId obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1CapitalWithdrawHistoryParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1CapitalWithdrawHistoryParameters" (\obj -> (((((((((GHC.Base.pure GetSapiV1CapitalWithdrawHistoryParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOffset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryWithdrawOrderId"))

-- | Create a new 'GetSapiV1CapitalWithdrawHistoryParameters' with all required fields.
mkGetSapiV1CapitalWithdrawHistoryParameters ::
  -- | 'getSapiV1CapitalWithdrawHistoryParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalWithdrawHistoryParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1CapitalWithdrawHistoryParameters
mkGetSapiV1CapitalWithdrawHistoryParameters getSapiV1CapitalWithdrawHistoryParametersQuerySignature getSapiV1CapitalWithdrawHistoryParametersQueryTimestamp =
  GetSapiV1CapitalWithdrawHistoryParameters
    { getSapiV1CapitalWithdrawHistoryParametersQueryCoin = GHC.Maybe.Nothing,
      getSapiV1CapitalWithdrawHistoryParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1CapitalWithdrawHistoryParametersQueryLimit = GHC.Maybe.Nothing,
      getSapiV1CapitalWithdrawHistoryParametersQueryOffset = GHC.Maybe.Nothing,
      getSapiV1CapitalWithdrawHistoryParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1CapitalWithdrawHistoryParametersQuerySignature = getSapiV1CapitalWithdrawHistoryParametersQuerySignature,
      getSapiV1CapitalWithdrawHistoryParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1CapitalWithdrawHistoryParametersQueryStatus = GHC.Maybe.Nothing,
      getSapiV1CapitalWithdrawHistoryParametersQueryTimestamp = getSapiV1CapitalWithdrawHistoryParametersQueryTimestamp,
      getSapiV1CapitalWithdrawHistoryParametersQueryWithdrawOrderId = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/capital\/withdraw\/history.GET.parameters.properties.queryStatus@ in the specification.
--
-- Represents the parameter named \'status\'
--
-- * \`0\` - Email Sent
-- * \`1\` - Cancelled
-- * \`2\` - Awaiting Approval
-- * \`3\` - Rejected
-- * \`4\` - Processing
-- * \`5\` - Failure
-- * \`6\` - Completed
data GetSapiV1CapitalWithdrawHistoryParametersQueryStatus
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1CapitalWithdrawHistoryParametersQueryStatusOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1CapitalWithdrawHistoryParametersQueryStatusTyped GHC.Int.Int32
  | -- | Represents the JSON value @0@
    GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum0
  | -- | Represents the JSON value @1@
    GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum1
  | -- | Represents the JSON value @2@
    GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum2
  | -- | Represents the JSON value @3@
    GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum3
  | -- | Represents the JSON value @4@
    GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum4
  | -- | Represents the JSON value @5@
    GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum5
  | -- | Represents the JSON value @6@
    GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum6
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1CapitalWithdrawHistoryParametersQueryStatus where
  toJSON (GetSapiV1CapitalWithdrawHistoryParametersQueryStatusOther val) = val
  toJSON (GetSapiV1CapitalWithdrawHistoryParametersQueryStatusTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum0) = Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 0 0)
  toJSON (GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum1) = Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 1 0)
  toJSON (GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum2) = Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 2 0)
  toJSON (GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum3) = Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 3 0)
  toJSON (GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum4) = Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 4 0)
  toJSON (GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum5) = Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 5 0)
  toJSON (GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum6) = Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 6 0)

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1CapitalWithdrawHistoryParametersQueryStatus where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 0 0) -> GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum0
            | val GHC.Classes.== Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 1 0) -> GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum1
            | val GHC.Classes.== Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 2 0) -> GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum2
            | val GHC.Classes.== Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 3 0) -> GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum3
            | val GHC.Classes.== Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 4 0) -> GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum4
            | val GHC.Classes.== Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 5 0) -> GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum5
            | val GHC.Classes.== Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 6 0) -> GetSapiV1CapitalWithdrawHistoryParametersQueryStatusEnum6
            | GHC.Base.otherwise -> GetSapiV1CapitalWithdrawHistoryParametersQueryStatusOther val
      )

-- | Represents a response of the operation 'getSapiV1CapitalWithdrawHistory'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1CapitalWithdrawHistoryResponseError' is used.
data GetSapiV1CapitalWithdrawHistoryResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1CapitalWithdrawHistoryResponseError GHC.Base.String
  | -- | List of withdraw history
    GetSapiV1CapitalWithdrawHistoryResponse200 ([GetSapiV1CapitalWithdrawHistoryResponseBody200])
  | -- | Bad Request
    GetSapiV1CapitalWithdrawHistoryResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1CapitalWithdrawHistoryResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/capital\/withdraw\/history.GET.responses.200.content.application\/json.schema.items@ in the specification.
data GetSapiV1CapitalWithdrawHistoryResponseBody200 = GetSapiV1CapitalWithdrawHistoryResponseBody200
  { -- | address
    getSapiV1CapitalWithdrawHistoryResponseBody200Address :: Data.Text.Internal.Text,
    -- | amount
    getSapiV1CapitalWithdrawHistoryResponseBody200Amount :: Data.Text.Internal.Text,
    -- | applyTime
    getSapiV1CapitalWithdrawHistoryResponseBody200ApplyTime :: Data.Text.Internal.Text,
    -- | coin
    getSapiV1CapitalWithdrawHistoryResponseBody200Coin :: Data.Text.Internal.Text,
    -- | confirmNo
    getSapiV1CapitalWithdrawHistoryResponseBody200ConfirmNo :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | id
    getSapiV1CapitalWithdrawHistoryResponseBody200Id :: Data.Text.Internal.Text,
    -- | info: Reason for withdrawal failure
    getSapiV1CapitalWithdrawHistoryResponseBody200Info :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | network
    getSapiV1CapitalWithdrawHistoryResponseBody200Network :: Data.Text.Internal.Text,
    -- | status
    getSapiV1CapitalWithdrawHistoryResponseBody200Status :: GHC.Int.Int32,
    -- | transactionFee
    getSapiV1CapitalWithdrawHistoryResponseBody200TransactionFee :: Data.Text.Internal.Text,
    -- | transferType: 1 for internal transfer, 0 for external transfer
    getSapiV1CapitalWithdrawHistoryResponseBody200TransferType :: GHC.Int.Int32,
    -- | txId
    getSapiV1CapitalWithdrawHistoryResponseBody200TxId :: Data.Text.Internal.Text,
    -- | withdrawOrderId: will not be returned if there\'s no withdrawOrderId for this withdraw.
    getSapiV1CapitalWithdrawHistoryResponseBody200WithdrawOrderId :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1CapitalWithdrawHistoryResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["address" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200Address obj] : ["amount" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200Amount obj] : ["applyTime" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200ApplyTime obj] : ["coin" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200Coin obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("confirmNo" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryResponseBody200ConfirmNo obj) : ["id" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200Id obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("info" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryResponseBody200Info obj) : ["network" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200Network obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200Status obj] : ["transactionFee" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200TransactionFee obj] : ["transferType" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200TransferType obj] : ["txId" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200TxId obj] : ["withdrawOrderId" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200WithdrawOrderId obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["address" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200Address obj] : ["amount" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200Amount obj] : ["applyTime" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200ApplyTime obj] : ["coin" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200Coin obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("confirmNo" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryResponseBody200ConfirmNo obj) : ["id" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200Id obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("info" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalWithdrawHistoryResponseBody200Info obj) : ["network" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200Network obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200Status obj] : ["transactionFee" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200TransactionFee obj] : ["transferType" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200TransferType obj] : ["txId" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200TxId obj] : ["withdrawOrderId" Data.Aeson.Types.ToJSON..= getSapiV1CapitalWithdrawHistoryResponseBody200WithdrawOrderId obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1CapitalWithdrawHistoryResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1CapitalWithdrawHistoryResponseBody200" (\obj -> ((((((((((((GHC.Base.pure GetSapiV1CapitalWithdrawHistoryResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "applyTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "coin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "confirmNo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "info")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "network")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transactionFee")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transferType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "txId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "withdrawOrderId"))

-- | Create a new 'GetSapiV1CapitalWithdrawHistoryResponseBody200' with all required fields.
mkGetSapiV1CapitalWithdrawHistoryResponseBody200 ::
  -- | 'getSapiV1CapitalWithdrawHistoryResponseBody200Address'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalWithdrawHistoryResponseBody200Amount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalWithdrawHistoryResponseBody200ApplyTime'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalWithdrawHistoryResponseBody200Coin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalWithdrawHistoryResponseBody200Id'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalWithdrawHistoryResponseBody200Network'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalWithdrawHistoryResponseBody200Status'
  GHC.Int.Int32 ->
  -- | 'getSapiV1CapitalWithdrawHistoryResponseBody200TransactionFee'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalWithdrawHistoryResponseBody200TransferType'
  GHC.Int.Int32 ->
  -- | 'getSapiV1CapitalWithdrawHistoryResponseBody200TxId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalWithdrawHistoryResponseBody200WithdrawOrderId'
  Data.Text.Internal.Text ->
  GetSapiV1CapitalWithdrawHistoryResponseBody200
mkGetSapiV1CapitalWithdrawHistoryResponseBody200 getSapiV1CapitalWithdrawHistoryResponseBody200Address getSapiV1CapitalWithdrawHistoryResponseBody200Amount getSapiV1CapitalWithdrawHistoryResponseBody200ApplyTime getSapiV1CapitalWithdrawHistoryResponseBody200Coin getSapiV1CapitalWithdrawHistoryResponseBody200Id getSapiV1CapitalWithdrawHistoryResponseBody200Network getSapiV1CapitalWithdrawHistoryResponseBody200Status getSapiV1CapitalWithdrawHistoryResponseBody200TransactionFee getSapiV1CapitalWithdrawHistoryResponseBody200TransferType getSapiV1CapitalWithdrawHistoryResponseBody200TxId getSapiV1CapitalWithdrawHistoryResponseBody200WithdrawOrderId =
  GetSapiV1CapitalWithdrawHistoryResponseBody200
    { getSapiV1CapitalWithdrawHistoryResponseBody200Address = getSapiV1CapitalWithdrawHistoryResponseBody200Address,
      getSapiV1CapitalWithdrawHistoryResponseBody200Amount = getSapiV1CapitalWithdrawHistoryResponseBody200Amount,
      getSapiV1CapitalWithdrawHistoryResponseBody200ApplyTime = getSapiV1CapitalWithdrawHistoryResponseBody200ApplyTime,
      getSapiV1CapitalWithdrawHistoryResponseBody200Coin = getSapiV1CapitalWithdrawHistoryResponseBody200Coin,
      getSapiV1CapitalWithdrawHistoryResponseBody200ConfirmNo = GHC.Maybe.Nothing,
      getSapiV1CapitalWithdrawHistoryResponseBody200Id = getSapiV1CapitalWithdrawHistoryResponseBody200Id,
      getSapiV1CapitalWithdrawHistoryResponseBody200Info = GHC.Maybe.Nothing,
      getSapiV1CapitalWithdrawHistoryResponseBody200Network = getSapiV1CapitalWithdrawHistoryResponseBody200Network,
      getSapiV1CapitalWithdrawHistoryResponseBody200Status = getSapiV1CapitalWithdrawHistoryResponseBody200Status,
      getSapiV1CapitalWithdrawHistoryResponseBody200TransactionFee = getSapiV1CapitalWithdrawHistoryResponseBody200TransactionFee,
      getSapiV1CapitalWithdrawHistoryResponseBody200TransferType = getSapiV1CapitalWithdrawHistoryResponseBody200TransferType,
      getSapiV1CapitalWithdrawHistoryResponseBody200TxId = getSapiV1CapitalWithdrawHistoryResponseBody200TxId,
      getSapiV1CapitalWithdrawHistoryResponseBody200WithdrawOrderId = getSapiV1CapitalWithdrawHistoryResponseBody200WithdrawOrderId
    }

-- | > GET /sapi/v1/capital/withdraw/history
--
-- The same as 'getSapiV1CapitalWithdrawHistory' but accepts an explicit configuration.
getSapiV1CapitalWithdrawHistoryWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1CapitalWithdrawHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1CapitalWithdrawHistoryResponse)
getSapiV1CapitalWithdrawHistoryWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1CapitalWithdrawHistoryResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1CapitalWithdrawHistoryResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              ([GetSapiV1CapitalWithdrawHistoryResponseBody200])
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1CapitalWithdrawHistoryResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1CapitalWithdrawHistoryResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/capital/withdraw/history")
          [ Binance.Common.QueryParameter (Data.Text.pack "coin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "withdrawOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryWithdrawOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "offset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryOffset parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalWithdrawHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalWithdrawHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/capital/withdraw/history
--
-- The same as 'getSapiV1CapitalWithdrawHistory' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1CapitalWithdrawHistoryRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1CapitalWithdrawHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1CapitalWithdrawHistoryRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/capital/withdraw/history")
        [ Binance.Common.QueryParameter (Data.Text.pack "coin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "withdrawOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryWithdrawOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "offset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryOffset parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalWithdrawHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalWithdrawHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/capital/withdraw/history
--
-- The same as 'getSapiV1CapitalWithdrawHistory' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1CapitalWithdrawHistoryWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1CapitalWithdrawHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1CapitalWithdrawHistoryWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/capital/withdraw/history")
          [ Binance.Common.QueryParameter (Data.Text.pack "coin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "withdrawOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryWithdrawOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "offset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryOffset parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalWithdrawHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalWithdrawHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalWithdrawHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
