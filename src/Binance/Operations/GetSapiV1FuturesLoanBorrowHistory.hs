{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1FuturesLoanBorrowHistory
module Binance.Operations.GetSapiV1FuturesLoanBorrowHistory where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/futures/loan/borrow/history
--
-- Weight(IP): 10
getSapiV1FuturesLoanBorrowHistory ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanBorrowHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1FuturesLoanBorrowHistoryResponse)
getSapiV1FuturesLoanBorrowHistory parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1FuturesLoanBorrowHistoryResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1FuturesLoanBorrowHistoryResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1FuturesLoanBorrowHistoryResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1FuturesLoanBorrowHistoryResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1FuturesLoanBorrowHistoryResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/futures/loan/borrow/history")
        [ Binance.Common.QueryParameter (Data.Text.pack "coin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanBorrowHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanBorrowHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/futures\/loan\/borrow\/history.GET.parameters@ in the specification.
data GetSapiV1FuturesLoanBorrowHistoryParameters = GetSapiV1FuturesLoanBorrowHistoryParameters
  { -- | queryCoin: Represents the parameter named \'coin\'
    --
    -- Coin name
    getSapiV1FuturesLoanBorrowHistoryParametersQueryCoin :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1FuturesLoanBorrowHistoryParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- Default 500; max 1000.
    getSapiV1FuturesLoanBorrowHistoryParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1FuturesLoanBorrowHistoryParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1FuturesLoanBorrowHistoryParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1FuturesLoanBorrowHistoryParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1FuturesLoanBorrowHistoryParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1FuturesLoanBorrowHistoryParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanBorrowHistoryParametersQueryCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanBorrowHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanBorrowHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanBorrowHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanBorrowHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanBorrowHistoryParametersQueryCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanBorrowHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanBorrowHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanBorrowHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanBorrowHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1FuturesLoanBorrowHistoryParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1FuturesLoanBorrowHistoryParameters" (\obj -> ((((((GHC.Base.pure GetSapiV1FuturesLoanBorrowHistoryParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1FuturesLoanBorrowHistoryParameters' with all required fields.
mkGetSapiV1FuturesLoanBorrowHistoryParameters ::
  -- | 'getSapiV1FuturesLoanBorrowHistoryParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanBorrowHistoryParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1FuturesLoanBorrowHistoryParameters
mkGetSapiV1FuturesLoanBorrowHistoryParameters getSapiV1FuturesLoanBorrowHistoryParametersQuerySignature getSapiV1FuturesLoanBorrowHistoryParametersQueryTimestamp =
  GetSapiV1FuturesLoanBorrowHistoryParameters
    { getSapiV1FuturesLoanBorrowHistoryParametersQueryCoin = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanBorrowHistoryParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanBorrowHistoryParametersQueryLimit = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanBorrowHistoryParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanBorrowHistoryParametersQuerySignature = getSapiV1FuturesLoanBorrowHistoryParametersQuerySignature,
      getSapiV1FuturesLoanBorrowHistoryParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanBorrowHistoryParametersQueryTimestamp = getSapiV1FuturesLoanBorrowHistoryParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1FuturesLoanBorrowHistory'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1FuturesLoanBorrowHistoryResponseError' is used.
data GetSapiV1FuturesLoanBorrowHistoryResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1FuturesLoanBorrowHistoryResponseError GHC.Base.String
  | -- | Cross-Collateral Borrow History
    GetSapiV1FuturesLoanBorrowHistoryResponse200 GetSapiV1FuturesLoanBorrowHistoryResponseBody200
  | -- | Bad Request
    GetSapiV1FuturesLoanBorrowHistoryResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1FuturesLoanBorrowHistoryResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/futures\/loan\/borrow\/history.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1FuturesLoanBorrowHistoryResponseBody200 = GetSapiV1FuturesLoanBorrowHistoryResponseBody200
  { -- | rows
    getSapiV1FuturesLoanBorrowHistoryResponseBody200Rows :: ([GetSapiV1FuturesLoanBorrowHistoryResponseBody200Rows]),
    -- | total
    getSapiV1FuturesLoanBorrowHistoryResponseBody200Total :: GHC.Int.Int32
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1FuturesLoanBorrowHistoryResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200Total obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200Total obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1FuturesLoanBorrowHistoryResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1FuturesLoanBorrowHistoryResponseBody200" (\obj -> (GHC.Base.pure GetSapiV1FuturesLoanBorrowHistoryResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "rows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'GetSapiV1FuturesLoanBorrowHistoryResponseBody200' with all required fields.
mkGetSapiV1FuturesLoanBorrowHistoryResponseBody200 ::
  -- | 'getSapiV1FuturesLoanBorrowHistoryResponseBody200Rows'
  [GetSapiV1FuturesLoanBorrowHistoryResponseBody200Rows] ->
  -- | 'getSapiV1FuturesLoanBorrowHistoryResponseBody200Total'
  GHC.Int.Int32 ->
  GetSapiV1FuturesLoanBorrowHistoryResponseBody200
mkGetSapiV1FuturesLoanBorrowHistoryResponseBody200 getSapiV1FuturesLoanBorrowHistoryResponseBody200Rows getSapiV1FuturesLoanBorrowHistoryResponseBody200Total =
  GetSapiV1FuturesLoanBorrowHistoryResponseBody200
    { getSapiV1FuturesLoanBorrowHistoryResponseBody200Rows = getSapiV1FuturesLoanBorrowHistoryResponseBody200Rows,
      getSapiV1FuturesLoanBorrowHistoryResponseBody200Total = getSapiV1FuturesLoanBorrowHistoryResponseBody200Total
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/futures\/loan\/borrow\/history.GET.responses.200.content.application\/json.schema.properties.rows.items@ in the specification.
data GetSapiV1FuturesLoanBorrowHistoryResponseBody200Rows = GetSapiV1FuturesLoanBorrowHistoryResponseBody200Rows
  { -- | borrowId
    getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsBorrowId :: Data.Text.Internal.Text,
    -- | coin
    getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCoin :: Data.Text.Internal.Text,
    -- | collateralAmount
    getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralAmount :: Data.Text.Internal.Text,
    -- | collateralCoin
    getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralCoin :: Data.Text.Internal.Text,
    -- | collateralRate
    getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralRate :: Data.Text.Internal.Text,
    -- | confirmedTime
    getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsConfirmedTime :: GHC.Int.Int64,
    -- | deadline
    getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsDeadline :: GHC.Int.Int64,
    -- | leftPrincipal
    getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsLeftPrincipal :: Data.Text.Internal.Text,
    -- | leftTotal
    getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsLeftTotal :: Data.Text.Internal.Text,
    -- | orderStatus
    getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsOrderStatus :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1FuturesLoanBorrowHistoryResponseBody200Rows where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["borrowId" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsBorrowId obj] : ["coin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCoin obj] : ["collateralAmount" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralAmount obj] : ["collateralCoin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralCoin obj] : ["collateralRate" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralRate obj] : ["confirmedTime" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsConfirmedTime obj] : ["deadline" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsDeadline obj] : ["leftPrincipal" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsLeftPrincipal obj] : ["leftTotal" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsLeftTotal obj] : ["orderStatus" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsOrderStatus obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["borrowId" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsBorrowId obj] : ["coin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCoin obj] : ["collateralAmount" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralAmount obj] : ["collateralCoin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralCoin obj] : ["collateralRate" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralRate obj] : ["confirmedTime" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsConfirmedTime obj] : ["deadline" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsDeadline obj] : ["leftPrincipal" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsLeftPrincipal obj] : ["leftTotal" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsLeftTotal obj] : ["orderStatus" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsOrderStatus obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1FuturesLoanBorrowHistoryResponseBody200Rows where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1FuturesLoanBorrowHistoryResponseBody200Rows" (\obj -> (((((((((GHC.Base.pure GetSapiV1FuturesLoanBorrowHistoryResponseBody200Rows GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "borrowId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "coin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "collateralAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "collateralCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "collateralRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "confirmedTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "deadline")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "leftPrincipal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "leftTotal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderStatus"))

-- | Create a new 'GetSapiV1FuturesLoanBorrowHistoryResponseBody200Rows' with all required fields.
mkGetSapiV1FuturesLoanBorrowHistoryResponseBody200Rows ::
  -- | 'getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsBorrowId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCoin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralCoin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralRate'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsConfirmedTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsDeadline'
  GHC.Int.Int64 ->
  -- | 'getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsLeftPrincipal'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsLeftTotal'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsOrderStatus'
  Data.Text.Internal.Text ->
  GetSapiV1FuturesLoanBorrowHistoryResponseBody200Rows
mkGetSapiV1FuturesLoanBorrowHistoryResponseBody200Rows getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsBorrowId getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCoin getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralAmount getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralCoin getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralRate getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsConfirmedTime getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsDeadline getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsLeftPrincipal getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsLeftTotal getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsOrderStatus =
  GetSapiV1FuturesLoanBorrowHistoryResponseBody200Rows
    { getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsBorrowId = getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsBorrowId,
      getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCoin = getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCoin,
      getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralAmount = getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralAmount,
      getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralCoin = getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralCoin,
      getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralRate = getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsCollateralRate,
      getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsConfirmedTime = getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsConfirmedTime,
      getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsDeadline = getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsDeadline,
      getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsLeftPrincipal = getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsLeftPrincipal,
      getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsLeftTotal = getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsLeftTotal,
      getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsOrderStatus = getSapiV1FuturesLoanBorrowHistoryResponseBody200RowsOrderStatus
    }

-- | > GET /sapi/v1/futures/loan/borrow/history
--
-- The same as 'getSapiV1FuturesLoanBorrowHistory' but accepts an explicit configuration.
getSapiV1FuturesLoanBorrowHistoryWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanBorrowHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1FuturesLoanBorrowHistoryResponse)
getSapiV1FuturesLoanBorrowHistoryWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1FuturesLoanBorrowHistoryResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1FuturesLoanBorrowHistoryResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1FuturesLoanBorrowHistoryResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1FuturesLoanBorrowHistoryResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1FuturesLoanBorrowHistoryResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/futures/loan/borrow/history")
          [ Binance.Common.QueryParameter (Data.Text.pack "coin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanBorrowHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanBorrowHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/futures/loan/borrow/history
--
-- The same as 'getSapiV1FuturesLoanBorrowHistory' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1FuturesLoanBorrowHistoryRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanBorrowHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1FuturesLoanBorrowHistoryRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/futures/loan/borrow/history")
        [ Binance.Common.QueryParameter (Data.Text.pack "coin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanBorrowHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanBorrowHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/futures/loan/borrow/history
--
-- The same as 'getSapiV1FuturesLoanBorrowHistory' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1FuturesLoanBorrowHistoryWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanBorrowHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1FuturesLoanBorrowHistoryWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/futures/loan/borrow/history")
          [ Binance.Common.QueryParameter (Data.Text.pack "coin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanBorrowHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanBorrowHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanBorrowHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
