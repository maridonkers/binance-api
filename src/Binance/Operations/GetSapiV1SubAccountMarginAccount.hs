{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1SubAccountMarginAccount
module Binance.Operations.GetSapiV1SubAccountMarginAccount where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/sub-account/margin/account
--
-- Weight(IP): 10
getSapiV1SubAccountMarginAccount ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountMarginAccountParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1SubAccountMarginAccountResponse)
getSapiV1SubAccountMarginAccount parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1SubAccountMarginAccountResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1SubAccountMarginAccountResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1SubAccountMarginAccountResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1SubAccountMarginAccountResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1SubAccountMarginAccountResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/sub-account/margin/account")
        [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountMarginAccountParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountMarginAccountParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountMarginAccountParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountMarginAccountParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/margin\/account.GET.parameters@ in the specification.
data GetSapiV1SubAccountMarginAccountParameters = GetSapiV1SubAccountMarginAccountParameters
  { -- | queryEmail: Represents the parameter named \'email\'
    --
    -- Sub-account email
    getSapiV1SubAccountMarginAccountParametersQueryEmail :: Data.Text.Internal.Text,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1SubAccountMarginAccountParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1SubAccountMarginAccountParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1SubAccountMarginAccountParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1SubAccountMarginAccountParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryEmail" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountParametersQueryEmail obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountMarginAccountParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryEmail" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountParametersQueryEmail obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountMarginAccountParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1SubAccountMarginAccountParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1SubAccountMarginAccountParameters" (\obj -> (((GHC.Base.pure GetSapiV1SubAccountMarginAccountParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryEmail")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1SubAccountMarginAccountParameters' with all required fields.
mkGetSapiV1SubAccountMarginAccountParameters ::
  -- | 'getSapiV1SubAccountMarginAccountParametersQueryEmail'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountMarginAccountParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountMarginAccountParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1SubAccountMarginAccountParameters
mkGetSapiV1SubAccountMarginAccountParameters getSapiV1SubAccountMarginAccountParametersQueryEmail getSapiV1SubAccountMarginAccountParametersQuerySignature getSapiV1SubAccountMarginAccountParametersQueryTimestamp =
  GetSapiV1SubAccountMarginAccountParameters
    { getSapiV1SubAccountMarginAccountParametersQueryEmail = getSapiV1SubAccountMarginAccountParametersQueryEmail,
      getSapiV1SubAccountMarginAccountParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1SubAccountMarginAccountParametersQuerySignature = getSapiV1SubAccountMarginAccountParametersQuerySignature,
      getSapiV1SubAccountMarginAccountParametersQueryTimestamp = getSapiV1SubAccountMarginAccountParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1SubAccountMarginAccount'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1SubAccountMarginAccountResponseError' is used.
data GetSapiV1SubAccountMarginAccountResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1SubAccountMarginAccountResponseError GHC.Base.String
  | -- | Margin sub-account details
    GetSapiV1SubAccountMarginAccountResponse200 GetSapiV1SubAccountMarginAccountResponseBody200
  | -- | Bad Request
    GetSapiV1SubAccountMarginAccountResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1SubAccountMarginAccountResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/margin\/account.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1SubAccountMarginAccountResponseBody200 = GetSapiV1SubAccountMarginAccountResponseBody200
  { -- | email
    getSapiV1SubAccountMarginAccountResponseBody200Email :: Data.Text.Internal.Text,
    -- | marginLevel
    getSapiV1SubAccountMarginAccountResponseBody200MarginLevel :: Data.Text.Internal.Text,
    -- | marginTradeCoeffVo
    getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo :: GetSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo,
    -- | marginUserAssetVoList
    getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList :: ([GetSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList]),
    -- | totalAssetOfBtc
    getSapiV1SubAccountMarginAccountResponseBody200TotalAssetOfBtc :: Data.Text.Internal.Text,
    -- | totalLiabilityOfBtc
    getSapiV1SubAccountMarginAccountResponseBody200TotalLiabilityOfBtc :: Data.Text.Internal.Text,
    -- | totalNetAssetOfBtc
    getSapiV1SubAccountMarginAccountResponseBody200TotalNetAssetOfBtc :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1SubAccountMarginAccountResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["email" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200Email obj] : ["marginLevel" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginLevel obj] : ["marginTradeCoeffVo" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo obj] : ["marginUserAssetVoList" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList obj] : ["totalAssetOfBtc" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200TotalAssetOfBtc obj] : ["totalLiabilityOfBtc" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200TotalLiabilityOfBtc obj] : ["totalNetAssetOfBtc" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200TotalNetAssetOfBtc obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["email" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200Email obj] : ["marginLevel" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginLevel obj] : ["marginTradeCoeffVo" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo obj] : ["marginUserAssetVoList" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList obj] : ["totalAssetOfBtc" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200TotalAssetOfBtc obj] : ["totalLiabilityOfBtc" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200TotalLiabilityOfBtc obj] : ["totalNetAssetOfBtc" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200TotalNetAssetOfBtc obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1SubAccountMarginAccountResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1SubAccountMarginAccountResponseBody200" (\obj -> ((((((GHC.Base.pure GetSapiV1SubAccountMarginAccountResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "marginLevel")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "marginTradeCoeffVo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "marginUserAssetVoList")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalAssetOfBtc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalLiabilityOfBtc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalNetAssetOfBtc"))

-- | Create a new 'GetSapiV1SubAccountMarginAccountResponseBody200' with all required fields.
mkGetSapiV1SubAccountMarginAccountResponseBody200 ::
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200Email'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200MarginLevel'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo'
  GetSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo ->
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList'
  [GetSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList] ->
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200TotalAssetOfBtc'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200TotalLiabilityOfBtc'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200TotalNetAssetOfBtc'
  Data.Text.Internal.Text ->
  GetSapiV1SubAccountMarginAccountResponseBody200
mkGetSapiV1SubAccountMarginAccountResponseBody200 getSapiV1SubAccountMarginAccountResponseBody200Email getSapiV1SubAccountMarginAccountResponseBody200MarginLevel getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList getSapiV1SubAccountMarginAccountResponseBody200TotalAssetOfBtc getSapiV1SubAccountMarginAccountResponseBody200TotalLiabilityOfBtc getSapiV1SubAccountMarginAccountResponseBody200TotalNetAssetOfBtc =
  GetSapiV1SubAccountMarginAccountResponseBody200
    { getSapiV1SubAccountMarginAccountResponseBody200Email = getSapiV1SubAccountMarginAccountResponseBody200Email,
      getSapiV1SubAccountMarginAccountResponseBody200MarginLevel = getSapiV1SubAccountMarginAccountResponseBody200MarginLevel,
      getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo = getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo,
      getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList = getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList,
      getSapiV1SubAccountMarginAccountResponseBody200TotalAssetOfBtc = getSapiV1SubAccountMarginAccountResponseBody200TotalAssetOfBtc,
      getSapiV1SubAccountMarginAccountResponseBody200TotalLiabilityOfBtc = getSapiV1SubAccountMarginAccountResponseBody200TotalLiabilityOfBtc,
      getSapiV1SubAccountMarginAccountResponseBody200TotalNetAssetOfBtc = getSapiV1SubAccountMarginAccountResponseBody200TotalNetAssetOfBtc
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/margin\/account.GET.responses.200.content.application\/json.schema.properties.marginTradeCoeffVo@ in the specification.
data GetSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo = GetSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo
  { -- | forceLiquidationBar: Liquidation margin ratio
    getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoForceLiquidationBar :: Data.Text.Internal.Text,
    -- | marginCallBar: Margin call margin ratio
    getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoMarginCallBar :: Data.Text.Internal.Text,
    -- | normalBar: Initial margin ratio
    getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoNormalBar :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["forceLiquidationBar" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoForceLiquidationBar obj] : ["marginCallBar" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoMarginCallBar obj] : ["normalBar" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoNormalBar obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["forceLiquidationBar" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoForceLiquidationBar obj] : ["marginCallBar" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoMarginCallBar obj] : ["normalBar" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoNormalBar obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo" (\obj -> ((GHC.Base.pure GetSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "forceLiquidationBar")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "marginCallBar")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "normalBar"))

-- | Create a new 'GetSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo' with all required fields.
mkGetSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo ::
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoForceLiquidationBar'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoMarginCallBar'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoNormalBar'
  Data.Text.Internal.Text ->
  GetSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo
mkGetSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoForceLiquidationBar getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoMarginCallBar getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoNormalBar =
  GetSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVo
    { getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoForceLiquidationBar = getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoForceLiquidationBar,
      getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoMarginCallBar = getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoMarginCallBar,
      getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoNormalBar = getSapiV1SubAccountMarginAccountResponseBody200MarginTradeCoeffVoNormalBar
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/margin\/account.GET.responses.200.content.application\/json.schema.properties.marginUserAssetVoList.items@ in the specification.
data GetSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList = GetSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList
  { -- | asset
    getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListAsset :: Data.Text.Internal.Text,
    -- | borrowed
    getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListBorrowed :: Data.Text.Internal.Text,
    -- | free
    getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListFree :: Data.Text.Internal.Text,
    -- | interest
    getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListInterest :: Data.Text.Internal.Text,
    -- | locked
    getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListLocked :: Data.Text.Internal.Text,
    -- | netAsset
    getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListNetAsset :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListAsset obj] : ["borrowed" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListBorrowed obj] : ["free" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListFree obj] : ["interest" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListInterest obj] : ["locked" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListLocked obj] : ["netAsset" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListNetAsset obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListAsset obj] : ["borrowed" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListBorrowed obj] : ["free" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListFree obj] : ["interest" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListInterest obj] : ["locked" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListLocked obj] : ["netAsset" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListNetAsset obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList" (\obj -> (((((GHC.Base.pure GetSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "borrowed")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "free")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interest")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "locked")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "netAsset"))

-- | Create a new 'GetSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList' with all required fields.
mkGetSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList ::
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListAsset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListBorrowed'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListFree'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListInterest'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListLocked'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListNetAsset'
  Data.Text.Internal.Text ->
  GetSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList
mkGetSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListAsset getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListBorrowed getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListFree getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListInterest getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListLocked getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListNetAsset =
  GetSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoList
    { getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListAsset = getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListAsset,
      getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListBorrowed = getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListBorrowed,
      getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListFree = getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListFree,
      getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListInterest = getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListInterest,
      getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListLocked = getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListLocked,
      getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListNetAsset = getSapiV1SubAccountMarginAccountResponseBody200MarginUserAssetVoListNetAsset
    }

-- | > GET /sapi/v1/sub-account/margin/account
--
-- The same as 'getSapiV1SubAccountMarginAccount' but accepts an explicit configuration.
getSapiV1SubAccountMarginAccountWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountMarginAccountParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1SubAccountMarginAccountResponse)
getSapiV1SubAccountMarginAccountWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1SubAccountMarginAccountResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1SubAccountMarginAccountResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1SubAccountMarginAccountResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1SubAccountMarginAccountResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1SubAccountMarginAccountResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/sub-account/margin/account")
          [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountMarginAccountParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountMarginAccountParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountMarginAccountParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountMarginAccountParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/sub-account/margin/account
--
-- The same as 'getSapiV1SubAccountMarginAccount' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1SubAccountMarginAccountRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountMarginAccountParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1SubAccountMarginAccountRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/sub-account/margin/account")
        [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountMarginAccountParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountMarginAccountParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountMarginAccountParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountMarginAccountParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/sub-account/margin/account
--
-- The same as 'getSapiV1SubAccountMarginAccount' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1SubAccountMarginAccountWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountMarginAccountParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1SubAccountMarginAccountWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/sub-account/margin/account")
          [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountMarginAccountParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountMarginAccountParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountMarginAccountParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountMarginAccountParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
