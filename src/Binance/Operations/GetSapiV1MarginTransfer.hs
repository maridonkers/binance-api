{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1MarginTransfer
module Binance.Operations.GetSapiV1MarginTransfer where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/margin/transfer
--
-- - Response in descending order
-- - Returns data for last 7 days by default
-- - Set \`archived\` to \`true\` to query data from 6 months ago
--
-- Weight(IP): 1
getSapiV1MarginTransfer ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginTransferParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1MarginTransferResponse)
getSapiV1MarginTransfer parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1MarginTransferResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginTransferResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1MarginTransferResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginTransferResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginTransferResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/transfer")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "archived") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryArchived parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginTransferParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginTransferParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/transfer.GET.parameters@ in the specification.
data GetSapiV1MarginTransferParameters = GetSapiV1MarginTransferParameters
  { -- | queryArchived: Represents the parameter named \'archived\'
    --
    -- Default: false. Set to true for archived data from 6 months ago
    getSapiV1MarginTransferParametersQueryArchived :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryAsset: Represents the parameter named \'asset\'
    getSapiV1MarginTransferParametersQueryAsset :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryCurrent: Represents the parameter named \'current\'
    --
    -- Current querying page. Start from 1. Default:1
    getSapiV1MarginTransferParametersQueryCurrent :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginTransferParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1MarginTransferParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1MarginTransferParametersQuerySignature :: Data.Text.Internal.Text,
    -- | querySize: Represents the parameter named \'size\'
    --
    -- Default:10 Max:100
    getSapiV1MarginTransferParametersQuerySize :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginTransferParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginTransferParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryType: Represents the parameter named \'type\'
    --
    -- Transfer Type
    getSapiV1MarginTransferParametersQueryType :: (GHC.Maybe.Maybe GetSapiV1MarginTransferParametersQueryType)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginTransferParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryArchived" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQueryArchived obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAsset" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQueryAsset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQuerySize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryType" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQueryType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryArchived" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQueryArchived obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAsset" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQueryAsset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQuerySize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryType" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginTransferParametersQueryType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginTransferParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginTransferParameters" (\obj -> (((((((((GHC.Base.pure GetSapiV1MarginTransferParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryArchived")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCurrent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySize")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryType"))

-- | Create a new 'GetSapiV1MarginTransferParameters' with all required fields.
mkGetSapiV1MarginTransferParameters ::
  -- | 'getSapiV1MarginTransferParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginTransferParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1MarginTransferParameters
mkGetSapiV1MarginTransferParameters getSapiV1MarginTransferParametersQuerySignature getSapiV1MarginTransferParametersQueryTimestamp =
  GetSapiV1MarginTransferParameters
    { getSapiV1MarginTransferParametersQueryArchived = GHC.Maybe.Nothing,
      getSapiV1MarginTransferParametersQueryAsset = GHC.Maybe.Nothing,
      getSapiV1MarginTransferParametersQueryCurrent = GHC.Maybe.Nothing,
      getSapiV1MarginTransferParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1MarginTransferParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1MarginTransferParametersQuerySignature = getSapiV1MarginTransferParametersQuerySignature,
      getSapiV1MarginTransferParametersQuerySize = GHC.Maybe.Nothing,
      getSapiV1MarginTransferParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1MarginTransferParametersQueryTimestamp = getSapiV1MarginTransferParametersQueryTimestamp,
      getSapiV1MarginTransferParametersQueryType = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/margin\/transfer.GET.parameters.properties.queryType@ in the specification.
--
-- Represents the parameter named \'type\'
--
-- Transfer Type
data GetSapiV1MarginTransferParametersQueryType
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1MarginTransferParametersQueryTypeOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1MarginTransferParametersQueryTypeTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"ROLL_IN"@
    GetSapiV1MarginTransferParametersQueryTypeEnumROLLIN
  | -- | Represents the JSON value @"ROLL_OUT"@
    GetSapiV1MarginTransferParametersQueryTypeEnumROLLOUT
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginTransferParametersQueryType where
  toJSON (GetSapiV1MarginTransferParametersQueryTypeOther val) = val
  toJSON (GetSapiV1MarginTransferParametersQueryTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1MarginTransferParametersQueryTypeEnumROLLIN) = "ROLL_IN"
  toJSON (GetSapiV1MarginTransferParametersQueryTypeEnumROLLOUT) = "ROLL_OUT"

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginTransferParametersQueryType where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "ROLL_IN" -> GetSapiV1MarginTransferParametersQueryTypeEnumROLLIN
            | val GHC.Classes.== "ROLL_OUT" -> GetSapiV1MarginTransferParametersQueryTypeEnumROLLOUT
            | GHC.Base.otherwise -> GetSapiV1MarginTransferParametersQueryTypeOther val
      )

-- | Represents a response of the operation 'getSapiV1MarginTransfer'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1MarginTransferResponseError' is used.
data GetSapiV1MarginTransferResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1MarginTransferResponseError GHC.Base.String
  | -- | Margin account transfer history, response in descending order
    GetSapiV1MarginTransferResponse200 GetSapiV1MarginTransferResponseBody200
  | -- | Bad Request
    GetSapiV1MarginTransferResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1MarginTransferResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/transfer.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1MarginTransferResponseBody200 = GetSapiV1MarginTransferResponseBody200
  { -- | rows
    getSapiV1MarginTransferResponseBody200Rows :: ([GetSapiV1MarginTransferResponseBody200Rows]),
    -- | total
    getSapiV1MarginTransferResponseBody200Total :: GHC.Int.Int32
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginTransferResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200Total obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200Total obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginTransferResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginTransferResponseBody200" (\obj -> (GHC.Base.pure GetSapiV1MarginTransferResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "rows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'GetSapiV1MarginTransferResponseBody200' with all required fields.
mkGetSapiV1MarginTransferResponseBody200 ::
  -- | 'getSapiV1MarginTransferResponseBody200Rows'
  [GetSapiV1MarginTransferResponseBody200Rows] ->
  -- | 'getSapiV1MarginTransferResponseBody200Total'
  GHC.Int.Int32 ->
  GetSapiV1MarginTransferResponseBody200
mkGetSapiV1MarginTransferResponseBody200 getSapiV1MarginTransferResponseBody200Rows getSapiV1MarginTransferResponseBody200Total =
  GetSapiV1MarginTransferResponseBody200
    { getSapiV1MarginTransferResponseBody200Rows = getSapiV1MarginTransferResponseBody200Rows,
      getSapiV1MarginTransferResponseBody200Total = getSapiV1MarginTransferResponseBody200Total
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/transfer.GET.responses.200.content.application\/json.schema.properties.rows.items@ in the specification.
data GetSapiV1MarginTransferResponseBody200Rows = GetSapiV1MarginTransferResponseBody200Rows
  { -- | amount
    getSapiV1MarginTransferResponseBody200RowsAmount :: Data.Text.Internal.Text,
    -- | asset
    getSapiV1MarginTransferResponseBody200RowsAsset :: Data.Text.Internal.Text,
    -- | status
    getSapiV1MarginTransferResponseBody200RowsStatus :: Data.Text.Internal.Text,
    -- | timestamp
    getSapiV1MarginTransferResponseBody200RowsTimestamp :: GHC.Int.Int64,
    -- | txId
    getSapiV1MarginTransferResponseBody200RowsTxId :: GHC.Int.Int64,
    -- | type
    getSapiV1MarginTransferResponseBody200RowsType :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginTransferResponseBody200Rows where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200RowsAmount obj] : ["asset" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200RowsAsset obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200RowsStatus obj] : ["timestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200RowsTimestamp obj] : ["txId" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200RowsTxId obj] : ["type" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200RowsType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200RowsAmount obj] : ["asset" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200RowsAsset obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200RowsStatus obj] : ["timestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200RowsTimestamp obj] : ["txId" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200RowsTxId obj] : ["type" Data.Aeson.Types.ToJSON..= getSapiV1MarginTransferResponseBody200RowsType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginTransferResponseBody200Rows where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginTransferResponseBody200Rows" (\obj -> (((((GHC.Base.pure GetSapiV1MarginTransferResponseBody200Rows GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "timestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "txId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))

-- | Create a new 'GetSapiV1MarginTransferResponseBody200Rows' with all required fields.
mkGetSapiV1MarginTransferResponseBody200Rows ::
  -- | 'getSapiV1MarginTransferResponseBody200RowsAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginTransferResponseBody200RowsAsset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginTransferResponseBody200RowsStatus'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginTransferResponseBody200RowsTimestamp'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MarginTransferResponseBody200RowsTxId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MarginTransferResponseBody200RowsType'
  Data.Text.Internal.Text ->
  GetSapiV1MarginTransferResponseBody200Rows
mkGetSapiV1MarginTransferResponseBody200Rows getSapiV1MarginTransferResponseBody200RowsAmount getSapiV1MarginTransferResponseBody200RowsAsset getSapiV1MarginTransferResponseBody200RowsStatus getSapiV1MarginTransferResponseBody200RowsTimestamp getSapiV1MarginTransferResponseBody200RowsTxId getSapiV1MarginTransferResponseBody200RowsType =
  GetSapiV1MarginTransferResponseBody200Rows
    { getSapiV1MarginTransferResponseBody200RowsAmount = getSapiV1MarginTransferResponseBody200RowsAmount,
      getSapiV1MarginTransferResponseBody200RowsAsset = getSapiV1MarginTransferResponseBody200RowsAsset,
      getSapiV1MarginTransferResponseBody200RowsStatus = getSapiV1MarginTransferResponseBody200RowsStatus,
      getSapiV1MarginTransferResponseBody200RowsTimestamp = getSapiV1MarginTransferResponseBody200RowsTimestamp,
      getSapiV1MarginTransferResponseBody200RowsTxId = getSapiV1MarginTransferResponseBody200RowsTxId,
      getSapiV1MarginTransferResponseBody200RowsType = getSapiV1MarginTransferResponseBody200RowsType
    }

-- | > GET /sapi/v1/margin/transfer
--
-- The same as 'getSapiV1MarginTransfer' but accepts an explicit configuration.
getSapiV1MarginTransferWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginTransferParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1MarginTransferResponse)
getSapiV1MarginTransferWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1MarginTransferResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginTransferResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1MarginTransferResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginTransferResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginTransferResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/transfer")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "archived") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryArchived parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginTransferParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginTransferParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/margin/transfer
--
-- The same as 'getSapiV1MarginTransfer' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginTransferRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginTransferParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginTransferRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/transfer")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "archived") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryArchived parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginTransferParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginTransferParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/margin/transfer
--
-- The same as 'getSapiV1MarginTransfer' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginTransferWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginTransferParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginTransferWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/transfer")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "archived") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryArchived parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginTransferParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginTransferParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginTransferParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
