{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1LendingUnionInterestHistory
module Binance.Operations.GetSapiV1LendingUnionInterestHistory where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/lending/union/interestHistory
--
-- - The time between startTime and endTime cannot be longer than 30 days.
-- - If startTime and endTime are both not sent, then the last 30 days\' data will be returned.
--
-- Weight(IP): 1
getSapiV1LendingUnionInterestHistory ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingUnionInterestHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1LendingUnionInterestHistoryResponse)
getSapiV1LendingUnionInterestHistory parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1LendingUnionInterestHistoryResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingUnionInterestHistoryResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ([GetSapiV1LendingUnionInterestHistoryResponseBody200])
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingUnionInterestHistoryResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingUnionInterestHistoryResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/lending/union/interestHistory")
        [ Binance.Common.QueryParameter (Data.Text.pack "lendingType") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingUnionInterestHistoryParametersQueryLendingType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingUnionInterestHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingUnionInterestHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/lending\/union\/interestHistory.GET.parameters@ in the specification.
data GetSapiV1LendingUnionInterestHistoryParameters = GetSapiV1LendingUnionInterestHistoryParameters
  { -- | queryAsset: Represents the parameter named \'asset\'
    getSapiV1LendingUnionInterestHistoryParametersQueryAsset :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryCurrent: Represents the parameter named \'current\'
    --
    -- Current querying page. Start from 1. Default:1
    getSapiV1LendingUnionInterestHistoryParametersQueryCurrent :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1LendingUnionInterestHistoryParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLendingType: Represents the parameter named \'lendingType\'
    --
    -- * \`DAILY\` - for flexible
    -- * \`ACTIVITY\` - for activity
    -- * \`CUSTOMIZED_FIXED\` for fixed
    getSapiV1LendingUnionInterestHistoryParametersQueryLendingType :: GetSapiV1LendingUnionInterestHistoryParametersQueryLendingType,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1LendingUnionInterestHistoryParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1LendingUnionInterestHistoryParametersQuerySignature :: Data.Text.Internal.Text,
    -- | querySize: Represents the parameter named \'size\'
    --
    -- Default:10 Max:100
    getSapiV1LendingUnionInterestHistoryParametersQuerySize :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1LendingUnionInterestHistoryParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1LendingUnionInterestHistoryParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingUnionInterestHistoryParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAsset" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingUnionInterestHistoryParametersQueryAsset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingUnionInterestHistoryParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingUnionInterestHistoryParametersQueryEndTime obj) : ["queryLendingType" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryParametersQueryLendingType obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingUnionInterestHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingUnionInterestHistoryParametersQuerySize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingUnionInterestHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAsset" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingUnionInterestHistoryParametersQueryAsset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingUnionInterestHistoryParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingUnionInterestHistoryParametersQueryEndTime obj) : ["queryLendingType" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryParametersQueryLendingType obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingUnionInterestHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingUnionInterestHistoryParametersQuerySize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingUnionInterestHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingUnionInterestHistoryParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LendingUnionInterestHistoryParameters" (\obj -> ((((((((GHC.Base.pure GetSapiV1LendingUnionInterestHistoryParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCurrent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryLendingType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySize")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1LendingUnionInterestHistoryParameters' with all required fields.
mkGetSapiV1LendingUnionInterestHistoryParameters ::
  -- | 'getSapiV1LendingUnionInterestHistoryParametersQueryLendingType'
  GetSapiV1LendingUnionInterestHistoryParametersQueryLendingType ->
  -- | 'getSapiV1LendingUnionInterestHistoryParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingUnionInterestHistoryParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1LendingUnionInterestHistoryParameters
mkGetSapiV1LendingUnionInterestHistoryParameters getSapiV1LendingUnionInterestHistoryParametersQueryLendingType getSapiV1LendingUnionInterestHistoryParametersQuerySignature getSapiV1LendingUnionInterestHistoryParametersQueryTimestamp =
  GetSapiV1LendingUnionInterestHistoryParameters
    { getSapiV1LendingUnionInterestHistoryParametersQueryAsset = GHC.Maybe.Nothing,
      getSapiV1LendingUnionInterestHistoryParametersQueryCurrent = GHC.Maybe.Nothing,
      getSapiV1LendingUnionInterestHistoryParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1LendingUnionInterestHistoryParametersQueryLendingType = getSapiV1LendingUnionInterestHistoryParametersQueryLendingType,
      getSapiV1LendingUnionInterestHistoryParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1LendingUnionInterestHistoryParametersQuerySignature = getSapiV1LendingUnionInterestHistoryParametersQuerySignature,
      getSapiV1LendingUnionInterestHistoryParametersQuerySize = GHC.Maybe.Nothing,
      getSapiV1LendingUnionInterestHistoryParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1LendingUnionInterestHistoryParametersQueryTimestamp = getSapiV1LendingUnionInterestHistoryParametersQueryTimestamp
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/lending\/union\/interestHistory.GET.parameters.properties.queryLendingType@ in the specification.
--
-- Represents the parameter named \'lendingType\'
--
-- * \`DAILY\` - for flexible
-- * \`ACTIVITY\` - for activity
-- * \`CUSTOMIZED_FIXED\` for fixed
data GetSapiV1LendingUnionInterestHistoryParametersQueryLendingType
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1LendingUnionInterestHistoryParametersQueryLendingTypeOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1LendingUnionInterestHistoryParametersQueryLendingTypeTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"DAILY"@
    GetSapiV1LendingUnionInterestHistoryParametersQueryLendingTypeEnumDAILY
  | -- | Represents the JSON value @"ACTIVITY"@
    GetSapiV1LendingUnionInterestHistoryParametersQueryLendingTypeEnumACTIVITY
  | -- | Represents the JSON value @"CUSTOMIZED_FIXED"@
    GetSapiV1LendingUnionInterestHistoryParametersQueryLendingTypeEnumCUSTOMIZEDFIXED
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingUnionInterestHistoryParametersQueryLendingType where
  toJSON (GetSapiV1LendingUnionInterestHistoryParametersQueryLendingTypeOther val) = val
  toJSON (GetSapiV1LendingUnionInterestHistoryParametersQueryLendingTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1LendingUnionInterestHistoryParametersQueryLendingTypeEnumDAILY) = "DAILY"
  toJSON (GetSapiV1LendingUnionInterestHistoryParametersQueryLendingTypeEnumACTIVITY) = "ACTIVITY"
  toJSON (GetSapiV1LendingUnionInterestHistoryParametersQueryLendingTypeEnumCUSTOMIZEDFIXED) = "CUSTOMIZED_FIXED"

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingUnionInterestHistoryParametersQueryLendingType where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "DAILY" -> GetSapiV1LendingUnionInterestHistoryParametersQueryLendingTypeEnumDAILY
            | val GHC.Classes.== "ACTIVITY" -> GetSapiV1LendingUnionInterestHistoryParametersQueryLendingTypeEnumACTIVITY
            | val GHC.Classes.== "CUSTOMIZED_FIXED" -> GetSapiV1LendingUnionInterestHistoryParametersQueryLendingTypeEnumCUSTOMIZEDFIXED
            | GHC.Base.otherwise -> GetSapiV1LendingUnionInterestHistoryParametersQueryLendingTypeOther val
      )

-- | Represents a response of the operation 'getSapiV1LendingUnionInterestHistory'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1LendingUnionInterestHistoryResponseError' is used.
data GetSapiV1LendingUnionInterestHistoryResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1LendingUnionInterestHistoryResponseError GHC.Base.String
  | -- | History of interest
    GetSapiV1LendingUnionInterestHistoryResponse200 ([GetSapiV1LendingUnionInterestHistoryResponseBody200])
  | -- | Bad Request
    GetSapiV1LendingUnionInterestHistoryResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1LendingUnionInterestHistoryResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/lending\/union\/interestHistory.GET.responses.200.content.application\/json.schema.items@ in the specification.
data GetSapiV1LendingUnionInterestHistoryResponseBody200 = GetSapiV1LendingUnionInterestHistoryResponseBody200
  { -- | asset
    getSapiV1LendingUnionInterestHistoryResponseBody200Asset :: Data.Text.Internal.Text,
    -- | interest
    getSapiV1LendingUnionInterestHistoryResponseBody200Interest :: Data.Text.Internal.Text,
    -- | lendingType
    getSapiV1LendingUnionInterestHistoryResponseBody200LendingType :: Data.Text.Internal.Text,
    -- | productName
    getSapiV1LendingUnionInterestHistoryResponseBody200ProductName :: Data.Text.Internal.Text,
    -- | time
    getSapiV1LendingUnionInterestHistoryResponseBody200Time :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingUnionInterestHistoryResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryResponseBody200Asset obj] : ["interest" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryResponseBody200Interest obj] : ["lendingType" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryResponseBody200LendingType obj] : ["productName" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryResponseBody200ProductName obj] : ["time" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryResponseBody200Time obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryResponseBody200Asset obj] : ["interest" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryResponseBody200Interest obj] : ["lendingType" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryResponseBody200LendingType obj] : ["productName" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryResponseBody200ProductName obj] : ["time" Data.Aeson.Types.ToJSON..= getSapiV1LendingUnionInterestHistoryResponseBody200Time obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingUnionInterestHistoryResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LendingUnionInterestHistoryResponseBody200" (\obj -> ((((GHC.Base.pure GetSapiV1LendingUnionInterestHistoryResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interest")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "lendingType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "productName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "time"))

-- | Create a new 'GetSapiV1LendingUnionInterestHistoryResponseBody200' with all required fields.
mkGetSapiV1LendingUnionInterestHistoryResponseBody200 ::
  -- | 'getSapiV1LendingUnionInterestHistoryResponseBody200Asset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingUnionInterestHistoryResponseBody200Interest'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingUnionInterestHistoryResponseBody200LendingType'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingUnionInterestHistoryResponseBody200ProductName'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingUnionInterestHistoryResponseBody200Time'
  GHC.Int.Int64 ->
  GetSapiV1LendingUnionInterestHistoryResponseBody200
mkGetSapiV1LendingUnionInterestHistoryResponseBody200 getSapiV1LendingUnionInterestHistoryResponseBody200Asset getSapiV1LendingUnionInterestHistoryResponseBody200Interest getSapiV1LendingUnionInterestHistoryResponseBody200LendingType getSapiV1LendingUnionInterestHistoryResponseBody200ProductName getSapiV1LendingUnionInterestHistoryResponseBody200Time =
  GetSapiV1LendingUnionInterestHistoryResponseBody200
    { getSapiV1LendingUnionInterestHistoryResponseBody200Asset = getSapiV1LendingUnionInterestHistoryResponseBody200Asset,
      getSapiV1LendingUnionInterestHistoryResponseBody200Interest = getSapiV1LendingUnionInterestHistoryResponseBody200Interest,
      getSapiV1LendingUnionInterestHistoryResponseBody200LendingType = getSapiV1LendingUnionInterestHistoryResponseBody200LendingType,
      getSapiV1LendingUnionInterestHistoryResponseBody200ProductName = getSapiV1LendingUnionInterestHistoryResponseBody200ProductName,
      getSapiV1LendingUnionInterestHistoryResponseBody200Time = getSapiV1LendingUnionInterestHistoryResponseBody200Time
    }

-- | > GET /sapi/v1/lending/union/interestHistory
--
-- The same as 'getSapiV1LendingUnionInterestHistory' but accepts an explicit configuration.
getSapiV1LendingUnionInterestHistoryWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingUnionInterestHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1LendingUnionInterestHistoryResponse)
getSapiV1LendingUnionInterestHistoryWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1LendingUnionInterestHistoryResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingUnionInterestHistoryResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              ([GetSapiV1LendingUnionInterestHistoryResponseBody200])
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingUnionInterestHistoryResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingUnionInterestHistoryResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/lending/union/interestHistory")
          [ Binance.Common.QueryParameter (Data.Text.pack "lendingType") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingUnionInterestHistoryParametersQueryLendingType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingUnionInterestHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingUnionInterestHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/lending/union/interestHistory
--
-- The same as 'getSapiV1LendingUnionInterestHistory' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LendingUnionInterestHistoryRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingUnionInterestHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LendingUnionInterestHistoryRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/lending/union/interestHistory")
        [ Binance.Common.QueryParameter (Data.Text.pack "lendingType") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingUnionInterestHistoryParametersQueryLendingType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingUnionInterestHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingUnionInterestHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/lending/union/interestHistory
--
-- The same as 'getSapiV1LendingUnionInterestHistory' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LendingUnionInterestHistoryWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingUnionInterestHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LendingUnionInterestHistoryWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/lending/union/interestHistory")
          [ Binance.Common.QueryParameter (Data.Text.pack "lendingType") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingUnionInterestHistoryParametersQueryLendingType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingUnionInterestHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingUnionInterestHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingUnionInterestHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
