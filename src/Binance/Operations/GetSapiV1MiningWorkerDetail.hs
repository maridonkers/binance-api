{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1MiningWorkerDetail
module Binance.Operations.GetSapiV1MiningWorkerDetail where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/mining/worker/detail
--
-- Weight(IP): 5
getSapiV1MiningWorkerDetail ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningWorkerDetailParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1MiningWorkerDetailResponse)
getSapiV1MiningWorkerDetail parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1MiningWorkerDetailResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MiningWorkerDetailResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1MiningWorkerDetailResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MiningWorkerDetailResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MiningWorkerDetailResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/mining/worker/detail")
        [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "workerName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryWorkerName parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerDetailParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/worker\/detail.GET.parameters@ in the specification.
data GetSapiV1MiningWorkerDetailParameters = GetSapiV1MiningWorkerDetailParameters
  { -- | queryAlgo: Represents the parameter named \'algo\'
    --
    -- Algorithm(sha256)
    getSapiV1MiningWorkerDetailParametersQueryAlgo :: Data.Text.Internal.Text,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1MiningWorkerDetailParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1MiningWorkerDetailParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1MiningWorkerDetailParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryUserName: Represents the parameter named \'userName\'
    --
    -- Mining Account
    getSapiV1MiningWorkerDetailParametersQueryUserName :: Data.Text.Internal.Text,
    -- | queryWorkerName: Represents the parameter named \'workerName\'
    --
    -- Minerâ€™s name
    getSapiV1MiningWorkerDetailParametersQueryWorkerName :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningWorkerDetailParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryAlgo" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailParametersQueryAlgo obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningWorkerDetailParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailParametersQueryTimestamp obj] : ["queryUserName" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailParametersQueryUserName obj] : ["queryWorkerName" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailParametersQueryWorkerName obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryAlgo" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailParametersQueryAlgo obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningWorkerDetailParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailParametersQueryTimestamp obj] : ["queryUserName" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailParametersQueryUserName obj] : ["queryWorkerName" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailParametersQueryWorkerName obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningWorkerDetailParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningWorkerDetailParameters" (\obj -> (((((GHC.Base.pure GetSapiV1MiningWorkerDetailParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAlgo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryUserName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryWorkerName"))

-- | Create a new 'GetSapiV1MiningWorkerDetailParameters' with all required fields.
mkGetSapiV1MiningWorkerDetailParameters ::
  -- | 'getSapiV1MiningWorkerDetailParametersQueryAlgo'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningWorkerDetailParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningWorkerDetailParametersQueryTimestamp'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningWorkerDetailParametersQueryUserName'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningWorkerDetailParametersQueryWorkerName'
  Data.Text.Internal.Text ->
  GetSapiV1MiningWorkerDetailParameters
mkGetSapiV1MiningWorkerDetailParameters getSapiV1MiningWorkerDetailParametersQueryAlgo getSapiV1MiningWorkerDetailParametersQuerySignature getSapiV1MiningWorkerDetailParametersQueryTimestamp getSapiV1MiningWorkerDetailParametersQueryUserName getSapiV1MiningWorkerDetailParametersQueryWorkerName =
  GetSapiV1MiningWorkerDetailParameters
    { getSapiV1MiningWorkerDetailParametersQueryAlgo = getSapiV1MiningWorkerDetailParametersQueryAlgo,
      getSapiV1MiningWorkerDetailParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1MiningWorkerDetailParametersQuerySignature = getSapiV1MiningWorkerDetailParametersQuerySignature,
      getSapiV1MiningWorkerDetailParametersQueryTimestamp = getSapiV1MiningWorkerDetailParametersQueryTimestamp,
      getSapiV1MiningWorkerDetailParametersQueryUserName = getSapiV1MiningWorkerDetailParametersQueryUserName,
      getSapiV1MiningWorkerDetailParametersQueryWorkerName = getSapiV1MiningWorkerDetailParametersQueryWorkerName
    }

-- | Represents a response of the operation 'getSapiV1MiningWorkerDetail'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1MiningWorkerDetailResponseError' is used.
data GetSapiV1MiningWorkerDetailResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1MiningWorkerDetailResponseError GHC.Base.String
  | -- | List of workers\' hashrates\'
    GetSapiV1MiningWorkerDetailResponse200 GetSapiV1MiningWorkerDetailResponseBody200
  | -- | Bad Request
    GetSapiV1MiningWorkerDetailResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1MiningWorkerDetailResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/worker\/detail.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1MiningWorkerDetailResponseBody200 = GetSapiV1MiningWorkerDetailResponseBody200
  { -- | code
    getSapiV1MiningWorkerDetailResponseBody200Code :: GHC.Int.Int64,
    -- | data
    getSapiV1MiningWorkerDetailResponseBody200Data :: ([GetSapiV1MiningWorkerDetailResponseBody200Data]),
    -- | msg
    getSapiV1MiningWorkerDetailResponseBody200Msg :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningWorkerDetailResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["code" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200Code obj] : ["data" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200Data obj] : ["msg" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200Msg obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["code" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200Code obj] : ["data" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200Data obj] : ["msg" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200Msg obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningWorkerDetailResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningWorkerDetailResponseBody200" (\obj -> ((GHC.Base.pure GetSapiV1MiningWorkerDetailResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "msg"))

-- | Create a new 'GetSapiV1MiningWorkerDetailResponseBody200' with all required fields.
mkGetSapiV1MiningWorkerDetailResponseBody200 ::
  -- | 'getSapiV1MiningWorkerDetailResponseBody200Code'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningWorkerDetailResponseBody200Data'
  [GetSapiV1MiningWorkerDetailResponseBody200Data] ->
  -- | 'getSapiV1MiningWorkerDetailResponseBody200Msg'
  Data.Text.Internal.Text ->
  GetSapiV1MiningWorkerDetailResponseBody200
mkGetSapiV1MiningWorkerDetailResponseBody200 getSapiV1MiningWorkerDetailResponseBody200Code getSapiV1MiningWorkerDetailResponseBody200Data getSapiV1MiningWorkerDetailResponseBody200Msg =
  GetSapiV1MiningWorkerDetailResponseBody200
    { getSapiV1MiningWorkerDetailResponseBody200Code = getSapiV1MiningWorkerDetailResponseBody200Code,
      getSapiV1MiningWorkerDetailResponseBody200Data = getSapiV1MiningWorkerDetailResponseBody200Data,
      getSapiV1MiningWorkerDetailResponseBody200Msg = getSapiV1MiningWorkerDetailResponseBody200Msg
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/worker\/detail.GET.responses.200.content.application\/json.schema.properties.data.items@ in the specification.
data GetSapiV1MiningWorkerDetailResponseBody200Data = GetSapiV1MiningWorkerDetailResponseBody200Data
  { -- | hashrateDatas
    getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas :: ([GetSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas]),
    -- | type: Type of hourly hashrate
    getSapiV1MiningWorkerDetailResponseBody200DataType :: Data.Text.Internal.Text,
    -- | workerName: Mining Account name
    getSapiV1MiningWorkerDetailResponseBody200DataWorkerName :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningWorkerDetailResponseBody200Data where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["hashrateDatas" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas obj] : ["type" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200DataType obj] : ["workerName" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200DataWorkerName obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["hashrateDatas" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas obj] : ["type" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200DataType obj] : ["workerName" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200DataWorkerName obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningWorkerDetailResponseBody200Data where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningWorkerDetailResponseBody200Data" (\obj -> ((GHC.Base.pure GetSapiV1MiningWorkerDetailResponseBody200Data GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "hashrateDatas")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "workerName"))

-- | Create a new 'GetSapiV1MiningWorkerDetailResponseBody200Data' with all required fields.
mkGetSapiV1MiningWorkerDetailResponseBody200Data ::
  -- | 'getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas'
  [GetSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas] ->
  -- | 'getSapiV1MiningWorkerDetailResponseBody200DataType'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningWorkerDetailResponseBody200DataWorkerName'
  Data.Text.Internal.Text ->
  GetSapiV1MiningWorkerDetailResponseBody200Data
mkGetSapiV1MiningWorkerDetailResponseBody200Data getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas getSapiV1MiningWorkerDetailResponseBody200DataType getSapiV1MiningWorkerDetailResponseBody200DataWorkerName =
  GetSapiV1MiningWorkerDetailResponseBody200Data
    { getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas = getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas,
      getSapiV1MiningWorkerDetailResponseBody200DataType = getSapiV1MiningWorkerDetailResponseBody200DataType,
      getSapiV1MiningWorkerDetailResponseBody200DataWorkerName = getSapiV1MiningWorkerDetailResponseBody200DataWorkerName
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/worker\/detail.GET.responses.200.content.application\/json.schema.properties.data.items.properties.hashrateDatas.items@ in the specification.
data GetSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas = GetSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas
  { -- | hashrate
    getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasHashrate :: Data.Text.Internal.Text,
    -- | reject: Rejection Rate
    getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasReject :: GHC.Int.Int64,
    -- | time
    getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["hashrate" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasHashrate obj] : ["reject" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasReject obj] : ["time" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["hashrate" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasHashrate obj] : ["reject" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasReject obj] : ["time" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas" (\obj -> ((GHC.Base.pure GetSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "hashrate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "reject")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "time"))

-- | Create a new 'GetSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas' with all required fields.
mkGetSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas ::
  -- | 'getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasHashrate'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasReject'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasTime'
  GHC.Int.Int64 ->
  GetSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas
mkGetSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasHashrate getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasReject getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasTime =
  GetSapiV1MiningWorkerDetailResponseBody200DataHashrateDatas
    { getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasHashrate = getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasHashrate,
      getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasReject = getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasReject,
      getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasTime = getSapiV1MiningWorkerDetailResponseBody200DataHashrateDatasTime
    }

-- | > GET /sapi/v1/mining/worker/detail
--
-- The same as 'getSapiV1MiningWorkerDetail' but accepts an explicit configuration.
getSapiV1MiningWorkerDetailWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningWorkerDetailParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1MiningWorkerDetailResponse)
getSapiV1MiningWorkerDetailWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1MiningWorkerDetailResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MiningWorkerDetailResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1MiningWorkerDetailResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MiningWorkerDetailResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MiningWorkerDetailResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/mining/worker/detail")
          [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "workerName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryWorkerName parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerDetailParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/mining/worker/detail
--
-- The same as 'getSapiV1MiningWorkerDetail' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MiningWorkerDetailRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningWorkerDetailParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MiningWorkerDetailRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/mining/worker/detail")
        [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "workerName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryWorkerName parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerDetailParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/mining/worker/detail
--
-- The same as 'getSapiV1MiningWorkerDetail' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MiningWorkerDetailWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningWorkerDetailParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MiningWorkerDetailWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/mining/worker/detail")
          [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "workerName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryWorkerName parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerDetailParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerDetailParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
