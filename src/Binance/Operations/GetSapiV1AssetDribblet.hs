{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1AssetDribblet
module Binance.Operations.GetSapiV1AssetDribblet where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/asset/dribblet
--
-- Weight(IP): 1
getSapiV1AssetDribblet ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AssetDribbletParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1AssetDribbletResponse)
getSapiV1AssetDribblet parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1AssetDribbletResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1AssetDribbletResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1AssetDribbletResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1AssetDribbletResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1AssetDribbletResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/asset/dribblet")
        [ Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetDribbletParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetDribbletParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetDribbletParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetDribbletParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetDribbletParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/asset\/dribblet.GET.parameters@ in the specification.
data GetSapiV1AssetDribbletParameters = GetSapiV1AssetDribbletParameters
  { -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1AssetDribbletParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1AssetDribbletParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1AssetDribbletParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1AssetDribbletParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1AssetDribbletParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AssetDribbletParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1AssetDribbletParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1AssetDribbletParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1AssetDribbletParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1AssetDribbletParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1AssetDribbletParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1AssetDribbletParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AssetDribbletParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1AssetDribbletParameters" (\obj -> ((((GHC.Base.pure GetSapiV1AssetDribbletParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1AssetDribbletParameters' with all required fields.
mkGetSapiV1AssetDribbletParameters ::
  -- | 'getSapiV1AssetDribbletParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AssetDribbletParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1AssetDribbletParameters
mkGetSapiV1AssetDribbletParameters getSapiV1AssetDribbletParametersQuerySignature getSapiV1AssetDribbletParametersQueryTimestamp =
  GetSapiV1AssetDribbletParameters
    { getSapiV1AssetDribbletParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1AssetDribbletParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1AssetDribbletParametersQuerySignature = getSapiV1AssetDribbletParametersQuerySignature,
      getSapiV1AssetDribbletParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1AssetDribbletParametersQueryTimestamp = getSapiV1AssetDribbletParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1AssetDribblet'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1AssetDribbletResponseError' is used.
data GetSapiV1AssetDribbletResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1AssetDribbletResponseError GHC.Base.String
  | -- | Dust log records
    GetSapiV1AssetDribbletResponse200 GetSapiV1AssetDribbletResponseBody200
  | -- | Bad Request
    GetSapiV1AssetDribbletResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1AssetDribbletResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/asset\/dribblet.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1AssetDribbletResponseBody200 = GetSapiV1AssetDribbletResponseBody200
  { -- | total: Total counts of exchange
    getSapiV1AssetDribbletResponseBody200Total :: GHC.Int.Int64,
    -- | userAssetDribblets
    getSapiV1AssetDribbletResponseBody200UserAssetDribblets :: ([GetSapiV1AssetDribbletResponseBody200UserAssetDribblets])
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AssetDribbletResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["total" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200Total obj] : ["userAssetDribblets" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribblets obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["total" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200Total obj] : ["userAssetDribblets" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribblets obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AssetDribbletResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1AssetDribbletResponseBody200" (\obj -> (GHC.Base.pure GetSapiV1AssetDribbletResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "userAssetDribblets"))

-- | Create a new 'GetSapiV1AssetDribbletResponseBody200' with all required fields.
mkGetSapiV1AssetDribbletResponseBody200 ::
  -- | 'getSapiV1AssetDribbletResponseBody200Total'
  GHC.Int.Int64 ->
  -- | 'getSapiV1AssetDribbletResponseBody200UserAssetDribblets'
  [GetSapiV1AssetDribbletResponseBody200UserAssetDribblets] ->
  GetSapiV1AssetDribbletResponseBody200
mkGetSapiV1AssetDribbletResponseBody200 getSapiV1AssetDribbletResponseBody200Total getSapiV1AssetDribbletResponseBody200UserAssetDribblets =
  GetSapiV1AssetDribbletResponseBody200
    { getSapiV1AssetDribbletResponseBody200Total = getSapiV1AssetDribbletResponseBody200Total,
      getSapiV1AssetDribbletResponseBody200UserAssetDribblets = getSapiV1AssetDribbletResponseBody200UserAssetDribblets
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/asset\/dribblet.GET.responses.200.content.application\/json.schema.properties.userAssetDribblets.items@ in the specification.
data GetSapiV1AssetDribbletResponseBody200UserAssetDribblets = GetSapiV1AssetDribbletResponseBody200UserAssetDribblets
  { -- | operateTime
    getSapiV1AssetDribbletResponseBody200UserAssetDribbletsOperateTime :: GHC.Int.Int64,
    -- | totalServiceChargeAmount: Total service charge amount for this exchange.
    getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTotalServiceChargeAmount :: Data.Text.Internal.Text,
    -- | totalTransferedAmount: Total transfered BNB amount for this exchange.
    getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTotalTransferedAmount :: Data.Text.Internal.Text,
    -- | transId
    getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTransId :: GHC.Int.Int64,
    -- | userAssetDribbletDetails
    getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails :: ([GetSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails])
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AssetDribbletResponseBody200UserAssetDribblets where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["operateTime" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsOperateTime obj] : ["totalServiceChargeAmount" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTotalServiceChargeAmount obj] : ["totalTransferedAmount" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTotalTransferedAmount obj] : ["transId" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTransId obj] : ["userAssetDribbletDetails" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["operateTime" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsOperateTime obj] : ["totalServiceChargeAmount" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTotalServiceChargeAmount obj] : ["totalTransferedAmount" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTotalTransferedAmount obj] : ["transId" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTransId obj] : ["userAssetDribbletDetails" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AssetDribbletResponseBody200UserAssetDribblets where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1AssetDribbletResponseBody200UserAssetDribblets" (\obj -> ((((GHC.Base.pure GetSapiV1AssetDribbletResponseBody200UserAssetDribblets GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "operateTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalServiceChargeAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalTransferedAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "userAssetDribbletDetails"))

-- | Create a new 'GetSapiV1AssetDribbletResponseBody200UserAssetDribblets' with all required fields.
mkGetSapiV1AssetDribbletResponseBody200UserAssetDribblets ::
  -- | 'getSapiV1AssetDribbletResponseBody200UserAssetDribbletsOperateTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTotalServiceChargeAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTotalTransferedAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTransId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails'
  [GetSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails] ->
  GetSapiV1AssetDribbletResponseBody200UserAssetDribblets
mkGetSapiV1AssetDribbletResponseBody200UserAssetDribblets getSapiV1AssetDribbletResponseBody200UserAssetDribbletsOperateTime getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTotalServiceChargeAmount getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTotalTransferedAmount getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTransId getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails =
  GetSapiV1AssetDribbletResponseBody200UserAssetDribblets
    { getSapiV1AssetDribbletResponseBody200UserAssetDribbletsOperateTime = getSapiV1AssetDribbletResponseBody200UserAssetDribbletsOperateTime,
      getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTotalServiceChargeAmount = getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTotalServiceChargeAmount,
      getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTotalTransferedAmount = getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTotalTransferedAmount,
      getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTransId = getSapiV1AssetDribbletResponseBody200UserAssetDribbletsTransId,
      getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails = getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/asset\/dribblet.GET.responses.200.content.application\/json.schema.properties.userAssetDribblets.items.properties.userAssetDribbletDetails.items@ in the specification.
data GetSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails = GetSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails
  { -- | amount
    getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsAmount :: Data.Text.Internal.Text,
    -- | fromAsset
    getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsFromAsset :: Data.Text.Internal.Text,
    -- | operateTime
    getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsOperateTime :: GHC.Int.Int64,
    -- | serviceChargeAmount
    getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsServiceChargeAmount :: Data.Text.Internal.Text,
    -- | transId
    getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsTransId :: GHC.Int.Int64,
    -- | transferedAmount
    getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsTransferedAmount :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsAmount obj] : ["fromAsset" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsFromAsset obj] : ["operateTime" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsOperateTime obj] : ["serviceChargeAmount" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsServiceChargeAmount obj] : ["transId" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsTransId obj] : ["transferedAmount" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsTransferedAmount obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsAmount obj] : ["fromAsset" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsFromAsset obj] : ["operateTime" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsOperateTime obj] : ["serviceChargeAmount" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsServiceChargeAmount obj] : ["transId" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsTransId obj] : ["transferedAmount" Data.Aeson.Types.ToJSON..= getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsTransferedAmount obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails" (\obj -> (((((GHC.Base.pure GetSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "fromAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "operateTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "serviceChargeAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transferedAmount"))

-- | Create a new 'GetSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails' with all required fields.
mkGetSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails ::
  -- | 'getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsFromAsset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsOperateTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsServiceChargeAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsTransId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsTransferedAmount'
  Data.Text.Internal.Text ->
  GetSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails
mkGetSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsAmount getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsFromAsset getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsOperateTime getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsServiceChargeAmount getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsTransId getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsTransferedAmount =
  GetSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetails
    { getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsAmount = getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsAmount,
      getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsFromAsset = getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsFromAsset,
      getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsOperateTime = getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsOperateTime,
      getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsServiceChargeAmount = getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsServiceChargeAmount,
      getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsTransId = getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsTransId,
      getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsTransferedAmount = getSapiV1AssetDribbletResponseBody200UserAssetDribbletsUserAssetDribbletDetailsTransferedAmount
    }

-- | > GET /sapi/v1/asset/dribblet
--
-- The same as 'getSapiV1AssetDribblet' but accepts an explicit configuration.
getSapiV1AssetDribbletWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AssetDribbletParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1AssetDribbletResponse)
getSapiV1AssetDribbletWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1AssetDribbletResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1AssetDribbletResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1AssetDribbletResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1AssetDribbletResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1AssetDribbletResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/asset/dribblet")
          [ Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetDribbletParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetDribbletParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetDribbletParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetDribbletParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetDribbletParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/asset/dribblet
--
-- The same as 'getSapiV1AssetDribblet' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1AssetDribbletRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AssetDribbletParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1AssetDribbletRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/asset/dribblet")
        [ Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetDribbletParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetDribbletParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetDribbletParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetDribbletParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetDribbletParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/asset/dribblet
--
-- The same as 'getSapiV1AssetDribblet' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1AssetDribbletWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AssetDribbletParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1AssetDribbletWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/asset/dribblet")
          [ Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetDribbletParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetDribbletParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetDribbletParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetDribbletParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetDribbletParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
