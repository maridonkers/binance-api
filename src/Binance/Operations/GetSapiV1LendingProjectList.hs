{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1LendingProjectList
module Binance.Operations.GetSapiV1LendingProjectList where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/lending/project/list
--
-- Weight(IP): 1
getSapiV1LendingProjectList ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingProjectListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1LendingProjectListResponse)
getSapiV1LendingProjectList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1LendingProjectListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingProjectListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ([GetSapiV1LendingProjectListResponseBody200])
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingProjectListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingProjectListResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/lending/project/list")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectListParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "isSortAsc") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryIsSortAsc parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "sortBy") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQuerySortBy parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/lending\/project\/list.GET.parameters@ in the specification.
data GetSapiV1LendingProjectListParameters = GetSapiV1LendingProjectListParameters
  { -- | queryAsset: Represents the parameter named \'asset\'
    getSapiV1LendingProjectListParametersQueryAsset :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryCurrent: Represents the parameter named \'current\'
    --
    -- Current querying page. Start from 1. Default:1
    getSapiV1LendingProjectListParametersQueryCurrent :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryIsSortAsc: Represents the parameter named \'isSortAsc\'
    --
    -- default \"true\"
    getSapiV1LendingProjectListParametersQueryIsSortAsc :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1LendingProjectListParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1LendingProjectListParametersQuerySignature :: Data.Text.Internal.Text,
    -- | querySize: Represents the parameter named \'size\'
    --
    -- Default:10 Max:100
    getSapiV1LendingProjectListParametersQuerySize :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | querySortBy: Represents the parameter named \'sortBy\'
    --
    -- Default \`START_TIME\`
    getSapiV1LendingProjectListParametersQuerySortBy :: (GHC.Maybe.Maybe GetSapiV1LendingProjectListParametersQuerySortBy),
    -- | queryStatus: Represents the parameter named \'status\'
    --
    -- Default \`ALL\`
    getSapiV1LendingProjectListParametersQueryStatus :: (GHC.Maybe.Maybe GetSapiV1LendingProjectListParametersQueryStatus),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1LendingProjectListParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryType: Represents the parameter named \'type\'
    getSapiV1LendingProjectListParametersQueryType :: GetSapiV1LendingProjectListParametersQueryType
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingProjectListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAsset" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectListParametersQueryAsset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectListParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsSortAsc" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectListParametersQueryIsSortAsc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectListParametersQuerySize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySortBy" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectListParametersQuerySortBy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectListParametersQueryStatus obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListParametersQueryTimestamp obj] : ["queryType" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListParametersQueryType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAsset" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectListParametersQueryAsset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectListParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsSortAsc" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectListParametersQueryIsSortAsc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectListParametersQuerySize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySortBy" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectListParametersQuerySortBy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingProjectListParametersQueryStatus obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListParametersQueryTimestamp obj] : ["queryType" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListParametersQueryType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingProjectListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LendingProjectListParameters" (\obj -> (((((((((GHC.Base.pure GetSapiV1LendingProjectListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCurrent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryIsSortAsc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySize")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySortBy")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryType"))

-- | Create a new 'GetSapiV1LendingProjectListParameters' with all required fields.
mkGetSapiV1LendingProjectListParameters ::
  -- | 'getSapiV1LendingProjectListParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectListParametersQueryTimestamp'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LendingProjectListParametersQueryType'
  GetSapiV1LendingProjectListParametersQueryType ->
  GetSapiV1LendingProjectListParameters
mkGetSapiV1LendingProjectListParameters getSapiV1LendingProjectListParametersQuerySignature getSapiV1LendingProjectListParametersQueryTimestamp getSapiV1LendingProjectListParametersQueryType =
  GetSapiV1LendingProjectListParameters
    { getSapiV1LendingProjectListParametersQueryAsset = GHC.Maybe.Nothing,
      getSapiV1LendingProjectListParametersQueryCurrent = GHC.Maybe.Nothing,
      getSapiV1LendingProjectListParametersQueryIsSortAsc = GHC.Maybe.Nothing,
      getSapiV1LendingProjectListParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1LendingProjectListParametersQuerySignature = getSapiV1LendingProjectListParametersQuerySignature,
      getSapiV1LendingProjectListParametersQuerySize = GHC.Maybe.Nothing,
      getSapiV1LendingProjectListParametersQuerySortBy = GHC.Maybe.Nothing,
      getSapiV1LendingProjectListParametersQueryStatus = GHC.Maybe.Nothing,
      getSapiV1LendingProjectListParametersQueryTimestamp = getSapiV1LendingProjectListParametersQueryTimestamp,
      getSapiV1LendingProjectListParametersQueryType = getSapiV1LendingProjectListParametersQueryType
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/lending\/project\/list.GET.parameters.properties.querySortBy@ in the specification.
--
-- Represents the parameter named \'sortBy\'
--
-- Default \`START_TIME\`
data GetSapiV1LendingProjectListParametersQuerySortBy
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1LendingProjectListParametersQuerySortByOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1LendingProjectListParametersQuerySortByTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"START_TIME"@
    GetSapiV1LendingProjectListParametersQuerySortByEnumSTARTTIME
  | -- | Represents the JSON value @"LOT_SIZE"@
    GetSapiV1LendingProjectListParametersQuerySortByEnumLOTSIZE
  | -- | Represents the JSON value @"INTEREST_RATE"@
    GetSapiV1LendingProjectListParametersQuerySortByEnumINTERESTRATE
  | -- | Represents the JSON value @"DURATION"@
    GetSapiV1LendingProjectListParametersQuerySortByEnumDURATION
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingProjectListParametersQuerySortBy where
  toJSON (GetSapiV1LendingProjectListParametersQuerySortByOther val) = val
  toJSON (GetSapiV1LendingProjectListParametersQuerySortByTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1LendingProjectListParametersQuerySortByEnumSTARTTIME) = "START_TIME"
  toJSON (GetSapiV1LendingProjectListParametersQuerySortByEnumLOTSIZE) = "LOT_SIZE"
  toJSON (GetSapiV1LendingProjectListParametersQuerySortByEnumINTERESTRATE) = "INTEREST_RATE"
  toJSON (GetSapiV1LendingProjectListParametersQuerySortByEnumDURATION) = "DURATION"

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingProjectListParametersQuerySortBy where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "START_TIME" -> GetSapiV1LendingProjectListParametersQuerySortByEnumSTARTTIME
            | val GHC.Classes.== "LOT_SIZE" -> GetSapiV1LendingProjectListParametersQuerySortByEnumLOTSIZE
            | val GHC.Classes.== "INTEREST_RATE" -> GetSapiV1LendingProjectListParametersQuerySortByEnumINTERESTRATE
            | val GHC.Classes.== "DURATION" -> GetSapiV1LendingProjectListParametersQuerySortByEnumDURATION
            | GHC.Base.otherwise -> GetSapiV1LendingProjectListParametersQuerySortByOther val
      )

-- | Defines the enum schema located at @paths.\/sapi\/v1\/lending\/project\/list.GET.parameters.properties.queryStatus@ in the specification.
--
-- Represents the parameter named \'status\'
--
-- Default \`ALL\`
data GetSapiV1LendingProjectListParametersQueryStatus
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1LendingProjectListParametersQueryStatusOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1LendingProjectListParametersQueryStatusTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"ALL"@
    GetSapiV1LendingProjectListParametersQueryStatusEnumALL
  | -- | Represents the JSON value @"SUBSCRIBABLE"@
    GetSapiV1LendingProjectListParametersQueryStatusEnumSUBSCRIBABLE
  | -- | Represents the JSON value @"UNSUBSCRIBABLE"@
    GetSapiV1LendingProjectListParametersQueryStatusEnumUNSUBSCRIBABLE
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingProjectListParametersQueryStatus where
  toJSON (GetSapiV1LendingProjectListParametersQueryStatusOther val) = val
  toJSON (GetSapiV1LendingProjectListParametersQueryStatusTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1LendingProjectListParametersQueryStatusEnumALL) = "ALL"
  toJSON (GetSapiV1LendingProjectListParametersQueryStatusEnumSUBSCRIBABLE) = "SUBSCRIBABLE"
  toJSON (GetSapiV1LendingProjectListParametersQueryStatusEnumUNSUBSCRIBABLE) = "UNSUBSCRIBABLE"

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingProjectListParametersQueryStatus where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "ALL" -> GetSapiV1LendingProjectListParametersQueryStatusEnumALL
            | val GHC.Classes.== "SUBSCRIBABLE" -> GetSapiV1LendingProjectListParametersQueryStatusEnumSUBSCRIBABLE
            | val GHC.Classes.== "UNSUBSCRIBABLE" -> GetSapiV1LendingProjectListParametersQueryStatusEnumUNSUBSCRIBABLE
            | GHC.Base.otherwise -> GetSapiV1LendingProjectListParametersQueryStatusOther val
      )

-- | Defines the enum schema located at @paths.\/sapi\/v1\/lending\/project\/list.GET.parameters.properties.queryType@ in the specification.
--
-- Represents the parameter named \'type\'
data GetSapiV1LendingProjectListParametersQueryType
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1LendingProjectListParametersQueryTypeOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1LendingProjectListParametersQueryTypeTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"ACTIVITY"@
    GetSapiV1LendingProjectListParametersQueryTypeEnumACTIVITY
  | -- | Represents the JSON value @"CUSTOMIZED_FIXED"@
    GetSapiV1LendingProjectListParametersQueryTypeEnumCUSTOMIZEDFIXED
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingProjectListParametersQueryType where
  toJSON (GetSapiV1LendingProjectListParametersQueryTypeOther val) = val
  toJSON (GetSapiV1LendingProjectListParametersQueryTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1LendingProjectListParametersQueryTypeEnumACTIVITY) = "ACTIVITY"
  toJSON (GetSapiV1LendingProjectListParametersQueryTypeEnumCUSTOMIZEDFIXED) = "CUSTOMIZED_FIXED"

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingProjectListParametersQueryType where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "ACTIVITY" -> GetSapiV1LendingProjectListParametersQueryTypeEnumACTIVITY
            | val GHC.Classes.== "CUSTOMIZED_FIXED" -> GetSapiV1LendingProjectListParametersQueryTypeEnumCUSTOMIZEDFIXED
            | GHC.Base.otherwise -> GetSapiV1LendingProjectListParametersQueryTypeOther val
      )

-- | Represents a response of the operation 'getSapiV1LendingProjectList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1LendingProjectListResponseError' is used.
data GetSapiV1LendingProjectListResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1LendingProjectListResponseError GHC.Base.String
  | -- | List of fixed projects
    GetSapiV1LendingProjectListResponse200 ([GetSapiV1LendingProjectListResponseBody200])
  | -- | Bad Request
    GetSapiV1LendingProjectListResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1LendingProjectListResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/lending\/project\/list.GET.responses.200.content.application\/json.schema.items@ in the specification.
data GetSapiV1LendingProjectListResponseBody200 = GetSapiV1LendingProjectListResponseBody200
  { -- | asset
    getSapiV1LendingProjectListResponseBody200Asset :: Data.Text.Internal.Text,
    -- | displayPriority
    getSapiV1LendingProjectListResponseBody200DisplayPriority :: GHC.Int.Int64,
    -- | duration
    getSapiV1LendingProjectListResponseBody200Duration :: GHC.Int.Int64,
    -- | interestPerLot
    getSapiV1LendingProjectListResponseBody200InterestPerLot :: Data.Text.Internal.Text,
    -- | interestRate
    getSapiV1LendingProjectListResponseBody200InterestRate :: Data.Text.Internal.Text,
    -- | lotSize
    getSapiV1LendingProjectListResponseBody200LotSize :: Data.Text.Internal.Text,
    -- | lotsLowLimit
    getSapiV1LendingProjectListResponseBody200LotsLowLimit :: GHC.Int.Int64,
    -- | lotsPurchased
    getSapiV1LendingProjectListResponseBody200LotsPurchased :: GHC.Int.Int64,
    -- | lotsUpLimit
    getSapiV1LendingProjectListResponseBody200LotsUpLimit :: GHC.Int.Int64,
    -- | maxLotsPerUser
    getSapiV1LendingProjectListResponseBody200MaxLotsPerUser :: GHC.Int.Int64,
    -- | needKyc
    getSapiV1LendingProjectListResponseBody200NeedKyc :: GHC.Types.Bool,
    -- | projectId
    getSapiV1LendingProjectListResponseBody200ProjectId :: Data.Text.Internal.Text,
    -- | projectName
    getSapiV1LendingProjectListResponseBody200ProjectName :: Data.Text.Internal.Text,
    -- | status
    getSapiV1LendingProjectListResponseBody200Status :: Data.Text.Internal.Text,
    -- | type
    getSapiV1LendingProjectListResponseBody200Type :: Data.Text.Internal.Text,
    -- | withAreaLimitation
    getSapiV1LendingProjectListResponseBody200WithAreaLimitation :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingProjectListResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200Asset obj] : ["displayPriority" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200DisplayPriority obj] : ["duration" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200Duration obj] : ["interestPerLot" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200InterestPerLot obj] : ["interestRate" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200InterestRate obj] : ["lotSize" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200LotSize obj] : ["lotsLowLimit" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200LotsLowLimit obj] : ["lotsPurchased" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200LotsPurchased obj] : ["lotsUpLimit" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200LotsUpLimit obj] : ["maxLotsPerUser" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200MaxLotsPerUser obj] : ["needKyc" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200NeedKyc obj] : ["projectId" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200ProjectId obj] : ["projectName" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200ProjectName obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200Status obj] : ["type" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200Type obj] : ["withAreaLimitation" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200WithAreaLimitation obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200Asset obj] : ["displayPriority" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200DisplayPriority obj] : ["duration" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200Duration obj] : ["interestPerLot" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200InterestPerLot obj] : ["interestRate" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200InterestRate obj] : ["lotSize" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200LotSize obj] : ["lotsLowLimit" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200LotsLowLimit obj] : ["lotsPurchased" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200LotsPurchased obj] : ["lotsUpLimit" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200LotsUpLimit obj] : ["maxLotsPerUser" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200MaxLotsPerUser obj] : ["needKyc" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200NeedKyc obj] : ["projectId" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200ProjectId obj] : ["projectName" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200ProjectName obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200Status obj] : ["type" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200Type obj] : ["withAreaLimitation" Data.Aeson.Types.ToJSON..= getSapiV1LendingProjectListResponseBody200WithAreaLimitation obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingProjectListResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LendingProjectListResponseBody200" (\obj -> (((((((((((((((GHC.Base.pure GetSapiV1LendingProjectListResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "displayPriority")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "duration")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interestPerLot")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interestRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "lotSize")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "lotsLowLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "lotsPurchased")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "lotsUpLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "maxLotsPerUser")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "needKyc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "projectId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "projectName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "withAreaLimitation"))

-- | Create a new 'GetSapiV1LendingProjectListResponseBody200' with all required fields.
mkGetSapiV1LendingProjectListResponseBody200 ::
  -- | 'getSapiV1LendingProjectListResponseBody200Asset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectListResponseBody200DisplayPriority'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LendingProjectListResponseBody200Duration'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LendingProjectListResponseBody200InterestPerLot'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectListResponseBody200InterestRate'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectListResponseBody200LotSize'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectListResponseBody200LotsLowLimit'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LendingProjectListResponseBody200LotsPurchased'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LendingProjectListResponseBody200LotsUpLimit'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LendingProjectListResponseBody200MaxLotsPerUser'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LendingProjectListResponseBody200NeedKyc'
  GHC.Types.Bool ->
  -- | 'getSapiV1LendingProjectListResponseBody200ProjectId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectListResponseBody200ProjectName'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectListResponseBody200Status'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectListResponseBody200Type'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingProjectListResponseBody200WithAreaLimitation'
  GHC.Types.Bool ->
  GetSapiV1LendingProjectListResponseBody200
mkGetSapiV1LendingProjectListResponseBody200 getSapiV1LendingProjectListResponseBody200Asset getSapiV1LendingProjectListResponseBody200DisplayPriority getSapiV1LendingProjectListResponseBody200Duration getSapiV1LendingProjectListResponseBody200InterestPerLot getSapiV1LendingProjectListResponseBody200InterestRate getSapiV1LendingProjectListResponseBody200LotSize getSapiV1LendingProjectListResponseBody200LotsLowLimit getSapiV1LendingProjectListResponseBody200LotsPurchased getSapiV1LendingProjectListResponseBody200LotsUpLimit getSapiV1LendingProjectListResponseBody200MaxLotsPerUser getSapiV1LendingProjectListResponseBody200NeedKyc getSapiV1LendingProjectListResponseBody200ProjectId getSapiV1LendingProjectListResponseBody200ProjectName getSapiV1LendingProjectListResponseBody200Status getSapiV1LendingProjectListResponseBody200Type getSapiV1LendingProjectListResponseBody200WithAreaLimitation =
  GetSapiV1LendingProjectListResponseBody200
    { getSapiV1LendingProjectListResponseBody200Asset = getSapiV1LendingProjectListResponseBody200Asset,
      getSapiV1LendingProjectListResponseBody200DisplayPriority = getSapiV1LendingProjectListResponseBody200DisplayPriority,
      getSapiV1LendingProjectListResponseBody200Duration = getSapiV1LendingProjectListResponseBody200Duration,
      getSapiV1LendingProjectListResponseBody200InterestPerLot = getSapiV1LendingProjectListResponseBody200InterestPerLot,
      getSapiV1LendingProjectListResponseBody200InterestRate = getSapiV1LendingProjectListResponseBody200InterestRate,
      getSapiV1LendingProjectListResponseBody200LotSize = getSapiV1LendingProjectListResponseBody200LotSize,
      getSapiV1LendingProjectListResponseBody200LotsLowLimit = getSapiV1LendingProjectListResponseBody200LotsLowLimit,
      getSapiV1LendingProjectListResponseBody200LotsPurchased = getSapiV1LendingProjectListResponseBody200LotsPurchased,
      getSapiV1LendingProjectListResponseBody200LotsUpLimit = getSapiV1LendingProjectListResponseBody200LotsUpLimit,
      getSapiV1LendingProjectListResponseBody200MaxLotsPerUser = getSapiV1LendingProjectListResponseBody200MaxLotsPerUser,
      getSapiV1LendingProjectListResponseBody200NeedKyc = getSapiV1LendingProjectListResponseBody200NeedKyc,
      getSapiV1LendingProjectListResponseBody200ProjectId = getSapiV1LendingProjectListResponseBody200ProjectId,
      getSapiV1LendingProjectListResponseBody200ProjectName = getSapiV1LendingProjectListResponseBody200ProjectName,
      getSapiV1LendingProjectListResponseBody200Status = getSapiV1LendingProjectListResponseBody200Status,
      getSapiV1LendingProjectListResponseBody200Type = getSapiV1LendingProjectListResponseBody200Type,
      getSapiV1LendingProjectListResponseBody200WithAreaLimitation = getSapiV1LendingProjectListResponseBody200WithAreaLimitation
    }

-- | > GET /sapi/v1/lending/project/list
--
-- The same as 'getSapiV1LendingProjectList' but accepts an explicit configuration.
getSapiV1LendingProjectListWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingProjectListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1LendingProjectListResponse)
getSapiV1LendingProjectListWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1LendingProjectListResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingProjectListResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              ([GetSapiV1LendingProjectListResponseBody200])
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingProjectListResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingProjectListResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/lending/project/list")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectListParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "isSortAsc") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryIsSortAsc parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "sortBy") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQuerySortBy parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/lending/project/list
--
-- The same as 'getSapiV1LendingProjectList' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LendingProjectListRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingProjectListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LendingProjectListRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/lending/project/list")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectListParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "isSortAsc") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryIsSortAsc parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "sortBy") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQuerySortBy parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/lending/project/list
--
-- The same as 'getSapiV1LendingProjectList' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LendingProjectListWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingProjectListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LendingProjectListWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/lending/project/list")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectListParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "isSortAsc") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryIsSortAsc parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "sortBy") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQuerySortBy parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingProjectListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingProjectListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
