{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1BswapRemoveLiquidityPreview
module Binance.Operations.GetSapiV1BswapRemoveLiquidityPreview where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/bswap/removeLiquidityPreview
--
-- Calculate the expected asset amount of single token redemption or dual token redemption.
--
-- Weight(IP): 150
getSapiV1BswapRemoveLiquidityPreview ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1BswapRemoveLiquidityPreviewParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1BswapRemoveLiquidityPreviewResponse)
getSapiV1BswapRemoveLiquidityPreview parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1BswapRemoveLiquidityPreviewResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1BswapRemoveLiquidityPreviewResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1BswapRemoveLiquidityPreviewResponseBody200Variants
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1BswapRemoveLiquidityPreviewResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1BswapRemoveLiquidityPreviewResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/bswap/removeLiquidityPreview")
        [ Binance.Common.QueryParameter (Data.Text.pack "poolId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryPoolId parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "quoteAsset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryQuoteAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "shareAmount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryShareAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BswapRemoveLiquidityPreviewParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/bswap\/removeLiquidityPreview.GET.parameters@ in the specification.
data GetSapiV1BswapRemoveLiquidityPreviewParameters = GetSapiV1BswapRemoveLiquidityPreviewParameters
  { -- | queryPoolId: Represents the parameter named \'poolId\'
    getSapiV1BswapRemoveLiquidityPreviewParametersQueryPoolId :: GHC.Int.Int64,
    -- | queryQuoteAsset: Represents the parameter named \'quoteAsset\'
    getSapiV1BswapRemoveLiquidityPreviewParametersQueryQuoteAsset :: Data.Text.Internal.Text,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1BswapRemoveLiquidityPreviewParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryShareAmount: Represents the parameter named \'shareAmount\'
    getSapiV1BswapRemoveLiquidityPreviewParametersQueryShareAmount :: GHC.Types.Double,
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1BswapRemoveLiquidityPreviewParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1BswapRemoveLiquidityPreviewParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryType: Represents the parameter named \'type\'
    --
    -- * \`SINGLE\` - remove and obtain a single token
    -- * \`COMBINATION\` - remove and obtain dual token
    getSapiV1BswapRemoveLiquidityPreviewParametersQueryType :: GetSapiV1BswapRemoveLiquidityPreviewParametersQueryType
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1BswapRemoveLiquidityPreviewParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryPoolId" Data.Aeson.Types.ToJSON..= getSapiV1BswapRemoveLiquidityPreviewParametersQueryPoolId obj] : ["queryQuoteAsset" Data.Aeson.Types.ToJSON..= getSapiV1BswapRemoveLiquidityPreviewParametersQueryQuoteAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1BswapRemoveLiquidityPreviewParametersQueryRecvWindow obj) : ["queryShareAmount" Data.Aeson.Types.ToJSON..= getSapiV1BswapRemoveLiquidityPreviewParametersQueryShareAmount obj] : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1BswapRemoveLiquidityPreviewParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1BswapRemoveLiquidityPreviewParametersQueryTimestamp obj] : ["queryType" Data.Aeson.Types.ToJSON..= getSapiV1BswapRemoveLiquidityPreviewParametersQueryType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryPoolId" Data.Aeson.Types.ToJSON..= getSapiV1BswapRemoveLiquidityPreviewParametersQueryPoolId obj] : ["queryQuoteAsset" Data.Aeson.Types.ToJSON..= getSapiV1BswapRemoveLiquidityPreviewParametersQueryQuoteAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1BswapRemoveLiquidityPreviewParametersQueryRecvWindow obj) : ["queryShareAmount" Data.Aeson.Types.ToJSON..= getSapiV1BswapRemoveLiquidityPreviewParametersQueryShareAmount obj] : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1BswapRemoveLiquidityPreviewParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1BswapRemoveLiquidityPreviewParametersQueryTimestamp obj] : ["queryType" Data.Aeson.Types.ToJSON..= getSapiV1BswapRemoveLiquidityPreviewParametersQueryType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1BswapRemoveLiquidityPreviewParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1BswapRemoveLiquidityPreviewParameters" (\obj -> ((((((GHC.Base.pure GetSapiV1BswapRemoveLiquidityPreviewParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryPoolId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryQuoteAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryShareAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryType"))

-- | Create a new 'GetSapiV1BswapRemoveLiquidityPreviewParameters' with all required fields.
mkGetSapiV1BswapRemoveLiquidityPreviewParameters ::
  -- | 'getSapiV1BswapRemoveLiquidityPreviewParametersQueryPoolId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1BswapRemoveLiquidityPreviewParametersQueryQuoteAsset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1BswapRemoveLiquidityPreviewParametersQueryShareAmount'
  GHC.Types.Double ->
  -- | 'getSapiV1BswapRemoveLiquidityPreviewParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1BswapRemoveLiquidityPreviewParametersQueryTimestamp'
  GHC.Int.Int64 ->
  -- | 'getSapiV1BswapRemoveLiquidityPreviewParametersQueryType'
  GetSapiV1BswapRemoveLiquidityPreviewParametersQueryType ->
  GetSapiV1BswapRemoveLiquidityPreviewParameters
mkGetSapiV1BswapRemoveLiquidityPreviewParameters getSapiV1BswapRemoveLiquidityPreviewParametersQueryPoolId getSapiV1BswapRemoveLiquidityPreviewParametersQueryQuoteAsset getSapiV1BswapRemoveLiquidityPreviewParametersQueryShareAmount getSapiV1BswapRemoveLiquidityPreviewParametersQuerySignature getSapiV1BswapRemoveLiquidityPreviewParametersQueryTimestamp getSapiV1BswapRemoveLiquidityPreviewParametersQueryType =
  GetSapiV1BswapRemoveLiquidityPreviewParameters
    { getSapiV1BswapRemoveLiquidityPreviewParametersQueryPoolId = getSapiV1BswapRemoveLiquidityPreviewParametersQueryPoolId,
      getSapiV1BswapRemoveLiquidityPreviewParametersQueryQuoteAsset = getSapiV1BswapRemoveLiquidityPreviewParametersQueryQuoteAsset,
      getSapiV1BswapRemoveLiquidityPreviewParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1BswapRemoveLiquidityPreviewParametersQueryShareAmount = getSapiV1BswapRemoveLiquidityPreviewParametersQueryShareAmount,
      getSapiV1BswapRemoveLiquidityPreviewParametersQuerySignature = getSapiV1BswapRemoveLiquidityPreviewParametersQuerySignature,
      getSapiV1BswapRemoveLiquidityPreviewParametersQueryTimestamp = getSapiV1BswapRemoveLiquidityPreviewParametersQueryTimestamp,
      getSapiV1BswapRemoveLiquidityPreviewParametersQueryType = getSapiV1BswapRemoveLiquidityPreviewParametersQueryType
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/bswap\/removeLiquidityPreview.GET.parameters.properties.queryType@ in the specification.
--
-- Represents the parameter named \'type\'
--
-- * \`SINGLE\` - remove and obtain a single token
-- * \`COMBINATION\` - remove and obtain dual token
data GetSapiV1BswapRemoveLiquidityPreviewParametersQueryType
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1BswapRemoveLiquidityPreviewParametersQueryTypeOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1BswapRemoveLiquidityPreviewParametersQueryTypeTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"SINGLE"@
    GetSapiV1BswapRemoveLiquidityPreviewParametersQueryTypeEnumSINGLE
  | -- | Represents the JSON value @"COMBINATION"@
    GetSapiV1BswapRemoveLiquidityPreviewParametersQueryTypeEnumCOMBINATION
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1BswapRemoveLiquidityPreviewParametersQueryType where
  toJSON (GetSapiV1BswapRemoveLiquidityPreviewParametersQueryTypeOther val) = val
  toJSON (GetSapiV1BswapRemoveLiquidityPreviewParametersQueryTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1BswapRemoveLiquidityPreviewParametersQueryTypeEnumSINGLE) = "SINGLE"
  toJSON (GetSapiV1BswapRemoveLiquidityPreviewParametersQueryTypeEnumCOMBINATION) = "COMBINATION"

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1BswapRemoveLiquidityPreviewParametersQueryType where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "SINGLE" -> GetSapiV1BswapRemoveLiquidityPreviewParametersQueryTypeEnumSINGLE
            | val GHC.Classes.== "COMBINATION" -> GetSapiV1BswapRemoveLiquidityPreviewParametersQueryTypeEnumCOMBINATION
            | GHC.Base.otherwise -> GetSapiV1BswapRemoveLiquidityPreviewParametersQueryTypeOther val
      )

-- | Represents a response of the operation 'getSapiV1BswapRemoveLiquidityPreview'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1BswapRemoveLiquidityPreviewResponseError' is used.
data GetSapiV1BswapRemoveLiquidityPreviewResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1BswapRemoveLiquidityPreviewResponseError GHC.Base.String
  | -- | Remove Liquidity Preview
    GetSapiV1BswapRemoveLiquidityPreviewResponse200 GetSapiV1BswapRemoveLiquidityPreviewResponseBody200Variants
  | -- | Bad Request
    GetSapiV1BswapRemoveLiquidityPreviewResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1BswapRemoveLiquidityPreviewResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the oneOf schema located at @paths.\/sapi\/v1\/bswap\/removeLiquidityPreview.GET.responses.200.content.application\/json.schema.oneOf@ in the specification.
data GetSapiV1BswapRemoveLiquidityPreviewResponseBody200Variants
  = GetSapiV1BswapRemoveLiquidityPreviewResponseBody200Variant1 BswapRmvLiquidityPreviewCombination
  | GetSapiV1BswapRemoveLiquidityPreviewResponseBody200Variant2 BswapRmvLiquidityPreviewSingle
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1BswapRemoveLiquidityPreviewResponseBody200Variants where
  toJSON (GetSapiV1BswapRemoveLiquidityPreviewResponseBody200Variant1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetSapiV1BswapRemoveLiquidityPreviewResponseBody200Variant2 a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1BswapRemoveLiquidityPreviewResponseBody200Variants where
  parseJSON val = case (GetSapiV1BswapRemoveLiquidityPreviewResponseBody200Variant1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetSapiV1BswapRemoveLiquidityPreviewResponseBody200Variant2 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | > GET /sapi/v1/bswap/removeLiquidityPreview
--
-- The same as 'getSapiV1BswapRemoveLiquidityPreview' but accepts an explicit configuration.
getSapiV1BswapRemoveLiquidityPreviewWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1BswapRemoveLiquidityPreviewParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1BswapRemoveLiquidityPreviewResponse)
getSapiV1BswapRemoveLiquidityPreviewWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1BswapRemoveLiquidityPreviewResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1BswapRemoveLiquidityPreviewResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1BswapRemoveLiquidityPreviewResponseBody200Variants
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1BswapRemoveLiquidityPreviewResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1BswapRemoveLiquidityPreviewResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/bswap/removeLiquidityPreview")
          [ Binance.Common.QueryParameter (Data.Text.pack "poolId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryPoolId parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "quoteAsset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryQuoteAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "shareAmount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryShareAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BswapRemoveLiquidityPreviewParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/bswap/removeLiquidityPreview
--
-- The same as 'getSapiV1BswapRemoveLiquidityPreview' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1BswapRemoveLiquidityPreviewRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1BswapRemoveLiquidityPreviewParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1BswapRemoveLiquidityPreviewRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/bswap/removeLiquidityPreview")
        [ Binance.Common.QueryParameter (Data.Text.pack "poolId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryPoolId parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "quoteAsset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryQuoteAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "shareAmount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryShareAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BswapRemoveLiquidityPreviewParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/bswap/removeLiquidityPreview
--
-- The same as 'getSapiV1BswapRemoveLiquidityPreview' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1BswapRemoveLiquidityPreviewWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1BswapRemoveLiquidityPreviewParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1BswapRemoveLiquidityPreviewWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/bswap/removeLiquidityPreview")
          [ Binance.Common.QueryParameter (Data.Text.pack "poolId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryPoolId parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "quoteAsset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryQuoteAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "shareAmount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryShareAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1BswapRemoveLiquidityPreviewParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1BswapRemoveLiquidityPreviewParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
