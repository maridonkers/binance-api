{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1LendingDailyUserRedemptionQuota
module Binance.Operations.GetSapiV1LendingDailyUserRedemptionQuota where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/lending/daily/userRedemptionQuota
--
-- Weight(IP): 1
getSapiV1LendingDailyUserRedemptionQuota ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingDailyUserRedemptionQuotaParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1LendingDailyUserRedemptionQuotaResponse)
getSapiV1LendingDailyUserRedemptionQuota parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1LendingDailyUserRedemptionQuotaResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingDailyUserRedemptionQuotaResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1LendingDailyUserRedemptionQuotaResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingDailyUserRedemptionQuotaResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingDailyUserRedemptionQuotaResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/lending/daily/userRedemptionQuota")
        [ Binance.Common.QueryParameter (Data.Text.pack "productId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQueryProductId parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyUserRedemptionQuotaParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/lending\/daily\/userRedemptionQuota.GET.parameters@ in the specification.
data GetSapiV1LendingDailyUserRedemptionQuotaParameters = GetSapiV1LendingDailyUserRedemptionQuotaParameters
  { -- | queryProductId: Represents the parameter named \'productId\'
    getSapiV1LendingDailyUserRedemptionQuotaParametersQueryProductId :: Data.Text.Internal.Text,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1LendingDailyUserRedemptionQuotaParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1LendingDailyUserRedemptionQuotaParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1LendingDailyUserRedemptionQuotaParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryType: Represents the parameter named \'type\'
    getSapiV1LendingDailyUserRedemptionQuotaParametersQueryType :: GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryType
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingDailyUserRedemptionQuotaParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryProductId" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaParametersQueryProductId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingDailyUserRedemptionQuotaParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaParametersQueryTimestamp obj] : ["queryType" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaParametersQueryType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryProductId" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaParametersQueryProductId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingDailyUserRedemptionQuotaParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaParametersQueryTimestamp obj] : ["queryType" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaParametersQueryType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingDailyUserRedemptionQuotaParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LendingDailyUserRedemptionQuotaParameters" (\obj -> ((((GHC.Base.pure GetSapiV1LendingDailyUserRedemptionQuotaParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryProductId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryType"))

-- | Create a new 'GetSapiV1LendingDailyUserRedemptionQuotaParameters' with all required fields.
mkGetSapiV1LendingDailyUserRedemptionQuotaParameters ::
  -- | 'getSapiV1LendingDailyUserRedemptionQuotaParametersQueryProductId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyUserRedemptionQuotaParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyUserRedemptionQuotaParametersQueryTimestamp'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LendingDailyUserRedemptionQuotaParametersQueryType'
  GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryType ->
  GetSapiV1LendingDailyUserRedemptionQuotaParameters
mkGetSapiV1LendingDailyUserRedemptionQuotaParameters getSapiV1LendingDailyUserRedemptionQuotaParametersQueryProductId getSapiV1LendingDailyUserRedemptionQuotaParametersQuerySignature getSapiV1LendingDailyUserRedemptionQuotaParametersQueryTimestamp getSapiV1LendingDailyUserRedemptionQuotaParametersQueryType =
  GetSapiV1LendingDailyUserRedemptionQuotaParameters
    { getSapiV1LendingDailyUserRedemptionQuotaParametersQueryProductId = getSapiV1LendingDailyUserRedemptionQuotaParametersQueryProductId,
      getSapiV1LendingDailyUserRedemptionQuotaParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1LendingDailyUserRedemptionQuotaParametersQuerySignature = getSapiV1LendingDailyUserRedemptionQuotaParametersQuerySignature,
      getSapiV1LendingDailyUserRedemptionQuotaParametersQueryTimestamp = getSapiV1LendingDailyUserRedemptionQuotaParametersQueryTimestamp,
      getSapiV1LendingDailyUserRedemptionQuotaParametersQueryType = getSapiV1LendingDailyUserRedemptionQuotaParametersQueryType
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/lending\/daily\/userRedemptionQuota.GET.parameters.properties.queryType@ in the specification.
--
-- Represents the parameter named \'type\'
data GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryType
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryTypeOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryTypeTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"FAST"@
    GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryTypeEnumFAST
  | -- | Represents the JSON value @"NORMAL"@
    GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryTypeEnumNORMAL
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryType where
  toJSON (GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryTypeOther val) = val
  toJSON (GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryTypeEnumFAST) = "FAST"
  toJSON (GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryTypeEnumNORMAL) = "NORMAL"

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryType where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "FAST" -> GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryTypeEnumFAST
            | val GHC.Classes.== "NORMAL" -> GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryTypeEnumNORMAL
            | GHC.Base.otherwise -> GetSapiV1LendingDailyUserRedemptionQuotaParametersQueryTypeOther val
      )

-- | Represents a response of the operation 'getSapiV1LendingDailyUserRedemptionQuota'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1LendingDailyUserRedemptionQuotaResponseError' is used.
data GetSapiV1LendingDailyUserRedemptionQuotaResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1LendingDailyUserRedemptionQuotaResponseError GHC.Base.String
  | -- | Daily redemption quota of flexible product left
    GetSapiV1LendingDailyUserRedemptionQuotaResponse200 GetSapiV1LendingDailyUserRedemptionQuotaResponseBody200
  | -- | Bad Request
    GetSapiV1LendingDailyUserRedemptionQuotaResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1LendingDailyUserRedemptionQuotaResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/lending\/daily\/userRedemptionQuota.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1LendingDailyUserRedemptionQuotaResponseBody200 = GetSapiV1LendingDailyUserRedemptionQuotaResponseBody200
  { -- | asset
    getSapiV1LendingDailyUserRedemptionQuotaResponseBody200Asset :: Data.Text.Internal.Text,
    -- | dailyQuota
    getSapiV1LendingDailyUserRedemptionQuotaResponseBody200DailyQuota :: Data.Text.Internal.Text,
    -- | leftQuota
    getSapiV1LendingDailyUserRedemptionQuotaResponseBody200LeftQuota :: Data.Text.Internal.Text,
    -- | minRedemptionAmount
    getSapiV1LendingDailyUserRedemptionQuotaResponseBody200MinRedemptionAmount :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingDailyUserRedemptionQuotaResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaResponseBody200Asset obj] : ["dailyQuota" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaResponseBody200DailyQuota obj] : ["leftQuota" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaResponseBody200LeftQuota obj] : ["minRedemptionAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaResponseBody200MinRedemptionAmount obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaResponseBody200Asset obj] : ["dailyQuota" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaResponseBody200DailyQuota obj] : ["leftQuota" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaResponseBody200LeftQuota obj] : ["minRedemptionAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyUserRedemptionQuotaResponseBody200MinRedemptionAmount obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingDailyUserRedemptionQuotaResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LendingDailyUserRedemptionQuotaResponseBody200" (\obj -> (((GHC.Base.pure GetSapiV1LendingDailyUserRedemptionQuotaResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "dailyQuota")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "leftQuota")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "minRedemptionAmount"))

-- | Create a new 'GetSapiV1LendingDailyUserRedemptionQuotaResponseBody200' with all required fields.
mkGetSapiV1LendingDailyUserRedemptionQuotaResponseBody200 ::
  -- | 'getSapiV1LendingDailyUserRedemptionQuotaResponseBody200Asset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyUserRedemptionQuotaResponseBody200DailyQuota'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyUserRedemptionQuotaResponseBody200LeftQuota'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyUserRedemptionQuotaResponseBody200MinRedemptionAmount'
  Data.Text.Internal.Text ->
  GetSapiV1LendingDailyUserRedemptionQuotaResponseBody200
mkGetSapiV1LendingDailyUserRedemptionQuotaResponseBody200 getSapiV1LendingDailyUserRedemptionQuotaResponseBody200Asset getSapiV1LendingDailyUserRedemptionQuotaResponseBody200DailyQuota getSapiV1LendingDailyUserRedemptionQuotaResponseBody200LeftQuota getSapiV1LendingDailyUserRedemptionQuotaResponseBody200MinRedemptionAmount =
  GetSapiV1LendingDailyUserRedemptionQuotaResponseBody200
    { getSapiV1LendingDailyUserRedemptionQuotaResponseBody200Asset = getSapiV1LendingDailyUserRedemptionQuotaResponseBody200Asset,
      getSapiV1LendingDailyUserRedemptionQuotaResponseBody200DailyQuota = getSapiV1LendingDailyUserRedemptionQuotaResponseBody200DailyQuota,
      getSapiV1LendingDailyUserRedemptionQuotaResponseBody200LeftQuota = getSapiV1LendingDailyUserRedemptionQuotaResponseBody200LeftQuota,
      getSapiV1LendingDailyUserRedemptionQuotaResponseBody200MinRedemptionAmount = getSapiV1LendingDailyUserRedemptionQuotaResponseBody200MinRedemptionAmount
    }

-- | > GET /sapi/v1/lending/daily/userRedemptionQuota
--
-- The same as 'getSapiV1LendingDailyUserRedemptionQuota' but accepts an explicit configuration.
getSapiV1LendingDailyUserRedemptionQuotaWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingDailyUserRedemptionQuotaParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1LendingDailyUserRedemptionQuotaResponse)
getSapiV1LendingDailyUserRedemptionQuotaWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1LendingDailyUserRedemptionQuotaResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingDailyUserRedemptionQuotaResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1LendingDailyUserRedemptionQuotaResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingDailyUserRedemptionQuotaResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingDailyUserRedemptionQuotaResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/lending/daily/userRedemptionQuota")
          [ Binance.Common.QueryParameter (Data.Text.pack "productId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQueryProductId parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyUserRedemptionQuotaParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/lending/daily/userRedemptionQuota
--
-- The same as 'getSapiV1LendingDailyUserRedemptionQuota' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LendingDailyUserRedemptionQuotaRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingDailyUserRedemptionQuotaParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LendingDailyUserRedemptionQuotaRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/lending/daily/userRedemptionQuota")
        [ Binance.Common.QueryParameter (Data.Text.pack "productId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQueryProductId parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyUserRedemptionQuotaParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/lending/daily/userRedemptionQuota
--
-- The same as 'getSapiV1LendingDailyUserRedemptionQuota' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LendingDailyUserRedemptionQuotaWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingDailyUserRedemptionQuotaParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LendingDailyUserRedemptionQuotaWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/lending/daily/userRedemptionQuota")
          [ Binance.Common.QueryParameter (Data.Text.pack "productId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQueryProductId parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyUserRedemptionQuotaParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyUserRedemptionQuotaParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
