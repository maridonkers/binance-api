{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1FuturesLoanLiquidationHistory
module Binance.Operations.GetSapiV1FuturesLoanLiquidationHistory where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/futures/loan/liquidationHistory
--
-- All data will be returned if loanCoin or collateralCoin is not sent
--
-- Weight(IP): 10
getSapiV1FuturesLoanLiquidationHistory ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanLiquidationHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1FuturesLoanLiquidationHistoryResponse)
getSapiV1FuturesLoanLiquidationHistory parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1FuturesLoanLiquidationHistoryResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1FuturesLoanLiquidationHistoryResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1FuturesLoanLiquidationHistoryResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1FuturesLoanLiquidationHistoryResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1FuturesLoanLiquidationHistoryResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/futures/loan/liquidationHistory")
        [ Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanLiquidationHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanLiquidationHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/futures\/loan\/liquidationHistory.GET.parameters@ in the specification.
data GetSapiV1FuturesLoanLiquidationHistoryParameters = GetSapiV1FuturesLoanLiquidationHistoryParameters
  { -- | queryCollateralCoin: Represents the parameter named \'collateralCoin\'
    --
    -- Coin used as collateral
    getSapiV1FuturesLoanLiquidationHistoryParametersQueryCollateralCoin :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1FuturesLoanLiquidationHistoryParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- Default 500; max 1000.
    getSapiV1FuturesLoanLiquidationHistoryParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryLoanCoin: Represents the parameter named \'loanCoin\'
    --
    -- Coin loaned
    getSapiV1FuturesLoanLiquidationHistoryParametersQueryLoanCoin :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1FuturesLoanLiquidationHistoryParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1FuturesLoanLiquidationHistoryParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1FuturesLoanLiquidationHistoryParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1FuturesLoanLiquidationHistoryParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1FuturesLoanLiquidationHistoryParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCollateralCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanLiquidationHistoryParametersQueryCollateralCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanLiquidationHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanLiquidationHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLoanCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanLiquidationHistoryParametersQueryLoanCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanLiquidationHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanLiquidationHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCollateralCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanLiquidationHistoryParametersQueryCollateralCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanLiquidationHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanLiquidationHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLoanCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanLiquidationHistoryParametersQueryLoanCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanLiquidationHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanLiquidationHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1FuturesLoanLiquidationHistoryParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1FuturesLoanLiquidationHistoryParameters" (\obj -> (((((((GHC.Base.pure GetSapiV1FuturesLoanLiquidationHistoryParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCollateralCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLoanCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1FuturesLoanLiquidationHistoryParameters' with all required fields.
mkGetSapiV1FuturesLoanLiquidationHistoryParameters ::
  -- | 'getSapiV1FuturesLoanLiquidationHistoryParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanLiquidationHistoryParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1FuturesLoanLiquidationHistoryParameters
mkGetSapiV1FuturesLoanLiquidationHistoryParameters getSapiV1FuturesLoanLiquidationHistoryParametersQuerySignature getSapiV1FuturesLoanLiquidationHistoryParametersQueryTimestamp =
  GetSapiV1FuturesLoanLiquidationHistoryParameters
    { getSapiV1FuturesLoanLiquidationHistoryParametersQueryCollateralCoin = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanLiquidationHistoryParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanLiquidationHistoryParametersQueryLimit = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanLiquidationHistoryParametersQueryLoanCoin = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanLiquidationHistoryParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanLiquidationHistoryParametersQuerySignature = getSapiV1FuturesLoanLiquidationHistoryParametersQuerySignature,
      getSapiV1FuturesLoanLiquidationHistoryParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanLiquidationHistoryParametersQueryTimestamp = getSapiV1FuturesLoanLiquidationHistoryParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1FuturesLoanLiquidationHistory'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1FuturesLoanLiquidationHistoryResponseError' is used.
data GetSapiV1FuturesLoanLiquidationHistoryResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1FuturesLoanLiquidationHistoryResponseError GHC.Base.String
  | -- | Cross-Collateral Liquidation History
    GetSapiV1FuturesLoanLiquidationHistoryResponse200 GetSapiV1FuturesLoanLiquidationHistoryResponseBody200
  | -- | Bad Request
    GetSapiV1FuturesLoanLiquidationHistoryResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1FuturesLoanLiquidationHistoryResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/futures\/loan\/liquidationHistory.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1FuturesLoanLiquidationHistoryResponseBody200 = GetSapiV1FuturesLoanLiquidationHistoryResponseBody200
  { -- | rows
    getSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows :: ([GetSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows]),
    -- | total
    getSapiV1FuturesLoanLiquidationHistoryResponseBody200Total :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1FuturesLoanLiquidationHistoryResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200Total obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200Total obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1FuturesLoanLiquidationHistoryResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1FuturesLoanLiquidationHistoryResponseBody200" (\obj -> (GHC.Base.pure GetSapiV1FuturesLoanLiquidationHistoryResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "rows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'GetSapiV1FuturesLoanLiquidationHistoryResponseBody200' with all required fields.
mkGetSapiV1FuturesLoanLiquidationHistoryResponseBody200 ::
  -- | 'getSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows'
  [GetSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows] ->
  -- | 'getSapiV1FuturesLoanLiquidationHistoryResponseBody200Total'
  GHC.Int.Int64 ->
  GetSapiV1FuturesLoanLiquidationHistoryResponseBody200
mkGetSapiV1FuturesLoanLiquidationHistoryResponseBody200 getSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows getSapiV1FuturesLoanLiquidationHistoryResponseBody200Total =
  GetSapiV1FuturesLoanLiquidationHistoryResponseBody200
    { getSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows = getSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows,
      getSapiV1FuturesLoanLiquidationHistoryResponseBody200Total = getSapiV1FuturesLoanLiquidationHistoryResponseBody200Total
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/futures\/loan\/liquidationHistory.GET.responses.200.content.application\/json.schema.properties.rows.items@ in the specification.
data GetSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows = GetSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows
  { -- | coin
    getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCoin :: Data.Text.Internal.Text,
    -- | collateralAmountForLiquidation
    getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCollateralAmountForLiquidation :: Data.Text.Internal.Text,
    -- | collateralCoin
    getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCollateralCoin :: Data.Text.Internal.Text,
    -- | forceLiquidationStartTime
    getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsForceLiquidationStartTime :: GHC.Int.Int64,
    -- | restCollateralAmountAfterLiquidation
    getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsRestCollateralAmountAfterLiquidation :: Data.Text.Internal.Text,
    -- | restLoanAmount
    getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsRestLoanAmount :: Data.Text.Internal.Text,
    -- | status
    getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsStatus :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["coin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCoin obj] : ["collateralAmountForLiquidation" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCollateralAmountForLiquidation obj] : ["collateralCoin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCollateralCoin obj] : ["forceLiquidationStartTime" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsForceLiquidationStartTime obj] : ["restCollateralAmountAfterLiquidation" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsRestCollateralAmountAfterLiquidation obj] : ["restLoanAmount" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsRestLoanAmount obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsStatus obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["coin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCoin obj] : ["collateralAmountForLiquidation" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCollateralAmountForLiquidation obj] : ["collateralCoin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCollateralCoin obj] : ["forceLiquidationStartTime" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsForceLiquidationStartTime obj] : ["restCollateralAmountAfterLiquidation" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsRestCollateralAmountAfterLiquidation obj] : ["restLoanAmount" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsRestLoanAmount obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsStatus obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows" (\obj -> ((((((GHC.Base.pure GetSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "coin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "collateralAmountForLiquidation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "collateralCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "forceLiquidationStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "restCollateralAmountAfterLiquidation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "restLoanAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status"))

-- | Create a new 'GetSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows' with all required fields.
mkGetSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows ::
  -- | 'getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCoin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCollateralAmountForLiquidation'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCollateralCoin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsForceLiquidationStartTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsRestCollateralAmountAfterLiquidation'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsRestLoanAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsStatus'
  Data.Text.Internal.Text ->
  GetSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows
mkGetSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCoin getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCollateralAmountForLiquidation getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCollateralCoin getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsForceLiquidationStartTime getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsRestCollateralAmountAfterLiquidation getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsRestLoanAmount getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsStatus =
  GetSapiV1FuturesLoanLiquidationHistoryResponseBody200Rows
    { getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCoin = getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCoin,
      getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCollateralAmountForLiquidation = getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCollateralAmountForLiquidation,
      getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCollateralCoin = getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsCollateralCoin,
      getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsForceLiquidationStartTime = getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsForceLiquidationStartTime,
      getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsRestCollateralAmountAfterLiquidation = getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsRestCollateralAmountAfterLiquidation,
      getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsRestLoanAmount = getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsRestLoanAmount,
      getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsStatus = getSapiV1FuturesLoanLiquidationHistoryResponseBody200RowsStatus
    }

-- | > GET /sapi/v1/futures/loan/liquidationHistory
--
-- The same as 'getSapiV1FuturesLoanLiquidationHistory' but accepts an explicit configuration.
getSapiV1FuturesLoanLiquidationHistoryWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanLiquidationHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1FuturesLoanLiquidationHistoryResponse)
getSapiV1FuturesLoanLiquidationHistoryWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1FuturesLoanLiquidationHistoryResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1FuturesLoanLiquidationHistoryResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1FuturesLoanLiquidationHistoryResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1FuturesLoanLiquidationHistoryResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1FuturesLoanLiquidationHistoryResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/futures/loan/liquidationHistory")
          [ Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanLiquidationHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanLiquidationHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/futures/loan/liquidationHistory
--
-- The same as 'getSapiV1FuturesLoanLiquidationHistory' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1FuturesLoanLiquidationHistoryRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanLiquidationHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1FuturesLoanLiquidationHistoryRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/futures/loan/liquidationHistory")
        [ Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanLiquidationHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanLiquidationHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/futures/loan/liquidationHistory
--
-- The same as 'getSapiV1FuturesLoanLiquidationHistory' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1FuturesLoanLiquidationHistoryWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanLiquidationHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1FuturesLoanLiquidationHistoryWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/futures/loan/liquidationHistory")
          [ Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanLiquidationHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanLiquidationHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanLiquidationHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
