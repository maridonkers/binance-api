{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1MiningWorkerList
module Binance.Operations.GetSapiV1MiningWorkerList where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/mining/worker/list
--
-- Weight(IP): 5
getSapiV1MiningWorkerList ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningWorkerListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1MiningWorkerListResponse)
getSapiV1MiningWorkerList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1MiningWorkerListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MiningWorkerListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1MiningWorkerListResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MiningWorkerListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MiningWorkerListResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/mining/worker/list")
        [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "pageIndex") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQueryPageIndex parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQuerySort parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "sortColumn") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQuerySortColumn parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "workerStatus") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQueryWorkerStatus parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/worker\/list.GET.parameters@ in the specification.
data GetSapiV1MiningWorkerListParameters = GetSapiV1MiningWorkerListParameters
  { -- | queryAlgo: Represents the parameter named \'algo\'
    --
    -- Algorithm(sha256)
    getSapiV1MiningWorkerListParametersQueryAlgo :: Data.Text.Internal.Text,
    -- | queryPageIndex: Represents the parameter named \'pageIndex\'
    --
    -- Page number, default is first page, start form 1
    getSapiV1MiningWorkerListParametersQueryPageIndex :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1MiningWorkerListParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1MiningWorkerListParametersQuerySignature :: Data.Text.Internal.Text,
    -- | querySort: Represents the parameter named \'sort\'
    --
    -- sort sequence（default=0）0 positive sequence, 1 negative sequence
    getSapiV1MiningWorkerListParametersQuerySort :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | querySortColumn: Represents the parameter named \'sortColumn\'
    --
    -- Sort by( default 1): 1: miner name, 2: real-time computing power, 3: daily average computing power, 4: real-time rejection rate, 5: last submission time
    getSapiV1MiningWorkerListParametersQuerySortColumn :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1MiningWorkerListParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryUserName: Represents the parameter named \'userName\'
    --
    -- Mining Account
    getSapiV1MiningWorkerListParametersQueryUserName :: Data.Text.Internal.Text,
    -- | queryWorkerStatus: Represents the parameter named \'workerStatus\'
    --
    -- miners status（default=0）0 all, 1 valid, 2 invalid, 3 failure
    getSapiV1MiningWorkerListParametersQueryWorkerStatus :: (GHC.Maybe.Maybe GHC.Int.Int32)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningWorkerListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryAlgo" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListParametersQueryAlgo obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPageIndex" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningWorkerListParametersQueryPageIndex obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningWorkerListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySort" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningWorkerListParametersQuerySort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySortColumn" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningWorkerListParametersQuerySortColumn obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListParametersQueryTimestamp obj] : ["queryUserName" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListParametersQueryUserName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryWorkerStatus" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningWorkerListParametersQueryWorkerStatus obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryAlgo" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListParametersQueryAlgo obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPageIndex" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningWorkerListParametersQueryPageIndex obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningWorkerListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySort" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningWorkerListParametersQuerySort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySortColumn" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningWorkerListParametersQuerySortColumn obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListParametersQueryTimestamp obj] : ["queryUserName" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListParametersQueryUserName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryWorkerStatus" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningWorkerListParametersQueryWorkerStatus obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningWorkerListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningWorkerListParameters" (\obj -> ((((((((GHC.Base.pure GetSapiV1MiningWorkerListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAlgo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPageIndex")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySort")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySortColumn")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryUserName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryWorkerStatus"))

-- | Create a new 'GetSapiV1MiningWorkerListParameters' with all required fields.
mkGetSapiV1MiningWorkerListParameters ::
  -- | 'getSapiV1MiningWorkerListParametersQueryAlgo'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningWorkerListParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningWorkerListParametersQueryTimestamp'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningWorkerListParametersQueryUserName'
  Data.Text.Internal.Text ->
  GetSapiV1MiningWorkerListParameters
mkGetSapiV1MiningWorkerListParameters getSapiV1MiningWorkerListParametersQueryAlgo getSapiV1MiningWorkerListParametersQuerySignature getSapiV1MiningWorkerListParametersQueryTimestamp getSapiV1MiningWorkerListParametersQueryUserName =
  GetSapiV1MiningWorkerListParameters
    { getSapiV1MiningWorkerListParametersQueryAlgo = getSapiV1MiningWorkerListParametersQueryAlgo,
      getSapiV1MiningWorkerListParametersQueryPageIndex = GHC.Maybe.Nothing,
      getSapiV1MiningWorkerListParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1MiningWorkerListParametersQuerySignature = getSapiV1MiningWorkerListParametersQuerySignature,
      getSapiV1MiningWorkerListParametersQuerySort = GHC.Maybe.Nothing,
      getSapiV1MiningWorkerListParametersQuerySortColumn = GHC.Maybe.Nothing,
      getSapiV1MiningWorkerListParametersQueryTimestamp = getSapiV1MiningWorkerListParametersQueryTimestamp,
      getSapiV1MiningWorkerListParametersQueryUserName = getSapiV1MiningWorkerListParametersQueryUserName,
      getSapiV1MiningWorkerListParametersQueryWorkerStatus = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'getSapiV1MiningWorkerList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1MiningWorkerListResponseError' is used.
data GetSapiV1MiningWorkerListResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1MiningWorkerListResponseError GHC.Base.String
  | -- | List of workers
    GetSapiV1MiningWorkerListResponse200 GetSapiV1MiningWorkerListResponseBody200
  | -- | Bad Request
    GetSapiV1MiningWorkerListResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1MiningWorkerListResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/worker\/list.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1MiningWorkerListResponseBody200 = GetSapiV1MiningWorkerListResponseBody200
  { -- | code
    getSapiV1MiningWorkerListResponseBody200Code :: GHC.Int.Int64,
    -- | data
    getSapiV1MiningWorkerListResponseBody200Data :: GetSapiV1MiningWorkerListResponseBody200Data,
    -- | msg
    getSapiV1MiningWorkerListResponseBody200Msg :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningWorkerListResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["code" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200Code obj] : ["data" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200Data obj] : ["msg" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200Msg obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["code" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200Code obj] : ["data" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200Data obj] : ["msg" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200Msg obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningWorkerListResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningWorkerListResponseBody200" (\obj -> ((GHC.Base.pure GetSapiV1MiningWorkerListResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "msg"))

-- | Create a new 'GetSapiV1MiningWorkerListResponseBody200' with all required fields.
mkGetSapiV1MiningWorkerListResponseBody200 ::
  -- | 'getSapiV1MiningWorkerListResponseBody200Code'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningWorkerListResponseBody200Data'
  GetSapiV1MiningWorkerListResponseBody200Data ->
  -- | 'getSapiV1MiningWorkerListResponseBody200Msg'
  Data.Text.Internal.Text ->
  GetSapiV1MiningWorkerListResponseBody200
mkGetSapiV1MiningWorkerListResponseBody200 getSapiV1MiningWorkerListResponseBody200Code getSapiV1MiningWorkerListResponseBody200Data getSapiV1MiningWorkerListResponseBody200Msg =
  GetSapiV1MiningWorkerListResponseBody200
    { getSapiV1MiningWorkerListResponseBody200Code = getSapiV1MiningWorkerListResponseBody200Code,
      getSapiV1MiningWorkerListResponseBody200Data = getSapiV1MiningWorkerListResponseBody200Data,
      getSapiV1MiningWorkerListResponseBody200Msg = getSapiV1MiningWorkerListResponseBody200Msg
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/worker\/list.GET.responses.200.content.application\/json.schema.properties.data@ in the specification.
data GetSapiV1MiningWorkerListResponseBody200Data = GetSapiV1MiningWorkerListResponseBody200Data
  { -- | pageSize
    getSapiV1MiningWorkerListResponseBody200DataPageSize :: GHC.Int.Int64,
    -- | totalNum
    getSapiV1MiningWorkerListResponseBody200DataTotalNum :: GHC.Int.Int64,
    -- | workerDatas
    getSapiV1MiningWorkerListResponseBody200DataWorkerDatas :: ([GetSapiV1MiningWorkerListResponseBody200DataWorkerDatas])
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningWorkerListResponseBody200Data where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pageSize" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataPageSize obj] : ["totalNum" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataTotalNum obj] : ["workerDatas" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatas obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pageSize" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataPageSize obj] : ["totalNum" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataTotalNum obj] : ["workerDatas" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatas obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningWorkerListResponseBody200Data where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningWorkerListResponseBody200Data" (\obj -> ((GHC.Base.pure GetSapiV1MiningWorkerListResponseBody200Data GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pageSize")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalNum")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "workerDatas"))

-- | Create a new 'GetSapiV1MiningWorkerListResponseBody200Data' with all required fields.
mkGetSapiV1MiningWorkerListResponseBody200Data ::
  -- | 'getSapiV1MiningWorkerListResponseBody200DataPageSize'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningWorkerListResponseBody200DataTotalNum'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningWorkerListResponseBody200DataWorkerDatas'
  [GetSapiV1MiningWorkerListResponseBody200DataWorkerDatas] ->
  GetSapiV1MiningWorkerListResponseBody200Data
mkGetSapiV1MiningWorkerListResponseBody200Data getSapiV1MiningWorkerListResponseBody200DataPageSize getSapiV1MiningWorkerListResponseBody200DataTotalNum getSapiV1MiningWorkerListResponseBody200DataWorkerDatas =
  GetSapiV1MiningWorkerListResponseBody200Data
    { getSapiV1MiningWorkerListResponseBody200DataPageSize = getSapiV1MiningWorkerListResponseBody200DataPageSize,
      getSapiV1MiningWorkerListResponseBody200DataTotalNum = getSapiV1MiningWorkerListResponseBody200DataTotalNum,
      getSapiV1MiningWorkerListResponseBody200DataWorkerDatas = getSapiV1MiningWorkerListResponseBody200DataWorkerDatas
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/worker\/list.GET.responses.200.content.application\/json.schema.properties.data.properties.workerDatas.items@ in the specification.
data GetSapiV1MiningWorkerListResponseBody200DataWorkerDatas = GetSapiV1MiningWorkerListResponseBody200DataWorkerDatas
  { -- | dayHashRate: 24H Hashrate
    getSapiV1MiningWorkerListResponseBody200DataWorkerDatasDayHashRate :: GHC.Int.Int64,
    -- | hashRate: Real-time rate
    getSapiV1MiningWorkerListResponseBody200DataWorkerDatasHashRate :: GHC.Int.Int64,
    -- | lastShareTime: Last submission time
    getSapiV1MiningWorkerListResponseBody200DataWorkerDatasLastShareTime :: GHC.Int.Int64,
    -- | rejectRate: Real-time Rejection Rate
    getSapiV1MiningWorkerListResponseBody200DataWorkerDatasRejectRate :: GHC.Int.Int64,
    -- | status: Status：1 valid, 2 invalid, 3 no longer valid
    getSapiV1MiningWorkerListResponseBody200DataWorkerDatasStatus :: GHC.Int.Int64,
    -- | workerId
    getSapiV1MiningWorkerListResponseBody200DataWorkerDatasWorkerId :: Data.Text.Internal.Text,
    -- | workerName
    getSapiV1MiningWorkerListResponseBody200DataWorkerDatasWorkerName :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningWorkerListResponseBody200DataWorkerDatas where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["dayHashRate" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatasDayHashRate obj] : ["hashRate" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatasHashRate obj] : ["lastShareTime" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatasLastShareTime obj] : ["rejectRate" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatasRejectRate obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatasStatus obj] : ["workerId" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatasWorkerId obj] : ["workerName" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatasWorkerName obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["dayHashRate" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatasDayHashRate obj] : ["hashRate" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatasHashRate obj] : ["lastShareTime" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatasLastShareTime obj] : ["rejectRate" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatasRejectRate obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatasStatus obj] : ["workerId" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatasWorkerId obj] : ["workerName" Data.Aeson.Types.ToJSON..= getSapiV1MiningWorkerListResponseBody200DataWorkerDatasWorkerName obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningWorkerListResponseBody200DataWorkerDatas where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningWorkerListResponseBody200DataWorkerDatas" (\obj -> ((((((GHC.Base.pure GetSapiV1MiningWorkerListResponseBody200DataWorkerDatas GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "dayHashRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "hashRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "lastShareTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "rejectRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "workerId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "workerName"))

-- | Create a new 'GetSapiV1MiningWorkerListResponseBody200DataWorkerDatas' with all required fields.
mkGetSapiV1MiningWorkerListResponseBody200DataWorkerDatas ::
  -- | 'getSapiV1MiningWorkerListResponseBody200DataWorkerDatasDayHashRate'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningWorkerListResponseBody200DataWorkerDatasHashRate'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningWorkerListResponseBody200DataWorkerDatasLastShareTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningWorkerListResponseBody200DataWorkerDatasRejectRate'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningWorkerListResponseBody200DataWorkerDatasStatus'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningWorkerListResponseBody200DataWorkerDatasWorkerId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningWorkerListResponseBody200DataWorkerDatasWorkerName'
  Data.Text.Internal.Text ->
  GetSapiV1MiningWorkerListResponseBody200DataWorkerDatas
mkGetSapiV1MiningWorkerListResponseBody200DataWorkerDatas getSapiV1MiningWorkerListResponseBody200DataWorkerDatasDayHashRate getSapiV1MiningWorkerListResponseBody200DataWorkerDatasHashRate getSapiV1MiningWorkerListResponseBody200DataWorkerDatasLastShareTime getSapiV1MiningWorkerListResponseBody200DataWorkerDatasRejectRate getSapiV1MiningWorkerListResponseBody200DataWorkerDatasStatus getSapiV1MiningWorkerListResponseBody200DataWorkerDatasWorkerId getSapiV1MiningWorkerListResponseBody200DataWorkerDatasWorkerName =
  GetSapiV1MiningWorkerListResponseBody200DataWorkerDatas
    { getSapiV1MiningWorkerListResponseBody200DataWorkerDatasDayHashRate = getSapiV1MiningWorkerListResponseBody200DataWorkerDatasDayHashRate,
      getSapiV1MiningWorkerListResponseBody200DataWorkerDatasHashRate = getSapiV1MiningWorkerListResponseBody200DataWorkerDatasHashRate,
      getSapiV1MiningWorkerListResponseBody200DataWorkerDatasLastShareTime = getSapiV1MiningWorkerListResponseBody200DataWorkerDatasLastShareTime,
      getSapiV1MiningWorkerListResponseBody200DataWorkerDatasRejectRate = getSapiV1MiningWorkerListResponseBody200DataWorkerDatasRejectRate,
      getSapiV1MiningWorkerListResponseBody200DataWorkerDatasStatus = getSapiV1MiningWorkerListResponseBody200DataWorkerDatasStatus,
      getSapiV1MiningWorkerListResponseBody200DataWorkerDatasWorkerId = getSapiV1MiningWorkerListResponseBody200DataWorkerDatasWorkerId,
      getSapiV1MiningWorkerListResponseBody200DataWorkerDatasWorkerName = getSapiV1MiningWorkerListResponseBody200DataWorkerDatasWorkerName
    }

-- | > GET /sapi/v1/mining/worker/list
--
-- The same as 'getSapiV1MiningWorkerList' but accepts an explicit configuration.
getSapiV1MiningWorkerListWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningWorkerListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1MiningWorkerListResponse)
getSapiV1MiningWorkerListWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1MiningWorkerListResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MiningWorkerListResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1MiningWorkerListResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MiningWorkerListResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MiningWorkerListResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/mining/worker/list")
          [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "pageIndex") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQueryPageIndex parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQuerySort parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "sortColumn") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQuerySortColumn parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "workerStatus") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQueryWorkerStatus parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/mining/worker/list
--
-- The same as 'getSapiV1MiningWorkerList' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MiningWorkerListRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningWorkerListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MiningWorkerListRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/mining/worker/list")
        [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "pageIndex") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQueryPageIndex parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQuerySort parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "sortColumn") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQuerySortColumn parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "workerStatus") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQueryWorkerStatus parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/mining/worker/list
--
-- The same as 'getSapiV1MiningWorkerList' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MiningWorkerListWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningWorkerListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MiningWorkerListWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/mining/worker/list")
          [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "pageIndex") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQueryPageIndex parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQuerySort parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "sortColumn") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQuerySortColumn parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "workerStatus") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQueryWorkerStatus parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningWorkerListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningWorkerListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
