{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1LoanRepayHistory
module Binance.Operations.GetSapiV1LoanRepayHistory where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/loan/repay/history
--
-- If startTime and endTime are not sent, the recent 90-day data will be returned.
-- The max interval between startTime and endTime is 180 days.
--
-- Weight(IP): 400
getSapiV1LoanRepayHistory ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LoanRepayHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1LoanRepayHistoryResponse)
getSapiV1LoanRepayHistory parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1LoanRepayHistoryResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LoanRepayHistoryResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1LoanRepayHistoryResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LoanRepayHistoryResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LoanRepayHistoryResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/loan/repay/history")
        [ Binance.Common.QueryParameter (Data.Text.pack "orderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanRepayHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanRepayHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/loan\/repay\/history.GET.parameters@ in the specification.
data GetSapiV1LoanRepayHistoryParameters = GetSapiV1LoanRepayHistoryParameters
  { -- | queryCollateralCoin: Represents the parameter named \'collateralCoin\'
    --
    -- Coin used as collateral
    getSapiV1LoanRepayHistoryParametersQueryCollateralCoin :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryCurrent: Represents the parameter named \'current\'
    --
    -- Current querying page. Start from 1. Default:1
    getSapiV1LoanRepayHistoryParametersQueryCurrent :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1LoanRepayHistoryParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- default 10, max 100
    getSapiV1LoanRepayHistoryParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLoanCoin: Represents the parameter named \'loanCoin\'
    --
    -- Coin loaned
    getSapiV1LoanRepayHistoryParametersQueryLoanCoin :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOrderId: Represents the parameter named \'orderId\'
    --
    -- Order ID
    getSapiV1LoanRepayHistoryParametersQueryOrderId :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1LoanRepayHistoryParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1LoanRepayHistoryParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1LoanRepayHistoryParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1LoanRepayHistoryParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LoanRepayHistoryParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCollateralCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryCollateralCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLoanCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryLoanCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrderId" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCollateralCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryCollateralCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLoanCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryLoanCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrderId" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanRepayHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LoanRepayHistoryParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LoanRepayHistoryParameters" (\obj -> (((((((((GHC.Base.pure GetSapiV1LoanRepayHistoryParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCollateralCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCurrent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLoanCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1LoanRepayHistoryParameters' with all required fields.
mkGetSapiV1LoanRepayHistoryParameters ::
  -- | 'getSapiV1LoanRepayHistoryParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanRepayHistoryParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1LoanRepayHistoryParameters
mkGetSapiV1LoanRepayHistoryParameters getSapiV1LoanRepayHistoryParametersQuerySignature getSapiV1LoanRepayHistoryParametersQueryTimestamp =
  GetSapiV1LoanRepayHistoryParameters
    { getSapiV1LoanRepayHistoryParametersQueryCollateralCoin = GHC.Maybe.Nothing,
      getSapiV1LoanRepayHistoryParametersQueryCurrent = GHC.Maybe.Nothing,
      getSapiV1LoanRepayHistoryParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1LoanRepayHistoryParametersQueryLimit = GHC.Maybe.Nothing,
      getSapiV1LoanRepayHistoryParametersQueryLoanCoin = GHC.Maybe.Nothing,
      getSapiV1LoanRepayHistoryParametersQueryOrderId = GHC.Maybe.Nothing,
      getSapiV1LoanRepayHistoryParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1LoanRepayHistoryParametersQuerySignature = getSapiV1LoanRepayHistoryParametersQuerySignature,
      getSapiV1LoanRepayHistoryParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1LoanRepayHistoryParametersQueryTimestamp = getSapiV1LoanRepayHistoryParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1LoanRepayHistory'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1LoanRepayHistoryResponseError' is used.
data GetSapiV1LoanRepayHistoryResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1LoanRepayHistoryResponseError GHC.Base.String
  | -- | Loan Repayment History
    GetSapiV1LoanRepayHistoryResponse200 GetSapiV1LoanRepayHistoryResponseBody200
  | -- | Bad Request
    GetSapiV1LoanRepayHistoryResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1LoanRepayHistoryResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/loan\/repay\/history.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1LoanRepayHistoryResponseBody200 = GetSapiV1LoanRepayHistoryResponseBody200
  { -- | rows
    getSapiV1LoanRepayHistoryResponseBody200Rows :: ([GetSapiV1LoanRepayHistoryResponseBody200Rows]),
    -- | total
    getSapiV1LoanRepayHistoryResponseBody200Total :: GHC.Int.Int32
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LoanRepayHistoryResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200Total obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200Total obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LoanRepayHistoryResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LoanRepayHistoryResponseBody200" (\obj -> (GHC.Base.pure GetSapiV1LoanRepayHistoryResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "rows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'GetSapiV1LoanRepayHistoryResponseBody200' with all required fields.
mkGetSapiV1LoanRepayHistoryResponseBody200 ::
  -- | 'getSapiV1LoanRepayHistoryResponseBody200Rows'
  [GetSapiV1LoanRepayHistoryResponseBody200Rows] ->
  -- | 'getSapiV1LoanRepayHistoryResponseBody200Total'
  GHC.Int.Int32 ->
  GetSapiV1LoanRepayHistoryResponseBody200
mkGetSapiV1LoanRepayHistoryResponseBody200 getSapiV1LoanRepayHistoryResponseBody200Rows getSapiV1LoanRepayHistoryResponseBody200Total =
  GetSapiV1LoanRepayHistoryResponseBody200
    { getSapiV1LoanRepayHistoryResponseBody200Rows = getSapiV1LoanRepayHistoryResponseBody200Rows,
      getSapiV1LoanRepayHistoryResponseBody200Total = getSapiV1LoanRepayHistoryResponseBody200Total
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/loan\/repay\/history.GET.responses.200.content.application\/json.schema.properties.rows.items@ in the specification.
data GetSapiV1LoanRepayHistoryResponseBody200Rows = GetSapiV1LoanRepayHistoryResponseBody200Rows
  { -- | collateralCoin
    getSapiV1LoanRepayHistoryResponseBody200RowsCollateralCoin :: Data.Text.Internal.Text,
    -- | collateralReturn
    getSapiV1LoanRepayHistoryResponseBody200RowsCollateralReturn :: Data.Text.Internal.Text,
    -- | collateralUsed
    getSapiV1LoanRepayHistoryResponseBody200RowsCollateralUsed :: Data.Text.Internal.Text,
    -- | loanCoin
    getSapiV1LoanRepayHistoryResponseBody200RowsLoanCoin :: Data.Text.Internal.Text,
    -- | orderId
    getSapiV1LoanRepayHistoryResponseBody200RowsOrderId :: GHC.Int.Int64,
    -- | repayAmount
    getSapiV1LoanRepayHistoryResponseBody200RowsRepayAmount :: Data.Text.Internal.Text,
    -- | repayStatus: \'repayType\': \'1\' \/\/ 1 for \'repay with borrowed coin\', 2 for \'repay with collateral\' \'repayStatus\': \'Repaid\' \/\/ Repaid, Repaying, Failed
    getSapiV1LoanRepayHistoryResponseBody200RowsRepayStatus :: Data.Text.Internal.Text,
    -- | repayTime
    getSapiV1LoanRepayHistoryResponseBody200RowsRepayTime :: GHC.Int.Int64,
    -- | repayType
    getSapiV1LoanRepayHistoryResponseBody200RowsRepayType :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LoanRepayHistoryResponseBody200Rows where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["collateralCoin" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsCollateralCoin obj] : ["collateralReturn" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsCollateralReturn obj] : ["collateralUsed" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsCollateralUsed obj] : ["loanCoin" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsLoanCoin obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsOrderId obj] : ["repayAmount" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsRepayAmount obj] : ["repayStatus" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsRepayStatus obj] : ["repayTime" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsRepayTime obj] : ["repayType" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsRepayType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["collateralCoin" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsCollateralCoin obj] : ["collateralReturn" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsCollateralReturn obj] : ["collateralUsed" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsCollateralUsed obj] : ["loanCoin" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsLoanCoin obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsOrderId obj] : ["repayAmount" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsRepayAmount obj] : ["repayStatus" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsRepayStatus obj] : ["repayTime" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsRepayTime obj] : ["repayType" Data.Aeson.Types.ToJSON..= getSapiV1LoanRepayHistoryResponseBody200RowsRepayType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LoanRepayHistoryResponseBody200Rows where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LoanRepayHistoryResponseBody200Rows" (\obj -> ((((((((GHC.Base.pure GetSapiV1LoanRepayHistoryResponseBody200Rows GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "collateralCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "collateralReturn")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "collateralUsed")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "loanCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "repayAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "repayStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "repayTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "repayType"))

-- | Create a new 'GetSapiV1LoanRepayHistoryResponseBody200Rows' with all required fields.
mkGetSapiV1LoanRepayHistoryResponseBody200Rows ::
  -- | 'getSapiV1LoanRepayHistoryResponseBody200RowsCollateralCoin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanRepayHistoryResponseBody200RowsCollateralReturn'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanRepayHistoryResponseBody200RowsCollateralUsed'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanRepayHistoryResponseBody200RowsLoanCoin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanRepayHistoryResponseBody200RowsOrderId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LoanRepayHistoryResponseBody200RowsRepayAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanRepayHistoryResponseBody200RowsRepayStatus'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanRepayHistoryResponseBody200RowsRepayTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LoanRepayHistoryResponseBody200RowsRepayType'
  Data.Text.Internal.Text ->
  GetSapiV1LoanRepayHistoryResponseBody200Rows
mkGetSapiV1LoanRepayHistoryResponseBody200Rows getSapiV1LoanRepayHistoryResponseBody200RowsCollateralCoin getSapiV1LoanRepayHistoryResponseBody200RowsCollateralReturn getSapiV1LoanRepayHistoryResponseBody200RowsCollateralUsed getSapiV1LoanRepayHistoryResponseBody200RowsLoanCoin getSapiV1LoanRepayHistoryResponseBody200RowsOrderId getSapiV1LoanRepayHistoryResponseBody200RowsRepayAmount getSapiV1LoanRepayHistoryResponseBody200RowsRepayStatus getSapiV1LoanRepayHistoryResponseBody200RowsRepayTime getSapiV1LoanRepayHistoryResponseBody200RowsRepayType =
  GetSapiV1LoanRepayHistoryResponseBody200Rows
    { getSapiV1LoanRepayHistoryResponseBody200RowsCollateralCoin = getSapiV1LoanRepayHistoryResponseBody200RowsCollateralCoin,
      getSapiV1LoanRepayHistoryResponseBody200RowsCollateralReturn = getSapiV1LoanRepayHistoryResponseBody200RowsCollateralReturn,
      getSapiV1LoanRepayHistoryResponseBody200RowsCollateralUsed = getSapiV1LoanRepayHistoryResponseBody200RowsCollateralUsed,
      getSapiV1LoanRepayHistoryResponseBody200RowsLoanCoin = getSapiV1LoanRepayHistoryResponseBody200RowsLoanCoin,
      getSapiV1LoanRepayHistoryResponseBody200RowsOrderId = getSapiV1LoanRepayHistoryResponseBody200RowsOrderId,
      getSapiV1LoanRepayHistoryResponseBody200RowsRepayAmount = getSapiV1LoanRepayHistoryResponseBody200RowsRepayAmount,
      getSapiV1LoanRepayHistoryResponseBody200RowsRepayStatus = getSapiV1LoanRepayHistoryResponseBody200RowsRepayStatus,
      getSapiV1LoanRepayHistoryResponseBody200RowsRepayTime = getSapiV1LoanRepayHistoryResponseBody200RowsRepayTime,
      getSapiV1LoanRepayHistoryResponseBody200RowsRepayType = getSapiV1LoanRepayHistoryResponseBody200RowsRepayType
    }

-- | > GET /sapi/v1/loan/repay/history
--
-- The same as 'getSapiV1LoanRepayHistory' but accepts an explicit configuration.
getSapiV1LoanRepayHistoryWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LoanRepayHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1LoanRepayHistoryResponse)
getSapiV1LoanRepayHistoryWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1LoanRepayHistoryResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LoanRepayHistoryResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1LoanRepayHistoryResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LoanRepayHistoryResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LoanRepayHistoryResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/loan/repay/history")
          [ Binance.Common.QueryParameter (Data.Text.pack "orderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanRepayHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanRepayHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/loan/repay/history
--
-- The same as 'getSapiV1LoanRepayHistory' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LoanRepayHistoryRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LoanRepayHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LoanRepayHistoryRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/loan/repay/history")
        [ Binance.Common.QueryParameter (Data.Text.pack "orderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanRepayHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanRepayHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/loan/repay/history
--
-- The same as 'getSapiV1LoanRepayHistory' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LoanRepayHistoryWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LoanRepayHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LoanRepayHistoryWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/loan/repay/history")
          [ Binance.Common.QueryParameter (Data.Text.pack "orderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanRepayHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanRepayHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanRepayHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
