{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1MarginMaxBorrowable
module Binance.Operations.GetSapiV1MarginMaxBorrowable where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/margin/maxBorrowable
--
-- - If \`isolatedSymbol\` is not sent, crossed margin data will be sent.
-- - \`borrowLimit\` is also available from https:\/\/www.binance.com\/en\/margin-fee
--
-- Weight(IP): 50
getSapiV1MarginMaxBorrowable ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginMaxBorrowableParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1MarginMaxBorrowableResponse)
getSapiV1MarginMaxBorrowable parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1MarginMaxBorrowableResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginMaxBorrowableResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1MarginMaxBorrowableResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginMaxBorrowableResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginMaxBorrowableResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/maxBorrowable")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginMaxBorrowableParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginMaxBorrowableParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginMaxBorrowableParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginMaxBorrowableParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginMaxBorrowableParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/maxBorrowable.GET.parameters@ in the specification.
data GetSapiV1MarginMaxBorrowableParameters = GetSapiV1MarginMaxBorrowableParameters
  { -- | queryAsset: Represents the parameter named \'asset\'
    getSapiV1MarginMaxBorrowableParametersQueryAsset :: Data.Text.Internal.Text,
    -- | queryIsolatedSymbol: Represents the parameter named \'isolatedSymbol\'
    --
    -- Isolated symbol
    getSapiV1MarginMaxBorrowableParametersQueryIsolatedSymbol :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1MarginMaxBorrowableParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1MarginMaxBorrowableParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginMaxBorrowableParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginMaxBorrowableParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryAsset" Data.Aeson.Types.ToJSON..= getSapiV1MarginMaxBorrowableParametersQueryAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsolatedSymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginMaxBorrowableParametersQueryIsolatedSymbol obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginMaxBorrowableParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginMaxBorrowableParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginMaxBorrowableParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryAsset" Data.Aeson.Types.ToJSON..= getSapiV1MarginMaxBorrowableParametersQueryAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsolatedSymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginMaxBorrowableParametersQueryIsolatedSymbol obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginMaxBorrowableParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginMaxBorrowableParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginMaxBorrowableParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginMaxBorrowableParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginMaxBorrowableParameters" (\obj -> ((((GHC.Base.pure GetSapiV1MarginMaxBorrowableParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryIsolatedSymbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1MarginMaxBorrowableParameters' with all required fields.
mkGetSapiV1MarginMaxBorrowableParameters ::
  -- | 'getSapiV1MarginMaxBorrowableParametersQueryAsset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginMaxBorrowableParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginMaxBorrowableParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1MarginMaxBorrowableParameters
mkGetSapiV1MarginMaxBorrowableParameters getSapiV1MarginMaxBorrowableParametersQueryAsset getSapiV1MarginMaxBorrowableParametersQuerySignature getSapiV1MarginMaxBorrowableParametersQueryTimestamp =
  GetSapiV1MarginMaxBorrowableParameters
    { getSapiV1MarginMaxBorrowableParametersQueryAsset = getSapiV1MarginMaxBorrowableParametersQueryAsset,
      getSapiV1MarginMaxBorrowableParametersQueryIsolatedSymbol = GHC.Maybe.Nothing,
      getSapiV1MarginMaxBorrowableParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1MarginMaxBorrowableParametersQuerySignature = getSapiV1MarginMaxBorrowableParametersQuerySignature,
      getSapiV1MarginMaxBorrowableParametersQueryTimestamp = getSapiV1MarginMaxBorrowableParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1MarginMaxBorrowable'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1MarginMaxBorrowableResponseError' is used.
data GetSapiV1MarginMaxBorrowableResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1MarginMaxBorrowableResponseError GHC.Base.String
  | -- | Details on max borrow amount
    GetSapiV1MarginMaxBorrowableResponse200 GetSapiV1MarginMaxBorrowableResponseBody200
  | -- | Bad Request
    GetSapiV1MarginMaxBorrowableResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1MarginMaxBorrowableResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/maxBorrowable.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1MarginMaxBorrowableResponseBody200 = GetSapiV1MarginMaxBorrowableResponseBody200
  { -- | amount: account\'s currently max borrowable amount with sufficient system availability
    getSapiV1MarginMaxBorrowableResponseBody200Amount :: Data.Text.Internal.Text,
    -- | borrowLimit: max borrowable amount limited by the account level
    getSapiV1MarginMaxBorrowableResponseBody200BorrowLimit :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginMaxBorrowableResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= getSapiV1MarginMaxBorrowableResponseBody200Amount obj] : ["borrowLimit" Data.Aeson.Types.ToJSON..= getSapiV1MarginMaxBorrowableResponseBody200BorrowLimit obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= getSapiV1MarginMaxBorrowableResponseBody200Amount obj] : ["borrowLimit" Data.Aeson.Types.ToJSON..= getSapiV1MarginMaxBorrowableResponseBody200BorrowLimit obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginMaxBorrowableResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginMaxBorrowableResponseBody200" (\obj -> (GHC.Base.pure GetSapiV1MarginMaxBorrowableResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "borrowLimit"))

-- | Create a new 'GetSapiV1MarginMaxBorrowableResponseBody200' with all required fields.
mkGetSapiV1MarginMaxBorrowableResponseBody200 ::
  -- | 'getSapiV1MarginMaxBorrowableResponseBody200Amount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginMaxBorrowableResponseBody200BorrowLimit'
  Data.Text.Internal.Text ->
  GetSapiV1MarginMaxBorrowableResponseBody200
mkGetSapiV1MarginMaxBorrowableResponseBody200 getSapiV1MarginMaxBorrowableResponseBody200Amount getSapiV1MarginMaxBorrowableResponseBody200BorrowLimit =
  GetSapiV1MarginMaxBorrowableResponseBody200
    { getSapiV1MarginMaxBorrowableResponseBody200Amount = getSapiV1MarginMaxBorrowableResponseBody200Amount,
      getSapiV1MarginMaxBorrowableResponseBody200BorrowLimit = getSapiV1MarginMaxBorrowableResponseBody200BorrowLimit
    }

-- | > GET /sapi/v1/margin/maxBorrowable
--
-- The same as 'getSapiV1MarginMaxBorrowable' but accepts an explicit configuration.
getSapiV1MarginMaxBorrowableWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginMaxBorrowableParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1MarginMaxBorrowableResponse)
getSapiV1MarginMaxBorrowableWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1MarginMaxBorrowableResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginMaxBorrowableResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1MarginMaxBorrowableResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginMaxBorrowableResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginMaxBorrowableResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/maxBorrowable")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginMaxBorrowableParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginMaxBorrowableParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginMaxBorrowableParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginMaxBorrowableParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginMaxBorrowableParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/margin/maxBorrowable
--
-- The same as 'getSapiV1MarginMaxBorrowable' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginMaxBorrowableRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginMaxBorrowableParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginMaxBorrowableRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/maxBorrowable")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginMaxBorrowableParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginMaxBorrowableParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginMaxBorrowableParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginMaxBorrowableParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginMaxBorrowableParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/margin/maxBorrowable
--
-- The same as 'getSapiV1MarginMaxBorrowable' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginMaxBorrowableWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginMaxBorrowableParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginMaxBorrowableWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/maxBorrowable")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginMaxBorrowableParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginMaxBorrowableParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginMaxBorrowableParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginMaxBorrowableParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginMaxBorrowableParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
