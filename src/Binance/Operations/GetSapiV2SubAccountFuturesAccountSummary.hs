{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV2SubAccountFuturesAccountSummary
module Binance.Operations.GetSapiV2SubAccountFuturesAccountSummary where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v2/sub-account/futures/accountSummary
--
-- Weight(IP): 10
getSapiV2SubAccountFuturesAccountSummary ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV2SubAccountFuturesAccountSummaryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV2SubAccountFuturesAccountSummaryResponse)
getSapiV2SubAccountFuturesAccountSummary parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV2SubAccountFuturesAccountSummaryResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV2SubAccountFuturesAccountSummaryResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV2SubAccountFuturesAccountSummaryResponseBody200Variants
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV2SubAccountFuturesAccountSummaryResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV2SubAccountFuturesAccountSummaryResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v2/sub-account/futures/accountSummary")
        [ Binance.Common.QueryParameter (Data.Text.pack "futuresType") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV2SubAccountFuturesAccountSummaryParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV2SubAccountFuturesAccountSummaryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV2SubAccountFuturesAccountSummaryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV2SubAccountFuturesAccountSummaryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV2SubAccountFuturesAccountSummaryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v2\/sub-account\/futures\/accountSummary.GET.parameters@ in the specification.
data GetSapiV2SubAccountFuturesAccountSummaryParameters = GetSapiV2SubAccountFuturesAccountSummaryParameters
  { -- | queryFuturesType: Represents the parameter named \'futuresType\'
    --
    -- * \`1\` - USDT Margined Futures
    -- * \`2\` - COIN Margined Futures
    getSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType :: GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType,
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- Default 10, Max 20
    getSapiV2SubAccountFuturesAccountSummaryParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- Default 1
    getSapiV2SubAccountFuturesAccountSummaryParametersQueryPage :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV2SubAccountFuturesAccountSummaryParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV2SubAccountFuturesAccountSummaryParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV2SubAccountFuturesAccountSummaryParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV2SubAccountFuturesAccountSummaryParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryFuturesType" Data.Aeson.Types.ToJSON..= getSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV2SubAccountFuturesAccountSummaryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (getSapiV2SubAccountFuturesAccountSummaryParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV2SubAccountFuturesAccountSummaryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV2SubAccountFuturesAccountSummaryParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV2SubAccountFuturesAccountSummaryParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryFuturesType" Data.Aeson.Types.ToJSON..= getSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV2SubAccountFuturesAccountSummaryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (getSapiV2SubAccountFuturesAccountSummaryParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV2SubAccountFuturesAccountSummaryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV2SubAccountFuturesAccountSummaryParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV2SubAccountFuturesAccountSummaryParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV2SubAccountFuturesAccountSummaryParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV2SubAccountFuturesAccountSummaryParameters" (\obj -> (((((GHC.Base.pure GetSapiV2SubAccountFuturesAccountSummaryParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryFuturesType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV2SubAccountFuturesAccountSummaryParameters' with all required fields.
mkGetSapiV2SubAccountFuturesAccountSummaryParameters ::
  -- | 'getSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType'
  GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType ->
  -- | 'getSapiV2SubAccountFuturesAccountSummaryParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV2SubAccountFuturesAccountSummaryParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV2SubAccountFuturesAccountSummaryParameters
mkGetSapiV2SubAccountFuturesAccountSummaryParameters getSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType getSapiV2SubAccountFuturesAccountSummaryParametersQuerySignature getSapiV2SubAccountFuturesAccountSummaryParametersQueryTimestamp =
  GetSapiV2SubAccountFuturesAccountSummaryParameters
    { getSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType = getSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType,
      getSapiV2SubAccountFuturesAccountSummaryParametersQueryLimit = GHC.Maybe.Nothing,
      getSapiV2SubAccountFuturesAccountSummaryParametersQueryPage = GHC.Maybe.Nothing,
      getSapiV2SubAccountFuturesAccountSummaryParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV2SubAccountFuturesAccountSummaryParametersQuerySignature = getSapiV2SubAccountFuturesAccountSummaryParametersQuerySignature,
      getSapiV2SubAccountFuturesAccountSummaryParametersQueryTimestamp = getSapiV2SubAccountFuturesAccountSummaryParametersQueryTimestamp
    }

-- | Defines the enum schema located at @paths.\/sapi\/v2\/sub-account\/futures\/accountSummary.GET.parameters.properties.queryFuturesType@ in the specification.
--
-- Represents the parameter named \'futuresType\'
--
-- * \`1\` - USDT Margined Futures
-- * \`2\` - COIN Margined Futures
data GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesTypeOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesTypeTyped GHC.Int.Int32
  | -- | Represents the JSON value @1@
    GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesTypeEnum1
  | -- | Represents the JSON value @2@
    GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesTypeEnum2
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType where
  toJSON (GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesTypeOther val) = val
  toJSON (GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesTypeEnum1) = Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 1 0)
  toJSON (GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesTypeEnum2) = Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 2 0)

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 1 0) -> GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesTypeEnum1
            | val GHC.Classes.== Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 2 0) -> GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesTypeEnum2
            | GHC.Base.otherwise -> GetSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesTypeOther val
      )

-- | Represents a response of the operation 'getSapiV2SubAccountFuturesAccountSummary'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV2SubAccountFuturesAccountSummaryResponseError' is used.
data GetSapiV2SubAccountFuturesAccountSummaryResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV2SubAccountFuturesAccountSummaryResponseError GHC.Base.String
  | -- | USDT or COIN Margined Futures Summary
    GetSapiV2SubAccountFuturesAccountSummaryResponse200 GetSapiV2SubAccountFuturesAccountSummaryResponseBody200Variants
  | -- | Bad Request
    GetSapiV2SubAccountFuturesAccountSummaryResponse400 Error
  | -- | Unauthorized Request
    GetSapiV2SubAccountFuturesAccountSummaryResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the oneOf schema located at @paths.\/sapi\/v2\/sub-account\/futures\/accountSummary.GET.responses.200.content.application\/json.schema.oneOf@ in the specification.
data GetSapiV2SubAccountFuturesAccountSummaryResponseBody200Variants
  = GetSapiV2SubAccountFuturesAccountSummaryResponseBody200Variant1 SubAccountUSDTFuturesSummary
  | GetSapiV2SubAccountFuturesAccountSummaryResponseBody200Variant2 SubAccountCOINFuturesSummary
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV2SubAccountFuturesAccountSummaryResponseBody200Variants where
  toJSON (GetSapiV2SubAccountFuturesAccountSummaryResponseBody200Variant1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetSapiV2SubAccountFuturesAccountSummaryResponseBody200Variant2 a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV2SubAccountFuturesAccountSummaryResponseBody200Variants where
  parseJSON val = case (GetSapiV2SubAccountFuturesAccountSummaryResponseBody200Variant1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetSapiV2SubAccountFuturesAccountSummaryResponseBody200Variant2 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | > GET /sapi/v2/sub-account/futures/accountSummary
--
-- The same as 'getSapiV2SubAccountFuturesAccountSummary' but accepts an explicit configuration.
getSapiV2SubAccountFuturesAccountSummaryWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV2SubAccountFuturesAccountSummaryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV2SubAccountFuturesAccountSummaryResponse)
getSapiV2SubAccountFuturesAccountSummaryWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV2SubAccountFuturesAccountSummaryResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV2SubAccountFuturesAccountSummaryResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV2SubAccountFuturesAccountSummaryResponseBody200Variants
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV2SubAccountFuturesAccountSummaryResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV2SubAccountFuturesAccountSummaryResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v2/sub-account/futures/accountSummary")
          [ Binance.Common.QueryParameter (Data.Text.pack "futuresType") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV2SubAccountFuturesAccountSummaryParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV2SubAccountFuturesAccountSummaryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV2SubAccountFuturesAccountSummaryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV2SubAccountFuturesAccountSummaryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV2SubAccountFuturesAccountSummaryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v2/sub-account/futures/accountSummary
--
-- The same as 'getSapiV2SubAccountFuturesAccountSummary' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV2SubAccountFuturesAccountSummaryRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV2SubAccountFuturesAccountSummaryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV2SubAccountFuturesAccountSummaryRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v2/sub-account/futures/accountSummary")
        [ Binance.Common.QueryParameter (Data.Text.pack "futuresType") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV2SubAccountFuturesAccountSummaryParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV2SubAccountFuturesAccountSummaryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV2SubAccountFuturesAccountSummaryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV2SubAccountFuturesAccountSummaryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV2SubAccountFuturesAccountSummaryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v2/sub-account/futures/accountSummary
--
-- The same as 'getSapiV2SubAccountFuturesAccountSummary' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV2SubAccountFuturesAccountSummaryWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV2SubAccountFuturesAccountSummaryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV2SubAccountFuturesAccountSummaryWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v2/sub-account/futures/accountSummary")
          [ Binance.Common.QueryParameter (Data.Text.pack "futuresType") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV2SubAccountFuturesAccountSummaryParametersQueryFuturesType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV2SubAccountFuturesAccountSummaryParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV2SubAccountFuturesAccountSummaryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV2SubAccountFuturesAccountSummaryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV2SubAccountFuturesAccountSummaryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV2SubAccountFuturesAccountSummaryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
