{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postSapiV1SubAccountSubAccountApiIpRestriction
module Binance.Operations.PostSapiV1SubAccountSubAccountApiIpRestriction where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /sapi/v1/sub-account/subAccountApi/ipRestriction
--
-- Weight(UID): 3000
postSapiV1SubAccountSubAccountApiIpRestriction ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1SubAccountSubAccountApiIpRestrictionParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response PostSapiV1SubAccountSubAccountApiIpRestrictionResponse)
postSapiV1SubAccountSubAccountApiIpRestriction parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostSapiV1SubAccountSubAccountApiIpRestrictionResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1SubAccountSubAccountApiIpRestrictionResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1SubAccountSubAccountApiIpRestrictionResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1SubAccountSubAccountApiIpRestrictionResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/sub-account/subAccountApi/ipRestriction")
        [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "subAccountApiKey") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySubAccountApiKey parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "ipRestrict") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryIpRestrict parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "thirdParty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryThirdParty parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/subAccountApi\/ipRestriction.POST.parameters@ in the specification.
data PostSapiV1SubAccountSubAccountApiIpRestrictionParameters = PostSapiV1SubAccountSubAccountApiIpRestrictionParameters
  { -- | queryEmail: Represents the parameter named \'email\'
    --
    -- Sub-account email
    postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryEmail :: Data.Text.Internal.Text,
    -- | queryIpRestrict: Represents the parameter named \'ipRestrict\'
    --
    -- true or false
    postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryIpRestrict :: GHC.Types.Bool,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySignature :: Data.Text.Internal.Text,
    -- | querySubAccountApiKey: Represents the parameter named \'subAccountApiKey\'
    postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySubAccountApiKey :: Data.Text.Internal.Text,
    -- | queryThirdParty: Represents the parameter named \'thirdParty\'
    --
    -- true or false
    postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryThirdParty :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1SubAccountSubAccountApiIpRestrictionParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryEmail" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryEmail obj] : ["queryIpRestrict" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryIpRestrict obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySignature obj] : ["querySubAccountApiKey" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySubAccountApiKey obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryThirdParty" Data.Aeson.Types.ToJSON..=)) (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryThirdParty obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryEmail" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryEmail obj] : ["queryIpRestrict" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryIpRestrict obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySignature obj] : ["querySubAccountApiKey" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySubAccountApiKey obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryThirdParty" Data.Aeson.Types.ToJSON..=)) (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryThirdParty obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1SubAccountSubAccountApiIpRestrictionParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1SubAccountSubAccountApiIpRestrictionParameters" (\obj -> ((((((GHC.Base.pure PostSapiV1SubAccountSubAccountApiIpRestrictionParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryEmail")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryIpRestrict")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySubAccountApiKey")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryThirdParty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'PostSapiV1SubAccountSubAccountApiIpRestrictionParameters' with all required fields.
mkPostSapiV1SubAccountSubAccountApiIpRestrictionParameters ::
  -- | 'postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryEmail'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryIpRestrict'
  GHC.Types.Bool ->
  -- | 'postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySubAccountApiKey'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryTimestamp'
  GHC.Int.Int64 ->
  PostSapiV1SubAccountSubAccountApiIpRestrictionParameters
mkPostSapiV1SubAccountSubAccountApiIpRestrictionParameters postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryEmail postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryIpRestrict postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySignature postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySubAccountApiKey postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryTimestamp =
  PostSapiV1SubAccountSubAccountApiIpRestrictionParameters
    { postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryEmail = postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryEmail,
      postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryIpRestrict = postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryIpRestrict,
      postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryRecvWindow = GHC.Maybe.Nothing,
      postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySignature = postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySignature,
      postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySubAccountApiKey = postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySubAccountApiKey,
      postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryThirdParty = GHC.Maybe.Nothing,
      postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryTimestamp = postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryTimestamp
    }

-- | Represents a response of the operation 'postSapiV1SubAccountSubAccountApiIpRestriction'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostSapiV1SubAccountSubAccountApiIpRestrictionResponseError' is used.
data PostSapiV1SubAccountSubAccountApiIpRestrictionResponse
  = -- | Means either no matching case available or a parse error
    PostSapiV1SubAccountSubAccountApiIpRestrictionResponseError GHC.Base.String
  | -- | IP Restriction information
    PostSapiV1SubAccountSubAccountApiIpRestrictionResponse200 PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200
  | -- | Bad Request
    PostSapiV1SubAccountSubAccountApiIpRestrictionResponse400 Error
  | -- | Unauthorized Request
    PostSapiV1SubAccountSubAccountApiIpRestrictionResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/subAccountApi\/ipRestriction.POST.responses.200.content.application\/json.schema@ in the specification.
data PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200 = PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200
  { -- | apiKey
    postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200ApiKey :: Data.Text.Internal.Text,
    -- | ipList
    postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpList :: ([PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpListVariants]),
    -- | ipRestrict
    postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpRestrict :: Data.Text.Internal.Text,
    -- | updateTime
    postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200UpdateTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["apiKey" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200ApiKey obj] : ["ipList" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpList obj] : ["ipRestrict" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpRestrict obj] : ["updateTime" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200UpdateTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["apiKey" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200ApiKey obj] : ["ipList" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpList obj] : ["ipRestrict" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpRestrict obj] : ["updateTime" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200UpdateTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200" (\obj -> (((GHC.Base.pure PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "apiKey")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "ipList")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "ipRestrict")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "updateTime"))

-- | Create a new 'PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200' with all required fields.
mkPostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200 ::
  -- | 'postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200ApiKey'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpList'
  [PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpListVariants] ->
  -- | 'postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpRestrict'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200UpdateTime'
  GHC.Int.Int64 ->
  PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200
mkPostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200 postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200ApiKey postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpList postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpRestrict postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200UpdateTime =
  PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200
    { postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200ApiKey = postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200ApiKey,
      postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpList = postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpList,
      postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpRestrict = postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpRestrict,
      postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200UpdateTime = postSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200UpdateTime
    }

-- | Defines the oneOf schema located at @paths.\/sapi\/v1\/sub-account\/subAccountApi\/ipRestriction.POST.responses.200.content.application\/json.schema.properties.ipList.items.anyOf@ in the specification.
data PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpListVariants
  = PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpListVariant1 Data.Text.Internal.Text
  | PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpListVariant2 Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpListVariants where
  toJSON (PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpListVariant1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpListVariant2 a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpListVariants where
  parseJSON val = case (PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpListVariant1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200IpListVariant2 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | > POST /sapi/v1/sub-account/subAccountApi/ipRestriction
--
-- The same as 'postSapiV1SubAccountSubAccountApiIpRestriction' but accepts an explicit configuration.
postSapiV1SubAccountSubAccountApiIpRestrictionWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1SubAccountSubAccountApiIpRestrictionParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response PostSapiV1SubAccountSubAccountApiIpRestrictionResponse)
postSapiV1SubAccountSubAccountApiIpRestrictionWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either PostSapiV1SubAccountSubAccountApiIpRestrictionResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1SubAccountSubAccountApiIpRestrictionResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              PostSapiV1SubAccountSubAccountApiIpRestrictionResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1SubAccountSubAccountApiIpRestrictionResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1SubAccountSubAccountApiIpRestrictionResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/sub-account/subAccountApi/ipRestriction")
          [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "subAccountApiKey") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySubAccountApiKey parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "ipRestrict") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryIpRestrict parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "thirdParty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryThirdParty parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > POST /sapi/v1/sub-account/subAccountApi/ipRestriction
--
-- The same as 'postSapiV1SubAccountSubAccountApiIpRestriction' but returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1SubAccountSubAccountApiIpRestrictionRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1SubAccountSubAccountApiIpRestrictionParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1SubAccountSubAccountApiIpRestrictionRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/sub-account/subAccountApi/ipRestriction")
        [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "subAccountApiKey") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySubAccountApiKey parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "ipRestrict") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryIpRestrict parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "thirdParty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryThirdParty parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > POST /sapi/v1/sub-account/subAccountApi/ipRestriction
--
-- The same as 'postSapiV1SubAccountSubAccountApiIpRestriction' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1SubAccountSubAccountApiIpRestrictionWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1SubAccountSubAccountApiIpRestrictionParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1SubAccountSubAccountApiIpRestrictionWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/sub-account/subAccountApi/ipRestriction")
          [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "subAccountApiKey") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySubAccountApiKey parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "ipRestrict") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryIpRestrict parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "thirdParty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryThirdParty parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountSubAccountApiIpRestrictionParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
