{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation deleteApiV3OpenOrders
module Binance.Operations.DeleteApiV3OpenOrders where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > DELETE /api/v3/openOrders
--
-- Cancels all active orders on a symbol.
-- This includes OCO orders.
--
-- Weight(IP): 1
deleteApiV3OpenOrders ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  DeleteApiV3OpenOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response DeleteApiV3OpenOrdersResponse)
deleteApiV3OpenOrders parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either DeleteApiV3OpenOrdersResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   DeleteApiV3OpenOrdersResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ([DeleteApiV3OpenOrdersResponseBody200])
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   DeleteApiV3OpenOrdersResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   DeleteApiV3OpenOrdersResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "DELETE")
        (Data.Text.pack "/api/v3/openOrders")
        [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteApiV3OpenOrdersParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteApiV3OpenOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteApiV3OpenOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteApiV3OpenOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/api\/v3\/openOrders.DELETE.parameters@ in the specification.
data DeleteApiV3OpenOrdersParameters = DeleteApiV3OpenOrdersParameters
  { -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    deleteApiV3OpenOrdersParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    deleteApiV3OpenOrdersParametersQuerySignature :: Data.Text.Internal.Text,
    -- | querySymbol: Represents the parameter named \'symbol\'
    --
    -- Trading symbol, e.g. BNBUSDT
    deleteApiV3OpenOrdersParametersQuerySymbol :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    deleteApiV3OpenOrdersParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteApiV3OpenOrdersParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersParametersQuerySignature obj] : ["querySymbol" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersParametersQuerySymbol obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersParametersQuerySignature obj] : ["querySymbol" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersParametersQuerySymbol obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteApiV3OpenOrdersParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteApiV3OpenOrdersParameters" (\obj -> (((GHC.Base.pure DeleteApiV3OpenOrdersParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySymbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'DeleteApiV3OpenOrdersParameters' with all required fields.
mkDeleteApiV3OpenOrdersParameters ::
  -- | 'deleteApiV3OpenOrdersParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'deleteApiV3OpenOrdersParametersQuerySymbol'
  Data.Text.Internal.Text ->
  -- | 'deleteApiV3OpenOrdersParametersQueryTimestamp'
  GHC.Int.Int64 ->
  DeleteApiV3OpenOrdersParameters
mkDeleteApiV3OpenOrdersParameters deleteApiV3OpenOrdersParametersQuerySignature deleteApiV3OpenOrdersParametersQuerySymbol deleteApiV3OpenOrdersParametersQueryTimestamp =
  DeleteApiV3OpenOrdersParameters
    { deleteApiV3OpenOrdersParametersQueryRecvWindow = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersParametersQuerySignature = deleteApiV3OpenOrdersParametersQuerySignature,
      deleteApiV3OpenOrdersParametersQuerySymbol = deleteApiV3OpenOrdersParametersQuerySymbol,
      deleteApiV3OpenOrdersParametersQueryTimestamp = deleteApiV3OpenOrdersParametersQueryTimestamp
    }

-- | Represents a response of the operation 'deleteApiV3OpenOrders'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'DeleteApiV3OpenOrdersResponseError' is used.
data DeleteApiV3OpenOrdersResponse
  = -- | Means either no matching case available or a parse error
    DeleteApiV3OpenOrdersResponseError GHC.Base.String
  | -- | Cancelled orders
    DeleteApiV3OpenOrdersResponse200 ([DeleteApiV3OpenOrdersResponseBody200])
  | -- | Bad Request
    DeleteApiV3OpenOrdersResponse400 Error
  | -- | Unauthorized Request
    DeleteApiV3OpenOrdersResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/api\/v3\/openOrders.DELETE.responses.200.content.application\/json.schema.items.anyOf@ in the specification.
data DeleteApiV3OpenOrdersResponseBody200 = DeleteApiV3OpenOrdersResponseBody200
  { -- | clientOrderId
    deleteApiV3OpenOrdersResponseBody200ClientOrderId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | contingencyType
    deleteApiV3OpenOrdersResponseBody200ContingencyType :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | cummulativeQuoteQty
    deleteApiV3OpenOrdersResponseBody200CummulativeQuoteQty :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | executedQty
    deleteApiV3OpenOrdersResponseBody200ExecutedQty :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | listClientOrderId
    deleteApiV3OpenOrdersResponseBody200ListClientOrderId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | listOrderStatus
    deleteApiV3OpenOrdersResponseBody200ListOrderStatus :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | listStatusType
    deleteApiV3OpenOrdersResponseBody200ListStatusType :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | orderId
    deleteApiV3OpenOrdersResponseBody200OrderId :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | orderListId: Unless OCO, value will be -1
    deleteApiV3OpenOrdersResponseBody200OrderListId :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | orderReports
    deleteApiV3OpenOrdersResponseBody200OrderReports :: (GHC.Maybe.Maybe ([DeleteApiV3OpenOrdersResponseBody200OrderReports])),
    -- | orders
    deleteApiV3OpenOrdersResponseBody200Orders :: (GHC.Maybe.Maybe ([DeleteApiV3OpenOrdersResponseBody200Orders])),
    -- | origClientOrderId
    deleteApiV3OpenOrdersResponseBody200OrigClientOrderId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | origQty
    deleteApiV3OpenOrdersResponseBody200OrigQty :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | price
    deleteApiV3OpenOrdersResponseBody200Price :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | side
    deleteApiV3OpenOrdersResponseBody200Side :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | status
    deleteApiV3OpenOrdersResponseBody200Status :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | symbol
    deleteApiV3OpenOrdersResponseBody200Symbol :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | timeInForce
    deleteApiV3OpenOrdersResponseBody200TimeInForce :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | transactionTime
    deleteApiV3OpenOrdersResponseBody200TransactionTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | type
    deleteApiV3OpenOrdersResponseBody200Type :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteApiV3OpenOrdersResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("clientOrderId" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200ClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("contingencyType" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200ContingencyType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cummulativeQuoteQty" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200CummulativeQuoteQty obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("executedQty" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200ExecutedQty obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("listClientOrderId" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200ListClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("listOrderStatus" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200ListOrderStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("listStatusType" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200ListStatusType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orderId" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200OrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orderListId" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200OrderListId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orderReports" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200OrderReports obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orders" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200Orders obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("origClientOrderId" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200OrigClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("origQty" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200OrigQty obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200Price obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("side" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200Side obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200Status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("symbol" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200Symbol obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("timeInForce" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200TimeInForce obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transactionTime" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200TransactionTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200Type obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("clientOrderId" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200ClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("contingencyType" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200ContingencyType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cummulativeQuoteQty" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200CummulativeQuoteQty obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("executedQty" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200ExecutedQty obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("listClientOrderId" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200ListClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("listOrderStatus" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200ListOrderStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("listStatusType" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200ListStatusType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orderId" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200OrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orderListId" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200OrderListId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orderReports" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200OrderReports obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orders" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200Orders obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("origClientOrderId" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200OrigClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("origQty" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200OrigQty obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200Price obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("side" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200Side obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200Status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("symbol" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200Symbol obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("timeInForce" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200TimeInForce obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transactionTime" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200TransactionTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (deleteApiV3OpenOrdersResponseBody200Type obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteApiV3OpenOrdersResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteApiV3OpenOrdersResponseBody200" (\obj -> (((((((((((((((((((GHC.Base.pure DeleteApiV3OpenOrdersResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "clientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "contingencyType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cummulativeQuoteQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "executedQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "listClientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "listOrderStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "listStatusType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "orderListId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "orderReports")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "orders")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "origClientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "origQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "price")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "side")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "symbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "timeInForce")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transactionTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type"))

-- | Create a new 'DeleteApiV3OpenOrdersResponseBody200' with all required fields.
mkDeleteApiV3OpenOrdersResponseBody200 :: DeleteApiV3OpenOrdersResponseBody200
mkDeleteApiV3OpenOrdersResponseBody200 =
  DeleteApiV3OpenOrdersResponseBody200
    { deleteApiV3OpenOrdersResponseBody200ClientOrderId = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200ContingencyType = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200CummulativeQuoteQty = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200ExecutedQty = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200ListClientOrderId = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200ListOrderStatus = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200ListStatusType = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200OrderId = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200OrderListId = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200OrderReports = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200Orders = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200OrigClientOrderId = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200OrigQty = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200Price = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200Side = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200Status = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200Symbol = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200TimeInForce = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200TransactionTime = GHC.Maybe.Nothing,
      deleteApiV3OpenOrdersResponseBody200Type = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/api\/v3\/openOrders.DELETE.responses.200.content.application\/json.schema.items.anyOf.properties.orderReports.items@ in the specification.
data DeleteApiV3OpenOrdersResponseBody200OrderReports = DeleteApiV3OpenOrdersResponseBody200OrderReports
  { -- | clientOrderId
    deleteApiV3OpenOrdersResponseBody200OrderReportsClientOrderId :: Data.Text.Internal.Text,
    -- | cummulativeQuoteQty
    deleteApiV3OpenOrdersResponseBody200OrderReportsCummulativeQuoteQty :: Data.Text.Internal.Text,
    -- | executedQty
    deleteApiV3OpenOrdersResponseBody200OrderReportsExecutedQty :: Data.Text.Internal.Text,
    -- | orderId
    deleteApiV3OpenOrdersResponseBody200OrderReportsOrderId :: GHC.Int.Int64,
    -- | orderListId
    deleteApiV3OpenOrdersResponseBody200OrderReportsOrderListId :: GHC.Int.Int64,
    -- | origClientOrderId
    deleteApiV3OpenOrdersResponseBody200OrderReportsOrigClientOrderId :: Data.Text.Internal.Text,
    -- | origQty
    deleteApiV3OpenOrdersResponseBody200OrderReportsOrigQty :: Data.Text.Internal.Text,
    -- | price
    deleteApiV3OpenOrdersResponseBody200OrderReportsPrice :: Data.Text.Internal.Text,
    -- | side
    deleteApiV3OpenOrdersResponseBody200OrderReportsSide :: Data.Text.Internal.Text,
    -- | status
    deleteApiV3OpenOrdersResponseBody200OrderReportsStatus :: Data.Text.Internal.Text,
    -- | stopPrice
    deleteApiV3OpenOrdersResponseBody200OrderReportsStopPrice :: Data.Text.Internal.Text,
    -- | symbol
    deleteApiV3OpenOrdersResponseBody200OrderReportsSymbol :: Data.Text.Internal.Text,
    -- | timeInForce
    deleteApiV3OpenOrdersResponseBody200OrderReportsTimeInForce :: Data.Text.Internal.Text,
    -- | type
    deleteApiV3OpenOrdersResponseBody200OrderReportsType :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteApiV3OpenOrdersResponseBody200OrderReports where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsClientOrderId obj] : ["cummulativeQuoteQty" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsCummulativeQuoteQty obj] : ["executedQty" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsExecutedQty obj] : ["orderId" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsOrderId obj] : ["orderListId" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsOrderListId obj] : ["origClientOrderId" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsOrigClientOrderId obj] : ["origQty" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsOrigQty obj] : ["price" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsPrice obj] : ["side" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsSide obj] : ["status" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsStatus obj] : ["stopPrice" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsStopPrice obj] : ["symbol" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsSymbol obj] : ["timeInForce" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsTimeInForce obj] : ["type" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsClientOrderId obj] : ["cummulativeQuoteQty" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsCummulativeQuoteQty obj] : ["executedQty" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsExecutedQty obj] : ["orderId" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsOrderId obj] : ["orderListId" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsOrderListId obj] : ["origClientOrderId" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsOrigClientOrderId obj] : ["origQty" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsOrigQty obj] : ["price" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsPrice obj] : ["side" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsSide obj] : ["status" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsStatus obj] : ["stopPrice" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsStopPrice obj] : ["symbol" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsSymbol obj] : ["timeInForce" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsTimeInForce obj] : ["type" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrderReportsType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteApiV3OpenOrdersResponseBody200OrderReports where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteApiV3OpenOrdersResponseBody200OrderReports" (\obj -> (((((((((((((GHC.Base.pure DeleteApiV3OpenOrdersResponseBody200OrderReports GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "clientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cummulativeQuoteQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "executedQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderListId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "origClientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "origQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "price")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "side")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "stopPrice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "timeInForce")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))

-- | Create a new 'DeleteApiV3OpenOrdersResponseBody200OrderReports' with all required fields.
mkDeleteApiV3OpenOrdersResponseBody200OrderReports ::
  -- | 'deleteApiV3OpenOrdersResponseBody200OrderReportsClientOrderId'
  Data.Text.Internal.Text ->
  -- | 'deleteApiV3OpenOrdersResponseBody200OrderReportsCummulativeQuoteQty'
  Data.Text.Internal.Text ->
  -- | 'deleteApiV3OpenOrdersResponseBody200OrderReportsExecutedQty'
  Data.Text.Internal.Text ->
  -- | 'deleteApiV3OpenOrdersResponseBody200OrderReportsOrderId'
  GHC.Int.Int64 ->
  -- | 'deleteApiV3OpenOrdersResponseBody200OrderReportsOrderListId'
  GHC.Int.Int64 ->
  -- | 'deleteApiV3OpenOrdersResponseBody200OrderReportsOrigClientOrderId'
  Data.Text.Internal.Text ->
  -- | 'deleteApiV3OpenOrdersResponseBody200OrderReportsOrigQty'
  Data.Text.Internal.Text ->
  -- | 'deleteApiV3OpenOrdersResponseBody200OrderReportsPrice'
  Data.Text.Internal.Text ->
  -- | 'deleteApiV3OpenOrdersResponseBody200OrderReportsSide'
  Data.Text.Internal.Text ->
  -- | 'deleteApiV3OpenOrdersResponseBody200OrderReportsStatus'
  Data.Text.Internal.Text ->
  -- | 'deleteApiV3OpenOrdersResponseBody200OrderReportsStopPrice'
  Data.Text.Internal.Text ->
  -- | 'deleteApiV3OpenOrdersResponseBody200OrderReportsSymbol'
  Data.Text.Internal.Text ->
  -- | 'deleteApiV3OpenOrdersResponseBody200OrderReportsTimeInForce'
  Data.Text.Internal.Text ->
  -- | 'deleteApiV3OpenOrdersResponseBody200OrderReportsType'
  Data.Text.Internal.Text ->
  DeleteApiV3OpenOrdersResponseBody200OrderReports
mkDeleteApiV3OpenOrdersResponseBody200OrderReports deleteApiV3OpenOrdersResponseBody200OrderReportsClientOrderId deleteApiV3OpenOrdersResponseBody200OrderReportsCummulativeQuoteQty deleteApiV3OpenOrdersResponseBody200OrderReportsExecutedQty deleteApiV3OpenOrdersResponseBody200OrderReportsOrderId deleteApiV3OpenOrdersResponseBody200OrderReportsOrderListId deleteApiV3OpenOrdersResponseBody200OrderReportsOrigClientOrderId deleteApiV3OpenOrdersResponseBody200OrderReportsOrigQty deleteApiV3OpenOrdersResponseBody200OrderReportsPrice deleteApiV3OpenOrdersResponseBody200OrderReportsSide deleteApiV3OpenOrdersResponseBody200OrderReportsStatus deleteApiV3OpenOrdersResponseBody200OrderReportsStopPrice deleteApiV3OpenOrdersResponseBody200OrderReportsSymbol deleteApiV3OpenOrdersResponseBody200OrderReportsTimeInForce deleteApiV3OpenOrdersResponseBody200OrderReportsType =
  DeleteApiV3OpenOrdersResponseBody200OrderReports
    { deleteApiV3OpenOrdersResponseBody200OrderReportsClientOrderId = deleteApiV3OpenOrdersResponseBody200OrderReportsClientOrderId,
      deleteApiV3OpenOrdersResponseBody200OrderReportsCummulativeQuoteQty = deleteApiV3OpenOrdersResponseBody200OrderReportsCummulativeQuoteQty,
      deleteApiV3OpenOrdersResponseBody200OrderReportsExecutedQty = deleteApiV3OpenOrdersResponseBody200OrderReportsExecutedQty,
      deleteApiV3OpenOrdersResponseBody200OrderReportsOrderId = deleteApiV3OpenOrdersResponseBody200OrderReportsOrderId,
      deleteApiV3OpenOrdersResponseBody200OrderReportsOrderListId = deleteApiV3OpenOrdersResponseBody200OrderReportsOrderListId,
      deleteApiV3OpenOrdersResponseBody200OrderReportsOrigClientOrderId = deleteApiV3OpenOrdersResponseBody200OrderReportsOrigClientOrderId,
      deleteApiV3OpenOrdersResponseBody200OrderReportsOrigQty = deleteApiV3OpenOrdersResponseBody200OrderReportsOrigQty,
      deleteApiV3OpenOrdersResponseBody200OrderReportsPrice = deleteApiV3OpenOrdersResponseBody200OrderReportsPrice,
      deleteApiV3OpenOrdersResponseBody200OrderReportsSide = deleteApiV3OpenOrdersResponseBody200OrderReportsSide,
      deleteApiV3OpenOrdersResponseBody200OrderReportsStatus = deleteApiV3OpenOrdersResponseBody200OrderReportsStatus,
      deleteApiV3OpenOrdersResponseBody200OrderReportsStopPrice = deleteApiV3OpenOrdersResponseBody200OrderReportsStopPrice,
      deleteApiV3OpenOrdersResponseBody200OrderReportsSymbol = deleteApiV3OpenOrdersResponseBody200OrderReportsSymbol,
      deleteApiV3OpenOrdersResponseBody200OrderReportsTimeInForce = deleteApiV3OpenOrdersResponseBody200OrderReportsTimeInForce,
      deleteApiV3OpenOrdersResponseBody200OrderReportsType = deleteApiV3OpenOrdersResponseBody200OrderReportsType
    }

-- | Defines the object schema located at @paths.\/api\/v3\/openOrders.DELETE.responses.200.content.application\/json.schema.items.anyOf.properties.orders.items@ in the specification.
data DeleteApiV3OpenOrdersResponseBody200Orders = DeleteApiV3OpenOrdersResponseBody200Orders
  { -- | clientOrderId
    deleteApiV3OpenOrdersResponseBody200OrdersClientOrderId :: Data.Text.Internal.Text,
    -- | orderId
    deleteApiV3OpenOrdersResponseBody200OrdersOrderId :: GHC.Int.Int64,
    -- | symbol
    deleteApiV3OpenOrdersResponseBody200OrdersSymbol :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteApiV3OpenOrdersResponseBody200Orders where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrdersClientOrderId obj] : ["orderId" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrdersOrderId obj] : ["symbol" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrdersSymbol obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrdersClientOrderId obj] : ["orderId" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrdersOrderId obj] : ["symbol" Data.Aeson.Types.ToJSON..= deleteApiV3OpenOrdersResponseBody200OrdersSymbol obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteApiV3OpenOrdersResponseBody200Orders where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteApiV3OpenOrdersResponseBody200Orders" (\obj -> ((GHC.Base.pure DeleteApiV3OpenOrdersResponseBody200Orders GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "clientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol"))

-- | Create a new 'DeleteApiV3OpenOrdersResponseBody200Orders' with all required fields.
mkDeleteApiV3OpenOrdersResponseBody200Orders ::
  -- | 'deleteApiV3OpenOrdersResponseBody200OrdersClientOrderId'
  Data.Text.Internal.Text ->
  -- | 'deleteApiV3OpenOrdersResponseBody200OrdersOrderId'
  GHC.Int.Int64 ->
  -- | 'deleteApiV3OpenOrdersResponseBody200OrdersSymbol'
  Data.Text.Internal.Text ->
  DeleteApiV3OpenOrdersResponseBody200Orders
mkDeleteApiV3OpenOrdersResponseBody200Orders deleteApiV3OpenOrdersResponseBody200OrdersClientOrderId deleteApiV3OpenOrdersResponseBody200OrdersOrderId deleteApiV3OpenOrdersResponseBody200OrdersSymbol =
  DeleteApiV3OpenOrdersResponseBody200Orders
    { deleteApiV3OpenOrdersResponseBody200OrdersClientOrderId = deleteApiV3OpenOrdersResponseBody200OrdersClientOrderId,
      deleteApiV3OpenOrdersResponseBody200OrdersOrderId = deleteApiV3OpenOrdersResponseBody200OrdersOrderId,
      deleteApiV3OpenOrdersResponseBody200OrdersSymbol = deleteApiV3OpenOrdersResponseBody200OrdersSymbol
    }

-- | > DELETE /api/v3/openOrders
--
-- The same as 'deleteApiV3OpenOrders' but accepts an explicit configuration.
deleteApiV3OpenOrdersWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  DeleteApiV3OpenOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response DeleteApiV3OpenOrdersResponse)
deleteApiV3OpenOrdersWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either DeleteApiV3OpenOrdersResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     DeleteApiV3OpenOrdersResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              ([DeleteApiV3OpenOrdersResponseBody200])
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     DeleteApiV3OpenOrdersResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     DeleteApiV3OpenOrdersResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "DELETE")
          (Data.Text.pack "/api/v3/openOrders")
          [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteApiV3OpenOrdersParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteApiV3OpenOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteApiV3OpenOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteApiV3OpenOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > DELETE /api/v3/openOrders
--
-- The same as 'deleteApiV3OpenOrders' but returns the raw 'Data.ByteString.Char8.ByteString'.
deleteApiV3OpenOrdersRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  DeleteApiV3OpenOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
deleteApiV3OpenOrdersRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "DELETE")
        (Data.Text.pack "/api/v3/openOrders")
        [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteApiV3OpenOrdersParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteApiV3OpenOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteApiV3OpenOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteApiV3OpenOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > DELETE /api/v3/openOrders
--
-- The same as 'deleteApiV3OpenOrders' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
deleteApiV3OpenOrdersWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  DeleteApiV3OpenOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
deleteApiV3OpenOrdersWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "DELETE")
          (Data.Text.pack "/api/v3/openOrders")
          [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteApiV3OpenOrdersParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> deleteApiV3OpenOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteApiV3OpenOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (deleteApiV3OpenOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
