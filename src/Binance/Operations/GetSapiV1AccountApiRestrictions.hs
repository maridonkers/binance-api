{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1AccountApiRestrictions
module Binance.Operations.GetSapiV1AccountApiRestrictions where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/account/apiRestrictions
--
-- Weight(IP): 1
getSapiV1AccountApiRestrictions ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AccountApiRestrictionsParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1AccountApiRestrictionsResponse)
getSapiV1AccountApiRestrictions parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1AccountApiRestrictionsResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1AccountApiRestrictionsResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1AccountApiRestrictionsResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1AccountApiRestrictionsResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1AccountApiRestrictionsResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/account/apiRestrictions")
        [ Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AccountApiRestrictionsParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AccountApiRestrictionsParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AccountApiRestrictionsParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/account\/apiRestrictions.GET.parameters@ in the specification.
data GetSapiV1AccountApiRestrictionsParameters = GetSapiV1AccountApiRestrictionsParameters
  { -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1AccountApiRestrictionsParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1AccountApiRestrictionsParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1AccountApiRestrictionsParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AccountApiRestrictionsParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1AccountApiRestrictionsParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1AccountApiRestrictionsParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AccountApiRestrictionsParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1AccountApiRestrictionsParameters" (\obj -> ((GHC.Base.pure GetSapiV1AccountApiRestrictionsParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1AccountApiRestrictionsParameters' with all required fields.
mkGetSapiV1AccountApiRestrictionsParameters ::
  -- | 'getSapiV1AccountApiRestrictionsParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AccountApiRestrictionsParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1AccountApiRestrictionsParameters
mkGetSapiV1AccountApiRestrictionsParameters getSapiV1AccountApiRestrictionsParametersQuerySignature getSapiV1AccountApiRestrictionsParametersQueryTimestamp =
  GetSapiV1AccountApiRestrictionsParameters
    { getSapiV1AccountApiRestrictionsParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1AccountApiRestrictionsParametersQuerySignature = getSapiV1AccountApiRestrictionsParametersQuerySignature,
      getSapiV1AccountApiRestrictionsParametersQueryTimestamp = getSapiV1AccountApiRestrictionsParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1AccountApiRestrictions'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1AccountApiRestrictionsResponseError' is used.
data GetSapiV1AccountApiRestrictionsResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1AccountApiRestrictionsResponseError GHC.Base.String
  | -- | API Key permissions
    GetSapiV1AccountApiRestrictionsResponse200 GetSapiV1AccountApiRestrictionsResponseBody200
  | -- | Bad Request
    GetSapiV1AccountApiRestrictionsResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1AccountApiRestrictionsResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/account\/apiRestrictions.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1AccountApiRestrictionsResponseBody200 = GetSapiV1AccountApiRestrictionsResponseBody200
  { -- | createTime
    getSapiV1AccountApiRestrictionsResponseBody200CreateTime :: GHC.Int.Int64,
    -- | enableFutures: API Key created before your futures account opened does not support futures API service
    getSapiV1AccountApiRestrictionsResponseBody200EnableFutures :: GHC.Types.Bool,
    -- | enableInternalTransfer: This option authorizes this key to transfer funds between your master account and your sub account instantly
    getSapiV1AccountApiRestrictionsResponseBody200EnableInternalTransfer :: GHC.Types.Bool,
    -- | enableMargin: This option can be adjusted after the Cross Margin account transfer is completed
    getSapiV1AccountApiRestrictionsResponseBody200EnableMargin :: GHC.Types.Bool,
    -- | enableReading
    getSapiV1AccountApiRestrictionsResponseBody200EnableReading :: GHC.Types.Bool,
    -- | enableSpotAndMarginTrading
    getSapiV1AccountApiRestrictionsResponseBody200EnableSpotAndMarginTrading :: GHC.Types.Bool,
    -- | enableVanillaOptions: Authorizes this key to Vanilla options trading
    getSapiV1AccountApiRestrictionsResponseBody200EnableVanillaOptions :: GHC.Types.Bool,
    -- | enableWithdrawals: This option allows you to withdraw via API. You must apply the IP Access Restriction filter in order to enable withdrawals
    getSapiV1AccountApiRestrictionsResponseBody200EnableWithdrawals :: GHC.Types.Bool,
    -- | ipRestrict
    getSapiV1AccountApiRestrictionsResponseBody200IpRestrict :: GHC.Types.Bool,
    -- | permitsUniversalTransfer: Authorizes this key to be used for a dedicated universal transfer API to transfer multiple supported currencies. Each business\'s own transfer API rights are not affected by this authorization
    getSapiV1AccountApiRestrictionsResponseBody200PermitsUniversalTransfer :: GHC.Types.Bool,
    -- | tradingAuthorityExpirationTime: Expiration time for spot and margin trading permission
    getSapiV1AccountApiRestrictionsResponseBody200TradingAuthorityExpirationTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AccountApiRestrictionsResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["createTime" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200CreateTime obj] : ["enableFutures" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200EnableFutures obj] : ["enableInternalTransfer" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200EnableInternalTransfer obj] : ["enableMargin" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200EnableMargin obj] : ["enableReading" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200EnableReading obj] : ["enableSpotAndMarginTrading" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200EnableSpotAndMarginTrading obj] : ["enableVanillaOptions" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200EnableVanillaOptions obj] : ["enableWithdrawals" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200EnableWithdrawals obj] : ["ipRestrict" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200IpRestrict obj] : ["permitsUniversalTransfer" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200PermitsUniversalTransfer obj] : ["tradingAuthorityExpirationTime" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200TradingAuthorityExpirationTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["createTime" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200CreateTime obj] : ["enableFutures" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200EnableFutures obj] : ["enableInternalTransfer" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200EnableInternalTransfer obj] : ["enableMargin" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200EnableMargin obj] : ["enableReading" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200EnableReading obj] : ["enableSpotAndMarginTrading" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200EnableSpotAndMarginTrading obj] : ["enableVanillaOptions" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200EnableVanillaOptions obj] : ["enableWithdrawals" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200EnableWithdrawals obj] : ["ipRestrict" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200IpRestrict obj] : ["permitsUniversalTransfer" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200PermitsUniversalTransfer obj] : ["tradingAuthorityExpirationTime" Data.Aeson.Types.ToJSON..= getSapiV1AccountApiRestrictionsResponseBody200TradingAuthorityExpirationTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AccountApiRestrictionsResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1AccountApiRestrictionsResponseBody200" (\obj -> ((((((((((GHC.Base.pure GetSapiV1AccountApiRestrictionsResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "createTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enableFutures")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enableInternalTransfer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enableMargin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enableReading")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enableSpotAndMarginTrading")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enableVanillaOptions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enableWithdrawals")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "ipRestrict")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "permitsUniversalTransfer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tradingAuthorityExpirationTime"))

-- | Create a new 'GetSapiV1AccountApiRestrictionsResponseBody200' with all required fields.
mkGetSapiV1AccountApiRestrictionsResponseBody200 ::
  -- | 'getSapiV1AccountApiRestrictionsResponseBody200CreateTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1AccountApiRestrictionsResponseBody200EnableFutures'
  GHC.Types.Bool ->
  -- | 'getSapiV1AccountApiRestrictionsResponseBody200EnableInternalTransfer'
  GHC.Types.Bool ->
  -- | 'getSapiV1AccountApiRestrictionsResponseBody200EnableMargin'
  GHC.Types.Bool ->
  -- | 'getSapiV1AccountApiRestrictionsResponseBody200EnableReading'
  GHC.Types.Bool ->
  -- | 'getSapiV1AccountApiRestrictionsResponseBody200EnableSpotAndMarginTrading'
  GHC.Types.Bool ->
  -- | 'getSapiV1AccountApiRestrictionsResponseBody200EnableVanillaOptions'
  GHC.Types.Bool ->
  -- | 'getSapiV1AccountApiRestrictionsResponseBody200EnableWithdrawals'
  GHC.Types.Bool ->
  -- | 'getSapiV1AccountApiRestrictionsResponseBody200IpRestrict'
  GHC.Types.Bool ->
  -- | 'getSapiV1AccountApiRestrictionsResponseBody200PermitsUniversalTransfer'
  GHC.Types.Bool ->
  -- | 'getSapiV1AccountApiRestrictionsResponseBody200TradingAuthorityExpirationTime'
  GHC.Int.Int64 ->
  GetSapiV1AccountApiRestrictionsResponseBody200
mkGetSapiV1AccountApiRestrictionsResponseBody200 getSapiV1AccountApiRestrictionsResponseBody200CreateTime getSapiV1AccountApiRestrictionsResponseBody200EnableFutures getSapiV1AccountApiRestrictionsResponseBody200EnableInternalTransfer getSapiV1AccountApiRestrictionsResponseBody200EnableMargin getSapiV1AccountApiRestrictionsResponseBody200EnableReading getSapiV1AccountApiRestrictionsResponseBody200EnableSpotAndMarginTrading getSapiV1AccountApiRestrictionsResponseBody200EnableVanillaOptions getSapiV1AccountApiRestrictionsResponseBody200EnableWithdrawals getSapiV1AccountApiRestrictionsResponseBody200IpRestrict getSapiV1AccountApiRestrictionsResponseBody200PermitsUniversalTransfer getSapiV1AccountApiRestrictionsResponseBody200TradingAuthorityExpirationTime =
  GetSapiV1AccountApiRestrictionsResponseBody200
    { getSapiV1AccountApiRestrictionsResponseBody200CreateTime = getSapiV1AccountApiRestrictionsResponseBody200CreateTime,
      getSapiV1AccountApiRestrictionsResponseBody200EnableFutures = getSapiV1AccountApiRestrictionsResponseBody200EnableFutures,
      getSapiV1AccountApiRestrictionsResponseBody200EnableInternalTransfer = getSapiV1AccountApiRestrictionsResponseBody200EnableInternalTransfer,
      getSapiV1AccountApiRestrictionsResponseBody200EnableMargin = getSapiV1AccountApiRestrictionsResponseBody200EnableMargin,
      getSapiV1AccountApiRestrictionsResponseBody200EnableReading = getSapiV1AccountApiRestrictionsResponseBody200EnableReading,
      getSapiV1AccountApiRestrictionsResponseBody200EnableSpotAndMarginTrading = getSapiV1AccountApiRestrictionsResponseBody200EnableSpotAndMarginTrading,
      getSapiV1AccountApiRestrictionsResponseBody200EnableVanillaOptions = getSapiV1AccountApiRestrictionsResponseBody200EnableVanillaOptions,
      getSapiV1AccountApiRestrictionsResponseBody200EnableWithdrawals = getSapiV1AccountApiRestrictionsResponseBody200EnableWithdrawals,
      getSapiV1AccountApiRestrictionsResponseBody200IpRestrict = getSapiV1AccountApiRestrictionsResponseBody200IpRestrict,
      getSapiV1AccountApiRestrictionsResponseBody200PermitsUniversalTransfer = getSapiV1AccountApiRestrictionsResponseBody200PermitsUniversalTransfer,
      getSapiV1AccountApiRestrictionsResponseBody200TradingAuthorityExpirationTime = getSapiV1AccountApiRestrictionsResponseBody200TradingAuthorityExpirationTime
    }

-- | > GET /sapi/v1/account/apiRestrictions
--
-- The same as 'getSapiV1AccountApiRestrictions' but accepts an explicit configuration.
getSapiV1AccountApiRestrictionsWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AccountApiRestrictionsParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1AccountApiRestrictionsResponse)
getSapiV1AccountApiRestrictionsWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1AccountApiRestrictionsResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1AccountApiRestrictionsResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1AccountApiRestrictionsResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1AccountApiRestrictionsResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1AccountApiRestrictionsResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/account/apiRestrictions")
          [ Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AccountApiRestrictionsParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AccountApiRestrictionsParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AccountApiRestrictionsParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/account/apiRestrictions
--
-- The same as 'getSapiV1AccountApiRestrictions' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1AccountApiRestrictionsRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AccountApiRestrictionsParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1AccountApiRestrictionsRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/account/apiRestrictions")
        [ Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AccountApiRestrictionsParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AccountApiRestrictionsParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AccountApiRestrictionsParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/account/apiRestrictions
--
-- The same as 'getSapiV1AccountApiRestrictions' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1AccountApiRestrictionsWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AccountApiRestrictionsParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1AccountApiRestrictionsWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/account/apiRestrictions")
          [ Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AccountApiRestrictionsParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AccountApiRestrictionsParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AccountApiRestrictionsParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
