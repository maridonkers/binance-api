{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postSapiV1AssetConvertTransferQueryByPage
module Binance.Operations.PostSapiV1AssetConvertTransferQueryByPage where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /sapi/v1/asset/convert-transfer/queryByPage
--
-- Weight(UID): 5
postSapiV1AssetConvertTransferQueryByPage ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1AssetConvertTransferQueryByPageParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response PostSapiV1AssetConvertTransferQueryByPageResponse)
postSapiV1AssetConvertTransferQueryByPage parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostSapiV1AssetConvertTransferQueryByPageResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1AssetConvertTransferQueryByPageResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PostSapiV1AssetConvertTransferQueryByPageResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1AssetConvertTransferQueryByPageResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1AssetConvertTransferQueryByPageResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/asset/convert-transfer/queryByPage")
        [ Binance.Common.QueryParameter (Data.Text.pack "tranId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryTranId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQueryStartTime parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQueryEndTime parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "accountType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryAccountType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/asset\/convert-transfer\/queryByPage.POST.parameters@ in the specification.
data PostSapiV1AssetConvertTransferQueryByPageParameters = PostSapiV1AssetConvertTransferQueryByPageParameters
  { -- | queryAccountType: Represents the parameter named \'accountType\'
    --
    -- MAIN: main account. CARD: funding account. If it is blank, we will query spot and card wallet, otherwise, we just query the corresponding wallet
    postSapiV1AssetConvertTransferQueryByPageParametersQueryAccountType :: (GHC.Maybe.Maybe PostSapiV1AssetConvertTransferQueryByPageParametersQueryAccountType),
    -- | queryAsset: Represents the parameter named \'asset\'
    --
    -- If it is blank, we will match deducted asset and target asset.
    postSapiV1AssetConvertTransferQueryByPageParametersQueryAsset :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryCurrent: Represents the parameter named \'current\'
    --
    -- Current querying page. Start from 1. Default:1
    postSapiV1AssetConvertTransferQueryByPageParametersQueryCurrent :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    postSapiV1AssetConvertTransferQueryByPageParametersQueryEndTime :: GHC.Int.Int64,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    postSapiV1AssetConvertTransferQueryByPageParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    postSapiV1AssetConvertTransferQueryByPageParametersQuerySignature :: Data.Text.Internal.Text,
    -- | querySize: Represents the parameter named \'size\'
    --
    -- Default:10 Max:100
    postSapiV1AssetConvertTransferQueryByPageParametersQuerySize :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    postSapiV1AssetConvertTransferQueryByPageParametersQueryStartTime :: GHC.Int.Int64,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    postSapiV1AssetConvertTransferQueryByPageParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryTranId: Represents the parameter named \'tranId\'
    --
    -- The transaction id
    postSapiV1AssetConvertTransferQueryByPageParametersQueryTranId :: (GHC.Maybe.Maybe GHC.Int.Int64)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1AssetConvertTransferQueryByPageParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAccountType" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetConvertTransferQueryByPageParametersQueryAccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAsset" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetConvertTransferQueryByPageParametersQueryAsset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetConvertTransferQueryByPageParametersQueryCurrent obj) : ["queryEndTime" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageParametersQueryEndTime obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetConvertTransferQueryByPageParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetConvertTransferQueryByPageParametersQuerySize obj) : ["queryStartTime" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageParametersQueryStartTime obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTranId" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetConvertTransferQueryByPageParametersQueryTranId obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAccountType" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetConvertTransferQueryByPageParametersQueryAccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAsset" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetConvertTransferQueryByPageParametersQueryAsset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetConvertTransferQueryByPageParametersQueryCurrent obj) : ["queryEndTime" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageParametersQueryEndTime obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetConvertTransferQueryByPageParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetConvertTransferQueryByPageParametersQuerySize obj) : ["queryStartTime" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageParametersQueryStartTime obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTranId" Data.Aeson.Types.ToJSON..=)) (postSapiV1AssetConvertTransferQueryByPageParametersQueryTranId obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1AssetConvertTransferQueryByPageParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1AssetConvertTransferQueryByPageParameters" (\obj -> (((((((((GHC.Base.pure PostSapiV1AssetConvertTransferQueryByPageParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAccountType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCurrent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySize")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryTranId"))

-- | Create a new 'PostSapiV1AssetConvertTransferQueryByPageParameters' with all required fields.
mkPostSapiV1AssetConvertTransferQueryByPageParameters ::
  -- | 'postSapiV1AssetConvertTransferQueryByPageParametersQueryEndTime'
  GHC.Int.Int64 ->
  -- | 'postSapiV1AssetConvertTransferQueryByPageParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1AssetConvertTransferQueryByPageParametersQueryStartTime'
  GHC.Int.Int64 ->
  -- | 'postSapiV1AssetConvertTransferQueryByPageParametersQueryTimestamp'
  GHC.Int.Int64 ->
  PostSapiV1AssetConvertTransferQueryByPageParameters
mkPostSapiV1AssetConvertTransferQueryByPageParameters postSapiV1AssetConvertTransferQueryByPageParametersQueryEndTime postSapiV1AssetConvertTransferQueryByPageParametersQuerySignature postSapiV1AssetConvertTransferQueryByPageParametersQueryStartTime postSapiV1AssetConvertTransferQueryByPageParametersQueryTimestamp =
  PostSapiV1AssetConvertTransferQueryByPageParameters
    { postSapiV1AssetConvertTransferQueryByPageParametersQueryAccountType = GHC.Maybe.Nothing,
      postSapiV1AssetConvertTransferQueryByPageParametersQueryAsset = GHC.Maybe.Nothing,
      postSapiV1AssetConvertTransferQueryByPageParametersQueryCurrent = GHC.Maybe.Nothing,
      postSapiV1AssetConvertTransferQueryByPageParametersQueryEndTime = postSapiV1AssetConvertTransferQueryByPageParametersQueryEndTime,
      postSapiV1AssetConvertTransferQueryByPageParametersQueryRecvWindow = GHC.Maybe.Nothing,
      postSapiV1AssetConvertTransferQueryByPageParametersQuerySignature = postSapiV1AssetConvertTransferQueryByPageParametersQuerySignature,
      postSapiV1AssetConvertTransferQueryByPageParametersQuerySize = GHC.Maybe.Nothing,
      postSapiV1AssetConvertTransferQueryByPageParametersQueryStartTime = postSapiV1AssetConvertTransferQueryByPageParametersQueryStartTime,
      postSapiV1AssetConvertTransferQueryByPageParametersQueryTimestamp = postSapiV1AssetConvertTransferQueryByPageParametersQueryTimestamp,
      postSapiV1AssetConvertTransferQueryByPageParametersQueryTranId = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/asset\/convert-transfer\/queryByPage.POST.parameters.properties.queryAccountType@ in the specification.
--
-- Represents the parameter named \'accountType\'
--
-- MAIN: main account. CARD: funding account. If it is blank, we will query spot and card wallet, otherwise, we just query the corresponding wallet
data PostSapiV1AssetConvertTransferQueryByPageParametersQueryAccountType
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostSapiV1AssetConvertTransferQueryByPageParametersQueryAccountTypeOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostSapiV1AssetConvertTransferQueryByPageParametersQueryAccountTypeTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"MAIN"@
    PostSapiV1AssetConvertTransferQueryByPageParametersQueryAccountTypeEnumMAIN
  | -- | Represents the JSON value @"CARD"@
    PostSapiV1AssetConvertTransferQueryByPageParametersQueryAccountTypeEnumCARD
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1AssetConvertTransferQueryByPageParametersQueryAccountType where
  toJSON (PostSapiV1AssetConvertTransferQueryByPageParametersQueryAccountTypeOther val) = val
  toJSON (PostSapiV1AssetConvertTransferQueryByPageParametersQueryAccountTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostSapiV1AssetConvertTransferQueryByPageParametersQueryAccountTypeEnumMAIN) = "MAIN"
  toJSON (PostSapiV1AssetConvertTransferQueryByPageParametersQueryAccountTypeEnumCARD) = "CARD"

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1AssetConvertTransferQueryByPageParametersQueryAccountType where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "MAIN" -> PostSapiV1AssetConvertTransferQueryByPageParametersQueryAccountTypeEnumMAIN
            | val GHC.Classes.== "CARD" -> PostSapiV1AssetConvertTransferQueryByPageParametersQueryAccountTypeEnumCARD
            | GHC.Base.otherwise -> PostSapiV1AssetConvertTransferQueryByPageParametersQueryAccountTypeOther val
      )

-- | Represents a response of the operation 'postSapiV1AssetConvertTransferQueryByPage'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostSapiV1AssetConvertTransferQueryByPageResponseError' is used.
data PostSapiV1AssetConvertTransferQueryByPageResponse
  = -- | Means either no matching case available or a parse error
    PostSapiV1AssetConvertTransferQueryByPageResponseError GHC.Base.String
  | -- | Query Convert Transfer
    PostSapiV1AssetConvertTransferQueryByPageResponse200 PostSapiV1AssetConvertTransferQueryByPageResponseBody200
  | -- | Bad Request
    PostSapiV1AssetConvertTransferQueryByPageResponse400 Error
  | -- | Unauthorized Request
    PostSapiV1AssetConvertTransferQueryByPageResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/asset\/convert-transfer\/queryByPage.POST.responses.200.content.application\/json.schema@ in the specification.
data PostSapiV1AssetConvertTransferQueryByPageResponseBody200 = PostSapiV1AssetConvertTransferQueryByPageResponseBody200
  { -- | rows
    postSapiV1AssetConvertTransferQueryByPageResponseBody200Rows :: ([PostSapiV1AssetConvertTransferQueryByPageResponseBody200Rows]),
    -- | total
    postSapiV1AssetConvertTransferQueryByPageResponseBody200Total :: GHC.Int.Int32
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1AssetConvertTransferQueryByPageResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200Total obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200Total obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1AssetConvertTransferQueryByPageResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1AssetConvertTransferQueryByPageResponseBody200" (\obj -> (GHC.Base.pure PostSapiV1AssetConvertTransferQueryByPageResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "rows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'PostSapiV1AssetConvertTransferQueryByPageResponseBody200' with all required fields.
mkPostSapiV1AssetConvertTransferQueryByPageResponseBody200 ::
  -- | 'postSapiV1AssetConvertTransferQueryByPageResponseBody200Rows'
  [PostSapiV1AssetConvertTransferQueryByPageResponseBody200Rows] ->
  -- | 'postSapiV1AssetConvertTransferQueryByPageResponseBody200Total'
  GHC.Int.Int32 ->
  PostSapiV1AssetConvertTransferQueryByPageResponseBody200
mkPostSapiV1AssetConvertTransferQueryByPageResponseBody200 postSapiV1AssetConvertTransferQueryByPageResponseBody200Rows postSapiV1AssetConvertTransferQueryByPageResponseBody200Total =
  PostSapiV1AssetConvertTransferQueryByPageResponseBody200
    { postSapiV1AssetConvertTransferQueryByPageResponseBody200Rows = postSapiV1AssetConvertTransferQueryByPageResponseBody200Rows,
      postSapiV1AssetConvertTransferQueryByPageResponseBody200Total = postSapiV1AssetConvertTransferQueryByPageResponseBody200Total
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/asset\/convert-transfer\/queryByPage.POST.responses.200.content.application\/json.schema.properties.rows.items@ in the specification.
data PostSapiV1AssetConvertTransferQueryByPageResponseBody200Rows = PostSapiV1AssetConvertTransferQueryByPageResponseBody200Rows
  { -- | accountType
    postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsAccountType :: Data.Text.Internal.Text,
    -- | deductedAmount
    postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsDeductedAmount :: Data.Text.Internal.Text,
    -- | deductedAsset
    postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsDeductedAsset :: Data.Text.Internal.Text,
    -- | status
    postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsStatus :: Data.Text.Internal.Text,
    -- | targetAmount
    postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTargetAmount :: Data.Text.Internal.Text,
    -- | targetAsset
    postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTargetAsset :: Data.Text.Internal.Text,
    -- | time
    postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTime :: GHC.Int.Int64,
    -- | tranId
    postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTranId :: GHC.Int.Int64,
    -- | type
    postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsType :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1AssetConvertTransferQueryByPageResponseBody200Rows where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["accountType" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsAccountType obj] : ["deductedAmount" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsDeductedAmount obj] : ["deductedAsset" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsDeductedAsset obj] : ["status" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsStatus obj] : ["targetAmount" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTargetAmount obj] : ["targetAsset" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTargetAsset obj] : ["time" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTime obj] : ["tranId" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTranId obj] : ["type" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["accountType" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsAccountType obj] : ["deductedAmount" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsDeductedAmount obj] : ["deductedAsset" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsDeductedAsset obj] : ["status" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsStatus obj] : ["targetAmount" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTargetAmount obj] : ["targetAsset" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTargetAsset obj] : ["time" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTime obj] : ["tranId" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTranId obj] : ["type" Data.Aeson.Types.ToJSON..= postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1AssetConvertTransferQueryByPageResponseBody200Rows where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1AssetConvertTransferQueryByPageResponseBody200Rows" (\obj -> ((((((((GHC.Base.pure PostSapiV1AssetConvertTransferQueryByPageResponseBody200Rows GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "accountType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "deductedAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "deductedAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "targetAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "targetAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "time")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tranId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))

-- | Create a new 'PostSapiV1AssetConvertTransferQueryByPageResponseBody200Rows' with all required fields.
mkPostSapiV1AssetConvertTransferQueryByPageResponseBody200Rows ::
  -- | 'postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsAccountType'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsDeductedAmount'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsDeductedAsset'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsStatus'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTargetAmount'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTargetAsset'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTime'
  GHC.Int.Int64 ->
  -- | 'postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTranId'
  GHC.Int.Int64 ->
  -- | 'postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsType'
  GHC.Int.Int64 ->
  PostSapiV1AssetConvertTransferQueryByPageResponseBody200Rows
mkPostSapiV1AssetConvertTransferQueryByPageResponseBody200Rows postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsAccountType postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsDeductedAmount postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsDeductedAsset postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsStatus postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTargetAmount postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTargetAsset postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTime postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTranId postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsType =
  PostSapiV1AssetConvertTransferQueryByPageResponseBody200Rows
    { postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsAccountType = postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsAccountType,
      postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsDeductedAmount = postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsDeductedAmount,
      postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsDeductedAsset = postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsDeductedAsset,
      postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsStatus = postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsStatus,
      postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTargetAmount = postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTargetAmount,
      postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTargetAsset = postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTargetAsset,
      postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTime = postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTime,
      postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTranId = postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsTranId,
      postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsType = postSapiV1AssetConvertTransferQueryByPageResponseBody200RowsType
    }

-- | > POST /sapi/v1/asset/convert-transfer/queryByPage
--
-- The same as 'postSapiV1AssetConvertTransferQueryByPage' but accepts an explicit configuration.
postSapiV1AssetConvertTransferQueryByPageWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1AssetConvertTransferQueryByPageParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response PostSapiV1AssetConvertTransferQueryByPageResponse)
postSapiV1AssetConvertTransferQueryByPageWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either PostSapiV1AssetConvertTransferQueryByPageResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1AssetConvertTransferQueryByPageResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              PostSapiV1AssetConvertTransferQueryByPageResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1AssetConvertTransferQueryByPageResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1AssetConvertTransferQueryByPageResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/asset/convert-transfer/queryByPage")
          [ Binance.Common.QueryParameter (Data.Text.pack "tranId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryTranId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQueryStartTime parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQueryEndTime parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "accountType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryAccountType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > POST /sapi/v1/asset/convert-transfer/queryByPage
--
-- The same as 'postSapiV1AssetConvertTransferQueryByPage' but returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1AssetConvertTransferQueryByPageRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1AssetConvertTransferQueryByPageParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1AssetConvertTransferQueryByPageRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/asset/convert-transfer/queryByPage")
        [ Binance.Common.QueryParameter (Data.Text.pack "tranId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryTranId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQueryStartTime parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQueryEndTime parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "accountType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryAccountType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > POST /sapi/v1/asset/convert-transfer/queryByPage
--
-- The same as 'postSapiV1AssetConvertTransferQueryByPage' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1AssetConvertTransferQueryByPageWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1AssetConvertTransferQueryByPageParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1AssetConvertTransferQueryByPageWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/asset/convert-transfer/queryByPage")
          [ Binance.Common.QueryParameter (Data.Text.pack "tranId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryTranId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQueryStartTime parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQueryEndTime parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "accountType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryAccountType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1AssetConvertTransferQueryByPageParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1AssetConvertTransferQueryByPageParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
