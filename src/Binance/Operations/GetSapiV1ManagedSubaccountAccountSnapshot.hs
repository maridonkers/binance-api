{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1ManagedSubaccountAccountSnapshot
module Binance.Operations.GetSapiV1ManagedSubaccountAccountSnapshot where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/managed-subaccount/accountSnapshot
--
-- - The query time period must be less then 30 days
-- - Support query within the last one month only
-- - If \`startTime\` and \`endTime\` not sent, return records of the last 7 days by default
--
-- Weight(IP): 2400
getSapiV1ManagedSubaccountAccountSnapshot ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1ManagedSubaccountAccountSnapshotParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1ManagedSubaccountAccountSnapshotResponse)
getSapiV1ManagedSubaccountAccountSnapshot parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1ManagedSubaccountAccountSnapshotResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1ManagedSubaccountAccountSnapshotResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1ManagedSubaccountAccountSnapshotResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1ManagedSubaccountAccountSnapshotResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/managed-subaccount/accountSnapshot")
        [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/managed-subaccount\/accountSnapshot.GET.parameters@ in the specification.
data GetSapiV1ManagedSubaccountAccountSnapshotParameters = GetSapiV1ManagedSubaccountAccountSnapshotParameters
  { -- | queryEmail: Represents the parameter named \'email\'
    --
    -- Sub-account email
    getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEmail :: Data.Text.Internal.Text,
    -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- min 7, max 30, default 7
    getSapiV1ManagedSubaccountAccountSnapshotParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1ManagedSubaccountAccountSnapshotParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1ManagedSubaccountAccountSnapshotParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1ManagedSubaccountAccountSnapshotParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1ManagedSubaccountAccountSnapshotParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryType: Represents the parameter named \'type\'
    --
    -- \"SPOT\", \"MARGIN\"(cross), \"FUTURES\"(UM)
    getSapiV1ManagedSubaccountAccountSnapshotParametersQueryType :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1ManagedSubaccountAccountSnapshotParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryEmail" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEmail obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotParametersQueryTimestamp obj] : ["queryType" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotParametersQueryType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryEmail" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEmail obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotParametersQueryTimestamp obj] : ["queryType" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotParametersQueryType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1ManagedSubaccountAccountSnapshotParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1ManagedSubaccountAccountSnapshotParameters" (\obj -> (((((((GHC.Base.pure GetSapiV1ManagedSubaccountAccountSnapshotParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryEmail")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryType"))

-- | Create a new 'GetSapiV1ManagedSubaccountAccountSnapshotParameters' with all required fields.
mkGetSapiV1ManagedSubaccountAccountSnapshotParameters ::
  -- | 'getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEmail'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1ManagedSubaccountAccountSnapshotParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1ManagedSubaccountAccountSnapshotParametersQueryTimestamp'
  GHC.Int.Int64 ->
  -- | 'getSapiV1ManagedSubaccountAccountSnapshotParametersQueryType'
  Data.Text.Internal.Text ->
  GetSapiV1ManagedSubaccountAccountSnapshotParameters
mkGetSapiV1ManagedSubaccountAccountSnapshotParameters getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEmail getSapiV1ManagedSubaccountAccountSnapshotParametersQuerySignature getSapiV1ManagedSubaccountAccountSnapshotParametersQueryTimestamp getSapiV1ManagedSubaccountAccountSnapshotParametersQueryType =
  GetSapiV1ManagedSubaccountAccountSnapshotParameters
    { getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEmail = getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEmail,
      getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1ManagedSubaccountAccountSnapshotParametersQueryLimit = GHC.Maybe.Nothing,
      getSapiV1ManagedSubaccountAccountSnapshotParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1ManagedSubaccountAccountSnapshotParametersQuerySignature = getSapiV1ManagedSubaccountAccountSnapshotParametersQuerySignature,
      getSapiV1ManagedSubaccountAccountSnapshotParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1ManagedSubaccountAccountSnapshotParametersQueryTimestamp = getSapiV1ManagedSubaccountAccountSnapshotParametersQueryTimestamp,
      getSapiV1ManagedSubaccountAccountSnapshotParametersQueryType = getSapiV1ManagedSubaccountAccountSnapshotParametersQueryType
    }

-- | Represents a response of the operation 'getSapiV1ManagedSubaccountAccountSnapshot'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1ManagedSubaccountAccountSnapshotResponseError' is used.
data GetSapiV1ManagedSubaccountAccountSnapshotResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1ManagedSubaccountAccountSnapshotResponseError GHC.Base.String
  | -- | Sub-account spot snapshot
    GetSapiV1ManagedSubaccountAccountSnapshotResponse200 GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200
  | -- | Bad Request
    GetSapiV1ManagedSubaccountAccountSnapshotResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1ManagedSubaccountAccountSnapshotResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/managed-subaccount\/accountSnapshot.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200 = GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200
  { -- | code
    getSapiV1ManagedSubaccountAccountSnapshotResponseBody200Code :: GHC.Int.Int32,
    -- | msg
    getSapiV1ManagedSubaccountAccountSnapshotResponseBody200Msg :: Data.Text.Internal.Text,
    -- | snapshotVos
    getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos :: ([GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos])
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["code" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200Code obj] : ["msg" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200Msg obj] : ["snapshotVos" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["code" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200Code obj] : ["msg" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200Msg obj] : ["snapshotVos" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200" (\obj -> ((GHC.Base.pure GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "msg")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "snapshotVos"))

-- | Create a new 'GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200' with all required fields.
mkGetSapiV1ManagedSubaccountAccountSnapshotResponseBody200 ::
  -- | 'getSapiV1ManagedSubaccountAccountSnapshotResponseBody200Code'
  GHC.Int.Int32 ->
  -- | 'getSapiV1ManagedSubaccountAccountSnapshotResponseBody200Msg'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos'
  [GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos] ->
  GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200
mkGetSapiV1ManagedSubaccountAccountSnapshotResponseBody200 getSapiV1ManagedSubaccountAccountSnapshotResponseBody200Code getSapiV1ManagedSubaccountAccountSnapshotResponseBody200Msg getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos =
  GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200
    { getSapiV1ManagedSubaccountAccountSnapshotResponseBody200Code = getSapiV1ManagedSubaccountAccountSnapshotResponseBody200Code,
      getSapiV1ManagedSubaccountAccountSnapshotResponseBody200Msg = getSapiV1ManagedSubaccountAccountSnapshotResponseBody200Msg,
      getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos = getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/managed-subaccount\/accountSnapshot.GET.responses.200.content.application\/json.schema.properties.snapshotVos.items@ in the specification.
data GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos = GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos
  { -- | data
    getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData :: GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData,
    -- | type
    getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosType :: Data.Text.Internal.Text,
    -- | updateTime
    getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosUpdateTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData obj] : ["type" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosType obj] : ["updateTime" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosUpdateTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData obj] : ["type" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosType obj] : ["updateTime" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosUpdateTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos" (\obj -> ((GHC.Base.pure GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "updateTime"))

-- | Create a new 'GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos' with all required fields.
mkGetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos ::
  -- | 'getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData'
  GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData ->
  -- | 'getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosType'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosUpdateTime'
  GHC.Int.Int64 ->
  GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos
mkGetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosType getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosUpdateTime =
  GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVos
    { getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData = getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData,
      getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosType = getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosType,
      getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosUpdateTime = getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosUpdateTime
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/managed-subaccount\/accountSnapshot.GET.responses.200.content.application\/json.schema.properties.snapshotVos.items.properties.data@ in the specification.
data GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData = GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData
  { -- | balances
    getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances :: ([GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances]),
    -- | totalAssetOfBtc
    getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataTotalAssetOfBtc :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["balances" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances obj] : ["totalAssetOfBtc" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataTotalAssetOfBtc obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["balances" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances obj] : ["totalAssetOfBtc" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataTotalAssetOfBtc obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData" (\obj -> (GHC.Base.pure GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "balances")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalAssetOfBtc"))

-- | Create a new 'GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData' with all required fields.
mkGetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData ::
  -- | 'getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances'
  [GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances] ->
  -- | 'getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataTotalAssetOfBtc'
  Data.Text.Internal.Text ->
  GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData
mkGetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataTotalAssetOfBtc =
  GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosData
    { getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances = getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances,
      getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataTotalAssetOfBtc = getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataTotalAssetOfBtc
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/managed-subaccount\/accountSnapshot.GET.responses.200.content.application\/json.schema.properties.snapshotVos.items.properties.data.properties.balances.items@ in the specification.
data GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances = GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances
  { -- | asset
    getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesAsset :: Data.Text.Internal.Text,
    -- | free
    getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesFree :: Data.Text.Internal.Text,
    -- | locked
    getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesLocked :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesAsset obj] : ["free" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesFree obj] : ["locked" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesLocked obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesAsset obj] : ["free" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesFree obj] : ["locked" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesLocked obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances" (\obj -> ((GHC.Base.pure GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "free")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "locked"))

-- | Create a new 'GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances' with all required fields.
mkGetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances ::
  -- | 'getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesAsset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesFree'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesLocked'
  Data.Text.Internal.Text ->
  GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances
mkGetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesAsset getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesFree getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesLocked =
  GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalances
    { getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesAsset = getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesAsset,
      getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesFree = getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesFree,
      getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesLocked = getSapiV1ManagedSubaccountAccountSnapshotResponseBody200SnapshotVosDataBalancesLocked
    }

-- | > GET /sapi/v1/managed-subaccount/accountSnapshot
--
-- The same as 'getSapiV1ManagedSubaccountAccountSnapshot' but accepts an explicit configuration.
getSapiV1ManagedSubaccountAccountSnapshotWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1ManagedSubaccountAccountSnapshotParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1ManagedSubaccountAccountSnapshotResponse)
getSapiV1ManagedSubaccountAccountSnapshotWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1ManagedSubaccountAccountSnapshotResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1ManagedSubaccountAccountSnapshotResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1ManagedSubaccountAccountSnapshotResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1ManagedSubaccountAccountSnapshotResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1ManagedSubaccountAccountSnapshotResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/managed-subaccount/accountSnapshot")
          [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/managed-subaccount/accountSnapshot
--
-- The same as 'getSapiV1ManagedSubaccountAccountSnapshot' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1ManagedSubaccountAccountSnapshotRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1ManagedSubaccountAccountSnapshotParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1ManagedSubaccountAccountSnapshotRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/managed-subaccount/accountSnapshot")
        [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/managed-subaccount/accountSnapshot
--
-- The same as 'getSapiV1ManagedSubaccountAccountSnapshot' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1ManagedSubaccountAccountSnapshotWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1ManagedSubaccountAccountSnapshotParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1ManagedSubaccountAccountSnapshotWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/managed-subaccount/accountSnapshot")
          [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAccountSnapshotParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAccountSnapshotParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
