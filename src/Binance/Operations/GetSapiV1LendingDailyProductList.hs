{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1LendingDailyProductList
module Binance.Operations.GetSapiV1LendingDailyProductList where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/lending/daily/product/list
--
-- Weight(IP): 1
getSapiV1LendingDailyProductList ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingDailyProductListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1LendingDailyProductListResponse)
getSapiV1LendingDailyProductList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1LendingDailyProductListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingDailyProductListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ([GetSapiV1LendingDailyProductListResponseBody200])
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingDailyProductListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LendingDailyProductListResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/lending/daily/product/list")
        [ Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "featured") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryFeatured parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyProductListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyProductListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/lending\/daily\/product\/list.GET.parameters@ in the specification.
data GetSapiV1LendingDailyProductListParameters = GetSapiV1LendingDailyProductListParameters
  { -- | queryCurrent: Represents the parameter named \'current\'
    --
    -- Current querying page. Start from 1. Default:1
    getSapiV1LendingDailyProductListParametersQueryCurrent :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryFeatured: Represents the parameter named \'featured\'
    --
    -- Default \`ALL\`
    getSapiV1LendingDailyProductListParametersQueryFeatured :: (GHC.Maybe.Maybe GetSapiV1LendingDailyProductListParametersQueryFeatured),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1LendingDailyProductListParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1LendingDailyProductListParametersQuerySignature :: Data.Text.Internal.Text,
    -- | querySize: Represents the parameter named \'size\'
    --
    -- Default:10 Max:100
    getSapiV1LendingDailyProductListParametersQuerySize :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryStatus: Represents the parameter named \'status\'
    --
    -- Default \`ALL\`
    getSapiV1LendingDailyProductListParametersQueryStatus :: (GHC.Maybe.Maybe GetSapiV1LendingDailyProductListParametersQueryStatus),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1LendingDailyProductListParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingDailyProductListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingDailyProductListParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFeatured" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingDailyProductListParametersQueryFeatured obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingDailyProductListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingDailyProductListParametersQuerySize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingDailyProductListParametersQueryStatus obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingDailyProductListParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFeatured" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingDailyProductListParametersQueryFeatured obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingDailyProductListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingDailyProductListParametersQuerySize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getSapiV1LendingDailyProductListParametersQueryStatus obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingDailyProductListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LendingDailyProductListParameters" (\obj -> ((((((GHC.Base.pure GetSapiV1LendingDailyProductListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCurrent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryFeatured")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySize")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1LendingDailyProductListParameters' with all required fields.
mkGetSapiV1LendingDailyProductListParameters ::
  -- | 'getSapiV1LendingDailyProductListParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyProductListParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1LendingDailyProductListParameters
mkGetSapiV1LendingDailyProductListParameters getSapiV1LendingDailyProductListParametersQuerySignature getSapiV1LendingDailyProductListParametersQueryTimestamp =
  GetSapiV1LendingDailyProductListParameters
    { getSapiV1LendingDailyProductListParametersQueryCurrent = GHC.Maybe.Nothing,
      getSapiV1LendingDailyProductListParametersQueryFeatured = GHC.Maybe.Nothing,
      getSapiV1LendingDailyProductListParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1LendingDailyProductListParametersQuerySignature = getSapiV1LendingDailyProductListParametersQuerySignature,
      getSapiV1LendingDailyProductListParametersQuerySize = GHC.Maybe.Nothing,
      getSapiV1LendingDailyProductListParametersQueryStatus = GHC.Maybe.Nothing,
      getSapiV1LendingDailyProductListParametersQueryTimestamp = getSapiV1LendingDailyProductListParametersQueryTimestamp
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/lending\/daily\/product\/list.GET.parameters.properties.queryFeatured@ in the specification.
--
-- Represents the parameter named \'featured\'
--
-- Default \`ALL\`
data GetSapiV1LendingDailyProductListParametersQueryFeatured
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1LendingDailyProductListParametersQueryFeaturedOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1LendingDailyProductListParametersQueryFeaturedTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"ALL"@
    GetSapiV1LendingDailyProductListParametersQueryFeaturedEnumALL
  | -- | Represents the JSON value @"TRUE"@
    GetSapiV1LendingDailyProductListParametersQueryFeaturedEnumTRUE
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingDailyProductListParametersQueryFeatured where
  toJSON (GetSapiV1LendingDailyProductListParametersQueryFeaturedOther val) = val
  toJSON (GetSapiV1LendingDailyProductListParametersQueryFeaturedTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1LendingDailyProductListParametersQueryFeaturedEnumALL) = "ALL"
  toJSON (GetSapiV1LendingDailyProductListParametersQueryFeaturedEnumTRUE) = "TRUE"

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingDailyProductListParametersQueryFeatured where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "ALL" -> GetSapiV1LendingDailyProductListParametersQueryFeaturedEnumALL
            | val GHC.Classes.== "TRUE" -> GetSapiV1LendingDailyProductListParametersQueryFeaturedEnumTRUE
            | GHC.Base.otherwise -> GetSapiV1LendingDailyProductListParametersQueryFeaturedOther val
      )

-- | Defines the enum schema located at @paths.\/sapi\/v1\/lending\/daily\/product\/list.GET.parameters.properties.queryStatus@ in the specification.
--
-- Represents the parameter named \'status\'
--
-- Default \`ALL\`
data GetSapiV1LendingDailyProductListParametersQueryStatus
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1LendingDailyProductListParametersQueryStatusOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1LendingDailyProductListParametersQueryStatusTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"ALL"@
    GetSapiV1LendingDailyProductListParametersQueryStatusEnumALL
  | -- | Represents the JSON value @"SUBSCRIBABLE"@
    GetSapiV1LendingDailyProductListParametersQueryStatusEnumSUBSCRIBABLE
  | -- | Represents the JSON value @"UNSUBSCRIBABLE"@
    GetSapiV1LendingDailyProductListParametersQueryStatusEnumUNSUBSCRIBABLE
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingDailyProductListParametersQueryStatus where
  toJSON (GetSapiV1LendingDailyProductListParametersQueryStatusOther val) = val
  toJSON (GetSapiV1LendingDailyProductListParametersQueryStatusTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1LendingDailyProductListParametersQueryStatusEnumALL) = "ALL"
  toJSON (GetSapiV1LendingDailyProductListParametersQueryStatusEnumSUBSCRIBABLE) = "SUBSCRIBABLE"
  toJSON (GetSapiV1LendingDailyProductListParametersQueryStatusEnumUNSUBSCRIBABLE) = "UNSUBSCRIBABLE"

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingDailyProductListParametersQueryStatus where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "ALL" -> GetSapiV1LendingDailyProductListParametersQueryStatusEnumALL
            | val GHC.Classes.== "SUBSCRIBABLE" -> GetSapiV1LendingDailyProductListParametersQueryStatusEnumSUBSCRIBABLE
            | val GHC.Classes.== "UNSUBSCRIBABLE" -> GetSapiV1LendingDailyProductListParametersQueryStatusEnumUNSUBSCRIBABLE
            | GHC.Base.otherwise -> GetSapiV1LendingDailyProductListParametersQueryStatusOther val
      )

-- | Represents a response of the operation 'getSapiV1LendingDailyProductList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1LendingDailyProductListResponseError' is used.
data GetSapiV1LendingDailyProductListResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1LendingDailyProductListResponseError GHC.Base.String
  | -- | List of flexible products
    GetSapiV1LendingDailyProductListResponse200 ([GetSapiV1LendingDailyProductListResponseBody200])
  | -- | Bad Request
    GetSapiV1LendingDailyProductListResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1LendingDailyProductListResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/lending\/daily\/product\/list.GET.responses.200.content.application\/json.schema.items@ in the specification.
data GetSapiV1LendingDailyProductListResponseBody200 = GetSapiV1LendingDailyProductListResponseBody200
  { -- | asset
    getSapiV1LendingDailyProductListResponseBody200Asset :: Data.Text.Internal.Text,
    -- | avgAnnualInterestRate
    getSapiV1LendingDailyProductListResponseBody200AvgAnnualInterestRate :: Data.Text.Internal.Text,
    -- | canPurchase
    getSapiV1LendingDailyProductListResponseBody200CanPurchase :: GHC.Types.Bool,
    -- | canRedeem
    getSapiV1LendingDailyProductListResponseBody200CanRedeem :: GHC.Types.Bool,
    -- | dailyInterestPerThousand
    getSapiV1LendingDailyProductListResponseBody200DailyInterestPerThousand :: Data.Text.Internal.Text,
    -- | featured
    getSapiV1LendingDailyProductListResponseBody200Featured :: GHC.Types.Bool,
    -- | minPurchaseAmount
    getSapiV1LendingDailyProductListResponseBody200MinPurchaseAmount :: Data.Text.Internal.Text,
    -- | productId
    getSapiV1LendingDailyProductListResponseBody200ProductId :: Data.Text.Internal.Text,
    -- | purchasedAmount
    getSapiV1LendingDailyProductListResponseBody200PurchasedAmount :: Data.Text.Internal.Text,
    -- | status
    getSapiV1LendingDailyProductListResponseBody200Status :: Data.Text.Internal.Text,
    -- | upLimit
    getSapiV1LendingDailyProductListResponseBody200UpLimit :: Data.Text.Internal.Text,
    -- | upLimitPerUser
    getSapiV1LendingDailyProductListResponseBody200UpLimitPerUser :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LendingDailyProductListResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200Asset obj] : ["avgAnnualInterestRate" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200AvgAnnualInterestRate obj] : ["canPurchase" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200CanPurchase obj] : ["canRedeem" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200CanRedeem obj] : ["dailyInterestPerThousand" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200DailyInterestPerThousand obj] : ["featured" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200Featured obj] : ["minPurchaseAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200MinPurchaseAmount obj] : ["productId" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200ProductId obj] : ["purchasedAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200PurchasedAmount obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200Status obj] : ["upLimit" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200UpLimit obj] : ["upLimitPerUser" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200UpLimitPerUser obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200Asset obj] : ["avgAnnualInterestRate" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200AvgAnnualInterestRate obj] : ["canPurchase" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200CanPurchase obj] : ["canRedeem" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200CanRedeem obj] : ["dailyInterestPerThousand" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200DailyInterestPerThousand obj] : ["featured" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200Featured obj] : ["minPurchaseAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200MinPurchaseAmount obj] : ["productId" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200ProductId obj] : ["purchasedAmount" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200PurchasedAmount obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200Status obj] : ["upLimit" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200UpLimit obj] : ["upLimitPerUser" Data.Aeson.Types.ToJSON..= getSapiV1LendingDailyProductListResponseBody200UpLimitPerUser obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LendingDailyProductListResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LendingDailyProductListResponseBody200" (\obj -> (((((((((((GHC.Base.pure GetSapiV1LendingDailyProductListResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "avgAnnualInterestRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "canPurchase")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "canRedeem")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "dailyInterestPerThousand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "featured")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "minPurchaseAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "productId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "purchasedAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "upLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "upLimitPerUser"))

-- | Create a new 'GetSapiV1LendingDailyProductListResponseBody200' with all required fields.
mkGetSapiV1LendingDailyProductListResponseBody200 ::
  -- | 'getSapiV1LendingDailyProductListResponseBody200Asset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyProductListResponseBody200AvgAnnualInterestRate'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyProductListResponseBody200CanPurchase'
  GHC.Types.Bool ->
  -- | 'getSapiV1LendingDailyProductListResponseBody200CanRedeem'
  GHC.Types.Bool ->
  -- | 'getSapiV1LendingDailyProductListResponseBody200DailyInterestPerThousand'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyProductListResponseBody200Featured'
  GHC.Types.Bool ->
  -- | 'getSapiV1LendingDailyProductListResponseBody200MinPurchaseAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyProductListResponseBody200ProductId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyProductListResponseBody200PurchasedAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyProductListResponseBody200Status'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyProductListResponseBody200UpLimit'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LendingDailyProductListResponseBody200UpLimitPerUser'
  Data.Text.Internal.Text ->
  GetSapiV1LendingDailyProductListResponseBody200
mkGetSapiV1LendingDailyProductListResponseBody200 getSapiV1LendingDailyProductListResponseBody200Asset getSapiV1LendingDailyProductListResponseBody200AvgAnnualInterestRate getSapiV1LendingDailyProductListResponseBody200CanPurchase getSapiV1LendingDailyProductListResponseBody200CanRedeem getSapiV1LendingDailyProductListResponseBody200DailyInterestPerThousand getSapiV1LendingDailyProductListResponseBody200Featured getSapiV1LendingDailyProductListResponseBody200MinPurchaseAmount getSapiV1LendingDailyProductListResponseBody200ProductId getSapiV1LendingDailyProductListResponseBody200PurchasedAmount getSapiV1LendingDailyProductListResponseBody200Status getSapiV1LendingDailyProductListResponseBody200UpLimit getSapiV1LendingDailyProductListResponseBody200UpLimitPerUser =
  GetSapiV1LendingDailyProductListResponseBody200
    { getSapiV1LendingDailyProductListResponseBody200Asset = getSapiV1LendingDailyProductListResponseBody200Asset,
      getSapiV1LendingDailyProductListResponseBody200AvgAnnualInterestRate = getSapiV1LendingDailyProductListResponseBody200AvgAnnualInterestRate,
      getSapiV1LendingDailyProductListResponseBody200CanPurchase = getSapiV1LendingDailyProductListResponseBody200CanPurchase,
      getSapiV1LendingDailyProductListResponseBody200CanRedeem = getSapiV1LendingDailyProductListResponseBody200CanRedeem,
      getSapiV1LendingDailyProductListResponseBody200DailyInterestPerThousand = getSapiV1LendingDailyProductListResponseBody200DailyInterestPerThousand,
      getSapiV1LendingDailyProductListResponseBody200Featured = getSapiV1LendingDailyProductListResponseBody200Featured,
      getSapiV1LendingDailyProductListResponseBody200MinPurchaseAmount = getSapiV1LendingDailyProductListResponseBody200MinPurchaseAmount,
      getSapiV1LendingDailyProductListResponseBody200ProductId = getSapiV1LendingDailyProductListResponseBody200ProductId,
      getSapiV1LendingDailyProductListResponseBody200PurchasedAmount = getSapiV1LendingDailyProductListResponseBody200PurchasedAmount,
      getSapiV1LendingDailyProductListResponseBody200Status = getSapiV1LendingDailyProductListResponseBody200Status,
      getSapiV1LendingDailyProductListResponseBody200UpLimit = getSapiV1LendingDailyProductListResponseBody200UpLimit,
      getSapiV1LendingDailyProductListResponseBody200UpLimitPerUser = getSapiV1LendingDailyProductListResponseBody200UpLimitPerUser
    }

-- | > GET /sapi/v1/lending/daily/product/list
--
-- The same as 'getSapiV1LendingDailyProductList' but accepts an explicit configuration.
getSapiV1LendingDailyProductListWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingDailyProductListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1LendingDailyProductListResponse)
getSapiV1LendingDailyProductListWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1LendingDailyProductListResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingDailyProductListResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              ([GetSapiV1LendingDailyProductListResponseBody200])
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingDailyProductListResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LendingDailyProductListResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/lending/daily/product/list")
          [ Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "featured") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryFeatured parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyProductListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyProductListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/lending/daily/product/list
--
-- The same as 'getSapiV1LendingDailyProductList' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LendingDailyProductListRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingDailyProductListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LendingDailyProductListRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/lending/daily/product/list")
        [ Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "featured") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryFeatured parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyProductListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyProductListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/lending/daily/product/list
--
-- The same as 'getSapiV1LendingDailyProductList' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LendingDailyProductListWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LendingDailyProductListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LendingDailyProductListWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/lending/daily/product/list")
          [ Binance.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "featured") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryFeatured parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LendingDailyProductListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyProductListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LendingDailyProductListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
