{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1MiningStatisticsUserStatus
module Binance.Operations.GetSapiV1MiningStatisticsUserStatus where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/mining/statistics/user/status
--
-- Weight(IP): 5
getSapiV1MiningStatisticsUserStatus ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningStatisticsUserStatusParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1MiningStatisticsUserStatusResponse)
getSapiV1MiningStatisticsUserStatus parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1MiningStatisticsUserStatusResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MiningStatisticsUserStatusResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1MiningStatisticsUserStatusResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MiningStatisticsUserStatusResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MiningStatisticsUserStatusResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/mining/statistics/user/status")
        [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningStatisticsUserStatusParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/statistics\/user\/status.GET.parameters@ in the specification.
data GetSapiV1MiningStatisticsUserStatusParameters = GetSapiV1MiningStatisticsUserStatusParameters
  { -- | queryAlgo: Represents the parameter named \'algo\'
    --
    -- Algorithm(sha256)
    getSapiV1MiningStatisticsUserStatusParametersQueryAlgo :: Data.Text.Internal.Text,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1MiningStatisticsUserStatusParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1MiningStatisticsUserStatusParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1MiningStatisticsUserStatusParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryUserName: Represents the parameter named \'userName\'
    --
    -- Mining Account
    getSapiV1MiningStatisticsUserStatusParametersQueryUserName :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningStatisticsUserStatusParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryAlgo" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusParametersQueryAlgo obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningStatisticsUserStatusParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusParametersQueryTimestamp obj] : ["queryUserName" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusParametersQueryUserName obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryAlgo" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusParametersQueryAlgo obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningStatisticsUserStatusParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusParametersQueryTimestamp obj] : ["queryUserName" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusParametersQueryUserName obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningStatisticsUserStatusParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningStatisticsUserStatusParameters" (\obj -> ((((GHC.Base.pure GetSapiV1MiningStatisticsUserStatusParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAlgo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryUserName"))

-- | Create a new 'GetSapiV1MiningStatisticsUserStatusParameters' with all required fields.
mkGetSapiV1MiningStatisticsUserStatusParameters ::
  -- | 'getSapiV1MiningStatisticsUserStatusParametersQueryAlgo'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserStatusParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserStatusParametersQueryTimestamp'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningStatisticsUserStatusParametersQueryUserName'
  Data.Text.Internal.Text ->
  GetSapiV1MiningStatisticsUserStatusParameters
mkGetSapiV1MiningStatisticsUserStatusParameters getSapiV1MiningStatisticsUserStatusParametersQueryAlgo getSapiV1MiningStatisticsUserStatusParametersQuerySignature getSapiV1MiningStatisticsUserStatusParametersQueryTimestamp getSapiV1MiningStatisticsUserStatusParametersQueryUserName =
  GetSapiV1MiningStatisticsUserStatusParameters
    { getSapiV1MiningStatisticsUserStatusParametersQueryAlgo = getSapiV1MiningStatisticsUserStatusParametersQueryAlgo,
      getSapiV1MiningStatisticsUserStatusParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1MiningStatisticsUserStatusParametersQuerySignature = getSapiV1MiningStatisticsUserStatusParametersQuerySignature,
      getSapiV1MiningStatisticsUserStatusParametersQueryTimestamp = getSapiV1MiningStatisticsUserStatusParametersQueryTimestamp,
      getSapiV1MiningStatisticsUserStatusParametersQueryUserName = getSapiV1MiningStatisticsUserStatusParametersQueryUserName
    }

-- | Represents a response of the operation 'getSapiV1MiningStatisticsUserStatus'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1MiningStatisticsUserStatusResponseError' is used.
data GetSapiV1MiningStatisticsUserStatusResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1MiningStatisticsUserStatusResponseError GHC.Base.String
  | -- | Mining account statistics
    GetSapiV1MiningStatisticsUserStatusResponse200 GetSapiV1MiningStatisticsUserStatusResponseBody200
  | -- | Bad Request
    GetSapiV1MiningStatisticsUserStatusResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1MiningStatisticsUserStatusResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/statistics\/user\/status.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1MiningStatisticsUserStatusResponseBody200 = GetSapiV1MiningStatisticsUserStatusResponseBody200
  { -- | code
    getSapiV1MiningStatisticsUserStatusResponseBody200Code :: GHC.Int.Int64,
    -- | data
    getSapiV1MiningStatisticsUserStatusResponseBody200Data :: GetSapiV1MiningStatisticsUserStatusResponseBody200Data,
    -- | msg
    getSapiV1MiningStatisticsUserStatusResponseBody200Msg :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningStatisticsUserStatusResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["code" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200Code obj] : ["data" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200Data obj] : ["msg" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200Msg obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["code" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200Code obj] : ["data" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200Data obj] : ["msg" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200Msg obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningStatisticsUserStatusResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningStatisticsUserStatusResponseBody200" (\obj -> ((GHC.Base.pure GetSapiV1MiningStatisticsUserStatusResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "msg"))

-- | Create a new 'GetSapiV1MiningStatisticsUserStatusResponseBody200' with all required fields.
mkGetSapiV1MiningStatisticsUserStatusResponseBody200 ::
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200Code'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200Data'
  GetSapiV1MiningStatisticsUserStatusResponseBody200Data ->
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200Msg'
  Data.Text.Internal.Text ->
  GetSapiV1MiningStatisticsUserStatusResponseBody200
mkGetSapiV1MiningStatisticsUserStatusResponseBody200 getSapiV1MiningStatisticsUserStatusResponseBody200Code getSapiV1MiningStatisticsUserStatusResponseBody200Data getSapiV1MiningStatisticsUserStatusResponseBody200Msg =
  GetSapiV1MiningStatisticsUserStatusResponseBody200
    { getSapiV1MiningStatisticsUserStatusResponseBody200Code = getSapiV1MiningStatisticsUserStatusResponseBody200Code,
      getSapiV1MiningStatisticsUserStatusResponseBody200Data = getSapiV1MiningStatisticsUserStatusResponseBody200Data,
      getSapiV1MiningStatisticsUserStatusResponseBody200Msg = getSapiV1MiningStatisticsUserStatusResponseBody200Msg
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/statistics\/user\/status.GET.responses.200.content.application\/json.schema.properties.data@ in the specification.
data GetSapiV1MiningStatisticsUserStatusResponseBody200Data = GetSapiV1MiningStatisticsUserStatusResponseBody200Data
  { -- | algo
    getSapiV1MiningStatisticsUserStatusResponseBody200DataAlgo :: Data.Text.Internal.Text,
    -- | dayHashRate
    getSapiV1MiningStatisticsUserStatusResponseBody200DataDayHashRate :: Data.Text.Internal.Text,
    -- | fifteenMinHashRate
    getSapiV1MiningStatisticsUserStatusResponseBody200DataFifteenMinHashRate :: Data.Text.Internal.Text,
    -- | invalidNum
    getSapiV1MiningStatisticsUserStatusResponseBody200DataInvalidNum :: GHC.Int.Int64,
    -- | profitToday
    getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday :: GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday,
    -- | profitYesterday
    getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday :: GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday,
    -- | unit
    getSapiV1MiningStatisticsUserStatusResponseBody200DataUnit :: Data.Text.Internal.Text,
    -- | userName
    getSapiV1MiningStatisticsUserStatusResponseBody200DataUserName :: Data.Text.Internal.Text,
    -- | validNum
    getSapiV1MiningStatisticsUserStatusResponseBody200DataValidNum :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningStatisticsUserStatusResponseBody200Data where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["algo" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataAlgo obj] : ["dayHashRate" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataDayHashRate obj] : ["fifteenMinHashRate" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataFifteenMinHashRate obj] : ["invalidNum" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataInvalidNum obj] : ["profitToday" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday obj] : ["profitYesterday" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday obj] : ["unit" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataUnit obj] : ["userName" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataUserName obj] : ["validNum" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataValidNum obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["algo" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataAlgo obj] : ["dayHashRate" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataDayHashRate obj] : ["fifteenMinHashRate" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataFifteenMinHashRate obj] : ["invalidNum" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataInvalidNum obj] : ["profitToday" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday obj] : ["profitYesterday" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday obj] : ["unit" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataUnit obj] : ["userName" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataUserName obj] : ["validNum" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataValidNum obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningStatisticsUserStatusResponseBody200Data where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningStatisticsUserStatusResponseBody200Data" (\obj -> ((((((((GHC.Base.pure GetSapiV1MiningStatisticsUserStatusResponseBody200Data GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "algo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "dayHashRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "fifteenMinHashRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "invalidNum")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "profitToday")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "profitYesterday")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "unit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "userName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "validNum"))

-- | Create a new 'GetSapiV1MiningStatisticsUserStatusResponseBody200Data' with all required fields.
mkGetSapiV1MiningStatisticsUserStatusResponseBody200Data ::
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200DataAlgo'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200DataDayHashRate'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200DataFifteenMinHashRate'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200DataInvalidNum'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday'
  GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday ->
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday'
  GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday ->
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200DataUnit'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200DataUserName'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200DataValidNum'
  GHC.Int.Int64 ->
  GetSapiV1MiningStatisticsUserStatusResponseBody200Data
mkGetSapiV1MiningStatisticsUserStatusResponseBody200Data getSapiV1MiningStatisticsUserStatusResponseBody200DataAlgo getSapiV1MiningStatisticsUserStatusResponseBody200DataDayHashRate getSapiV1MiningStatisticsUserStatusResponseBody200DataFifteenMinHashRate getSapiV1MiningStatisticsUserStatusResponseBody200DataInvalidNum getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday getSapiV1MiningStatisticsUserStatusResponseBody200DataUnit getSapiV1MiningStatisticsUserStatusResponseBody200DataUserName getSapiV1MiningStatisticsUserStatusResponseBody200DataValidNum =
  GetSapiV1MiningStatisticsUserStatusResponseBody200Data
    { getSapiV1MiningStatisticsUserStatusResponseBody200DataAlgo = getSapiV1MiningStatisticsUserStatusResponseBody200DataAlgo,
      getSapiV1MiningStatisticsUserStatusResponseBody200DataDayHashRate = getSapiV1MiningStatisticsUserStatusResponseBody200DataDayHashRate,
      getSapiV1MiningStatisticsUserStatusResponseBody200DataFifteenMinHashRate = getSapiV1MiningStatisticsUserStatusResponseBody200DataFifteenMinHashRate,
      getSapiV1MiningStatisticsUserStatusResponseBody200DataInvalidNum = getSapiV1MiningStatisticsUserStatusResponseBody200DataInvalidNum,
      getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday = getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday,
      getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday = getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday,
      getSapiV1MiningStatisticsUserStatusResponseBody200DataUnit = getSapiV1MiningStatisticsUserStatusResponseBody200DataUnit,
      getSapiV1MiningStatisticsUserStatusResponseBody200DataUserName = getSapiV1MiningStatisticsUserStatusResponseBody200DataUserName,
      getSapiV1MiningStatisticsUserStatusResponseBody200DataValidNum = getSapiV1MiningStatisticsUserStatusResponseBody200DataValidNum
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/statistics\/user\/status.GET.responses.200.content.application\/json.schema.properties.data.properties.profitToday@ in the specification.
data GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday = GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday
  { -- | BCH
    getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBCH :: Data.Text.Internal.Text,
    -- | BSV
    getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBSV :: Data.Text.Internal.Text,
    -- | BTC
    getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBTC :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["BCH" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBCH obj] : ["BSV" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBSV obj] : ["BTC" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBTC obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["BCH" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBCH obj] : ["BSV" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBSV obj] : ["BTC" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBTC obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday" (\obj -> ((GHC.Base.pure GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "BCH")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "BSV")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "BTC"))

-- | Create a new 'GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday' with all required fields.
mkGetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday ::
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBCH'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBSV'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBTC'
  Data.Text.Internal.Text ->
  GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday
mkGetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBCH getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBSV getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBTC =
  GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitToday
    { getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBCH = getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBCH,
      getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBSV = getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBSV,
      getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBTC = getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitTodayBTC
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/statistics\/user\/status.GET.responses.200.content.application\/json.schema.properties.data.properties.profitYesterday@ in the specification.
data GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday = GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday
  { -- | BCH
    getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBCH :: Data.Text.Internal.Text,
    -- | BSV
    getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBSV :: Data.Text.Internal.Text,
    -- | BTC
    getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBTC :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["BCH" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBCH obj] : ["BSV" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBSV obj] : ["BTC" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBTC obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["BCH" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBCH obj] : ["BSV" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBSV obj] : ["BTC" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBTC obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday" (\obj -> ((GHC.Base.pure GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "BCH")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "BSV")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "BTC"))

-- | Create a new 'GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday' with all required fields.
mkGetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday ::
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBCH'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBSV'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBTC'
  Data.Text.Internal.Text ->
  GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday
mkGetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBCH getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBSV getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBTC =
  GetSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterday
    { getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBCH = getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBCH,
      getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBSV = getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBSV,
      getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBTC = getSapiV1MiningStatisticsUserStatusResponseBody200DataProfitYesterdayBTC
    }

-- | > GET /sapi/v1/mining/statistics/user/status
--
-- The same as 'getSapiV1MiningStatisticsUserStatus' but accepts an explicit configuration.
getSapiV1MiningStatisticsUserStatusWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningStatisticsUserStatusParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1MiningStatisticsUserStatusResponse)
getSapiV1MiningStatisticsUserStatusWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1MiningStatisticsUserStatusResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MiningStatisticsUserStatusResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1MiningStatisticsUserStatusResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MiningStatisticsUserStatusResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MiningStatisticsUserStatusResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/mining/statistics/user/status")
          [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningStatisticsUserStatusParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/mining/statistics/user/status
--
-- The same as 'getSapiV1MiningStatisticsUserStatus' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MiningStatisticsUserStatusRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningStatisticsUserStatusParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MiningStatisticsUserStatusRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/mining/statistics/user/status")
        [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningStatisticsUserStatusParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/mining/statistics/user/status
--
-- The same as 'getSapiV1MiningStatisticsUserStatus' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MiningStatisticsUserStatusWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningStatisticsUserStatusParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MiningStatisticsUserStatusWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/mining/statistics/user/status")
          [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningStatisticsUserStatusParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserStatusParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
