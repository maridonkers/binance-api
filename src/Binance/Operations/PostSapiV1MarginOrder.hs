{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postSapiV1MarginOrder
module Binance.Operations.PostSapiV1MarginOrder where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /sapi/v1/margin/order
--
-- Post a new order for margin account.
--
-- Weight(UID): 6
postSapiV1MarginOrder ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1MarginOrderParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response PostSapiV1MarginOrderResponse)
postSapiV1MarginOrder parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostSapiV1MarginOrderResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1MarginOrderResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PostSapiV1MarginOrderResponseBody200Variants
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1MarginOrderResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1MarginOrderResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/margin/order")
        [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "side") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQuerySide parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "quantity") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQueryQuantity parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "quoteOrderQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryQuoteOrderQty parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "price") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryPrice parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopPrice") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryStopPrice parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "newClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryNewClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "icebergQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryIcebergQty parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "newOrderRespType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryNewOrderRespType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "sideEffectType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQuerySideEffectType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timeInForce") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryTimeInForce parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/order.POST.parameters@ in the specification.
data PostSapiV1MarginOrderParameters = PostSapiV1MarginOrderParameters
  { -- | queryIcebergQty: Represents the parameter named \'icebergQty\'
    --
    -- Used with LIMIT, STOP_LOSS_LIMIT, and TAKE_PROFIT_LIMIT to create an iceberg order.
    postSapiV1MarginOrderParametersQueryIcebergQty :: (GHC.Maybe.Maybe GHC.Types.Double),
    -- | queryIsIsolated: Represents the parameter named \'isIsolated\'
    --
    -- * \`TRUE\` - For isolated margin
    -- * \`FALSE\` - Default, not for isolated margin
    postSapiV1MarginOrderParametersQueryIsIsolated :: (GHC.Maybe.Maybe PostSapiV1MarginOrderParametersQueryIsIsolated),
    -- | queryNewClientOrderId: Represents the parameter named \'newClientOrderId\'
    --
    -- Used to uniquely identify this cancel. Automatically generated by default
    postSapiV1MarginOrderParametersQueryNewClientOrderId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryNewOrderRespType: Represents the parameter named \'newOrderRespType\'
    --
    -- Set the response JSON.
    postSapiV1MarginOrderParametersQueryNewOrderRespType :: (GHC.Maybe.Maybe PostSapiV1MarginOrderParametersQueryNewOrderRespType),
    -- | queryPrice: Represents the parameter named \'price\'
    --
    -- Order price
    postSapiV1MarginOrderParametersQueryPrice :: (GHC.Maybe.Maybe GHC.Types.Double),
    -- | queryQuantity: Represents the parameter named \'quantity\'
    postSapiV1MarginOrderParametersQueryQuantity :: GHC.Types.Double,
    -- | queryQuoteOrderQty: Represents the parameter named \'quoteOrderQty\'
    --
    -- Quote quantity
    postSapiV1MarginOrderParametersQueryQuoteOrderQty :: (GHC.Maybe.Maybe GHC.Types.Double),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    postSapiV1MarginOrderParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySide: Represents the parameter named \'side\'
    postSapiV1MarginOrderParametersQuerySide :: PostSapiV1MarginOrderParametersQuerySide,
    -- | querySideEffectType: Represents the parameter named \'sideEffectType\'
    --
    -- Default \`NO_SIDE_EFFECT\`
    postSapiV1MarginOrderParametersQuerySideEffectType :: (GHC.Maybe.Maybe PostSapiV1MarginOrderParametersQuerySideEffectType),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    postSapiV1MarginOrderParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStopPrice: Represents the parameter named \'stopPrice\'
    --
    -- Used with STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, and TAKE_PROFIT_LIMIT orders.
    postSapiV1MarginOrderParametersQueryStopPrice :: (GHC.Maybe.Maybe GHC.Types.Double),
    -- | querySymbol: Represents the parameter named \'symbol\'
    --
    -- Trading symbol, e.g. BNBUSDT
    postSapiV1MarginOrderParametersQuerySymbol :: Data.Text.Internal.Text,
    -- | queryTimeInForce: Represents the parameter named \'timeInForce\'
    --
    -- Order time in force
    postSapiV1MarginOrderParametersQueryTimeInForce :: (GHC.Maybe.Maybe PostSapiV1MarginOrderParametersQueryTimeInForce),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    postSapiV1MarginOrderParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryType: Represents the parameter named \'type\'
    --
    -- Order type
    postSapiV1MarginOrderParametersQueryType :: PostSapiV1MarginOrderParametersQueryType
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1MarginOrderParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIcebergQty" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryIcebergQty obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsIsolated" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryIsIsolated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryNewClientOrderId" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryNewClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryNewOrderRespType" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryNewOrderRespType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPrice" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryPrice obj) : ["queryQuantity" Data.Aeson.Types.ToJSON..= postSapiV1MarginOrderParametersQueryQuantity obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryQuoteOrderQty" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryQuoteOrderQty obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryRecvWindow obj) : ["querySide" Data.Aeson.Types.ToJSON..= postSapiV1MarginOrderParametersQuerySide obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySideEffectType" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQuerySideEffectType obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1MarginOrderParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStopPrice" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryStopPrice obj) : ["querySymbol" Data.Aeson.Types.ToJSON..= postSapiV1MarginOrderParametersQuerySymbol obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTimeInForce" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryTimeInForce obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1MarginOrderParametersQueryTimestamp obj] : ["queryType" Data.Aeson.Types.ToJSON..= postSapiV1MarginOrderParametersQueryType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIcebergQty" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryIcebergQty obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsIsolated" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryIsIsolated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryNewClientOrderId" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryNewClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryNewOrderRespType" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryNewOrderRespType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPrice" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryPrice obj) : ["queryQuantity" Data.Aeson.Types.ToJSON..= postSapiV1MarginOrderParametersQueryQuantity obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryQuoteOrderQty" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryQuoteOrderQty obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryRecvWindow obj) : ["querySide" Data.Aeson.Types.ToJSON..= postSapiV1MarginOrderParametersQuerySide obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySideEffectType" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQuerySideEffectType obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1MarginOrderParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStopPrice" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryStopPrice obj) : ["querySymbol" Data.Aeson.Types.ToJSON..= postSapiV1MarginOrderParametersQuerySymbol obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTimeInForce" Data.Aeson.Types.ToJSON..=)) (postSapiV1MarginOrderParametersQueryTimeInForce obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1MarginOrderParametersQueryTimestamp obj] : ["queryType" Data.Aeson.Types.ToJSON..= postSapiV1MarginOrderParametersQueryType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1MarginOrderParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1MarginOrderParameters" (\obj -> (((((((((((((((GHC.Base.pure PostSapiV1MarginOrderParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryIcebergQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryIsIsolated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryNewClientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryNewOrderRespType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPrice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryQuantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryQuoteOrderQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySide")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySideEffectType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStopPrice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySymbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryTimeInForce")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryType"))

-- | Create a new 'PostSapiV1MarginOrderParameters' with all required fields.
mkPostSapiV1MarginOrderParameters ::
  -- | 'postSapiV1MarginOrderParametersQueryQuantity'
  GHC.Types.Double ->
  -- | 'postSapiV1MarginOrderParametersQuerySide'
  PostSapiV1MarginOrderParametersQuerySide ->
  -- | 'postSapiV1MarginOrderParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1MarginOrderParametersQuerySymbol'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1MarginOrderParametersQueryTimestamp'
  GHC.Int.Int64 ->
  -- | 'postSapiV1MarginOrderParametersQueryType'
  PostSapiV1MarginOrderParametersQueryType ->
  PostSapiV1MarginOrderParameters
mkPostSapiV1MarginOrderParameters postSapiV1MarginOrderParametersQueryQuantity postSapiV1MarginOrderParametersQuerySide postSapiV1MarginOrderParametersQuerySignature postSapiV1MarginOrderParametersQuerySymbol postSapiV1MarginOrderParametersQueryTimestamp postSapiV1MarginOrderParametersQueryType =
  PostSapiV1MarginOrderParameters
    { postSapiV1MarginOrderParametersQueryIcebergQty = GHC.Maybe.Nothing,
      postSapiV1MarginOrderParametersQueryIsIsolated = GHC.Maybe.Nothing,
      postSapiV1MarginOrderParametersQueryNewClientOrderId = GHC.Maybe.Nothing,
      postSapiV1MarginOrderParametersQueryNewOrderRespType = GHC.Maybe.Nothing,
      postSapiV1MarginOrderParametersQueryPrice = GHC.Maybe.Nothing,
      postSapiV1MarginOrderParametersQueryQuantity = postSapiV1MarginOrderParametersQueryQuantity,
      postSapiV1MarginOrderParametersQueryQuoteOrderQty = GHC.Maybe.Nothing,
      postSapiV1MarginOrderParametersQueryRecvWindow = GHC.Maybe.Nothing,
      postSapiV1MarginOrderParametersQuerySide = postSapiV1MarginOrderParametersQuerySide,
      postSapiV1MarginOrderParametersQuerySideEffectType = GHC.Maybe.Nothing,
      postSapiV1MarginOrderParametersQuerySignature = postSapiV1MarginOrderParametersQuerySignature,
      postSapiV1MarginOrderParametersQueryStopPrice = GHC.Maybe.Nothing,
      postSapiV1MarginOrderParametersQuerySymbol = postSapiV1MarginOrderParametersQuerySymbol,
      postSapiV1MarginOrderParametersQueryTimeInForce = GHC.Maybe.Nothing,
      postSapiV1MarginOrderParametersQueryTimestamp = postSapiV1MarginOrderParametersQueryTimestamp,
      postSapiV1MarginOrderParametersQueryType = postSapiV1MarginOrderParametersQueryType
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/margin\/order.POST.parameters.properties.queryIsIsolated@ in the specification.
--
-- Represents the parameter named \'isIsolated\'
--
-- * \`TRUE\` - For isolated margin
-- * \`FALSE\` - Default, not for isolated margin
data PostSapiV1MarginOrderParametersQueryIsIsolated
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostSapiV1MarginOrderParametersQueryIsIsolatedOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostSapiV1MarginOrderParametersQueryIsIsolatedTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"TRUE"@
    PostSapiV1MarginOrderParametersQueryIsIsolatedEnumTRUE
  | -- | Represents the JSON value @"FALSE"@
    PostSapiV1MarginOrderParametersQueryIsIsolatedEnumFALSE
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1MarginOrderParametersQueryIsIsolated where
  toJSON (PostSapiV1MarginOrderParametersQueryIsIsolatedOther val) = val
  toJSON (PostSapiV1MarginOrderParametersQueryIsIsolatedTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostSapiV1MarginOrderParametersQueryIsIsolatedEnumTRUE) = "TRUE"
  toJSON (PostSapiV1MarginOrderParametersQueryIsIsolatedEnumFALSE) = "FALSE"

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1MarginOrderParametersQueryIsIsolated where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "TRUE" -> PostSapiV1MarginOrderParametersQueryIsIsolatedEnumTRUE
            | val GHC.Classes.== "FALSE" -> PostSapiV1MarginOrderParametersQueryIsIsolatedEnumFALSE
            | GHC.Base.otherwise -> PostSapiV1MarginOrderParametersQueryIsIsolatedOther val
      )

-- | Defines the enum schema located at @paths.\/sapi\/v1\/margin\/order.POST.parameters.properties.queryNewOrderRespType@ in the specification.
--
-- Represents the parameter named \'newOrderRespType\'
--
-- Set the response JSON.
data PostSapiV1MarginOrderParametersQueryNewOrderRespType
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostSapiV1MarginOrderParametersQueryNewOrderRespTypeOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostSapiV1MarginOrderParametersQueryNewOrderRespTypeTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"ACK"@
    PostSapiV1MarginOrderParametersQueryNewOrderRespTypeEnumACK
  | -- | Represents the JSON value @"RESULT"@
    PostSapiV1MarginOrderParametersQueryNewOrderRespTypeEnumRESULT
  | -- | Represents the JSON value @"FULL"@
    PostSapiV1MarginOrderParametersQueryNewOrderRespTypeEnumFULL
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1MarginOrderParametersQueryNewOrderRespType where
  toJSON (PostSapiV1MarginOrderParametersQueryNewOrderRespTypeOther val) = val
  toJSON (PostSapiV1MarginOrderParametersQueryNewOrderRespTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostSapiV1MarginOrderParametersQueryNewOrderRespTypeEnumACK) = "ACK"
  toJSON (PostSapiV1MarginOrderParametersQueryNewOrderRespTypeEnumRESULT) = "RESULT"
  toJSON (PostSapiV1MarginOrderParametersQueryNewOrderRespTypeEnumFULL) = "FULL"

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1MarginOrderParametersQueryNewOrderRespType where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "ACK" -> PostSapiV1MarginOrderParametersQueryNewOrderRespTypeEnumACK
            | val GHC.Classes.== "RESULT" -> PostSapiV1MarginOrderParametersQueryNewOrderRespTypeEnumRESULT
            | val GHC.Classes.== "FULL" -> PostSapiV1MarginOrderParametersQueryNewOrderRespTypeEnumFULL
            | GHC.Base.otherwise -> PostSapiV1MarginOrderParametersQueryNewOrderRespTypeOther val
      )

-- | Defines the enum schema located at @paths.\/sapi\/v1\/margin\/order.POST.parameters.properties.querySide@ in the specification.
--
-- Represents the parameter named \'side\'
data PostSapiV1MarginOrderParametersQuerySide
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostSapiV1MarginOrderParametersQuerySideOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostSapiV1MarginOrderParametersQuerySideTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"SELL"@
    PostSapiV1MarginOrderParametersQuerySideEnumSELL
  | -- | Represents the JSON value @"BUY"@
    PostSapiV1MarginOrderParametersQuerySideEnumBUY
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1MarginOrderParametersQuerySide where
  toJSON (PostSapiV1MarginOrderParametersQuerySideOther val) = val
  toJSON (PostSapiV1MarginOrderParametersQuerySideTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostSapiV1MarginOrderParametersQuerySideEnumSELL) = "SELL"
  toJSON (PostSapiV1MarginOrderParametersQuerySideEnumBUY) = "BUY"

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1MarginOrderParametersQuerySide where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "SELL" -> PostSapiV1MarginOrderParametersQuerySideEnumSELL
            | val GHC.Classes.== "BUY" -> PostSapiV1MarginOrderParametersQuerySideEnumBUY
            | GHC.Base.otherwise -> PostSapiV1MarginOrderParametersQuerySideOther val
      )

-- | Defines the enum schema located at @paths.\/sapi\/v1\/margin\/order.POST.parameters.properties.querySideEffectType@ in the specification.
--
-- Represents the parameter named \'sideEffectType\'
--
-- Default \`NO_SIDE_EFFECT\`
data PostSapiV1MarginOrderParametersQuerySideEffectType
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostSapiV1MarginOrderParametersQuerySideEffectTypeOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostSapiV1MarginOrderParametersQuerySideEffectTypeTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"NO_SIDE_EFFECT"@
    PostSapiV1MarginOrderParametersQuerySideEffectTypeEnumNOSIDEEFFECT
  | -- | Represents the JSON value @"MARGIN_BUY"@
    PostSapiV1MarginOrderParametersQuerySideEffectTypeEnumMARGINBUY
  | -- | Represents the JSON value @"AUTO_REPAY"@
    PostSapiV1MarginOrderParametersQuerySideEffectTypeEnumAUTOREPAY
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1MarginOrderParametersQuerySideEffectType where
  toJSON (PostSapiV1MarginOrderParametersQuerySideEffectTypeOther val) = val
  toJSON (PostSapiV1MarginOrderParametersQuerySideEffectTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostSapiV1MarginOrderParametersQuerySideEffectTypeEnumNOSIDEEFFECT) = "NO_SIDE_EFFECT"
  toJSON (PostSapiV1MarginOrderParametersQuerySideEffectTypeEnumMARGINBUY) = "MARGIN_BUY"
  toJSON (PostSapiV1MarginOrderParametersQuerySideEffectTypeEnumAUTOREPAY) = "AUTO_REPAY"

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1MarginOrderParametersQuerySideEffectType where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "NO_SIDE_EFFECT" -> PostSapiV1MarginOrderParametersQuerySideEffectTypeEnumNOSIDEEFFECT
            | val GHC.Classes.== "MARGIN_BUY" -> PostSapiV1MarginOrderParametersQuerySideEffectTypeEnumMARGINBUY
            | val GHC.Classes.== "AUTO_REPAY" -> PostSapiV1MarginOrderParametersQuerySideEffectTypeEnumAUTOREPAY
            | GHC.Base.otherwise -> PostSapiV1MarginOrderParametersQuerySideEffectTypeOther val
      )

-- | Defines the enum schema located at @paths.\/sapi\/v1\/margin\/order.POST.parameters.properties.queryTimeInForce@ in the specification.
--
-- Represents the parameter named \'timeInForce\'
--
-- Order time in force
data PostSapiV1MarginOrderParametersQueryTimeInForce
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostSapiV1MarginOrderParametersQueryTimeInForceOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostSapiV1MarginOrderParametersQueryTimeInForceTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"GTC"@
    PostSapiV1MarginOrderParametersQueryTimeInForceEnumGTC
  | -- | Represents the JSON value @"IOC"@
    PostSapiV1MarginOrderParametersQueryTimeInForceEnumIOC
  | -- | Represents the JSON value @"FOK"@
    PostSapiV1MarginOrderParametersQueryTimeInForceEnumFOK
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1MarginOrderParametersQueryTimeInForce where
  toJSON (PostSapiV1MarginOrderParametersQueryTimeInForceOther val) = val
  toJSON (PostSapiV1MarginOrderParametersQueryTimeInForceTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostSapiV1MarginOrderParametersQueryTimeInForceEnumGTC) = "GTC"
  toJSON (PostSapiV1MarginOrderParametersQueryTimeInForceEnumIOC) = "IOC"
  toJSON (PostSapiV1MarginOrderParametersQueryTimeInForceEnumFOK) = "FOK"

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1MarginOrderParametersQueryTimeInForce where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "GTC" -> PostSapiV1MarginOrderParametersQueryTimeInForceEnumGTC
            | val GHC.Classes.== "IOC" -> PostSapiV1MarginOrderParametersQueryTimeInForceEnumIOC
            | val GHC.Classes.== "FOK" -> PostSapiV1MarginOrderParametersQueryTimeInForceEnumFOK
            | GHC.Base.otherwise -> PostSapiV1MarginOrderParametersQueryTimeInForceOther val
      )

-- | Defines the enum schema located at @paths.\/sapi\/v1\/margin\/order.POST.parameters.properties.queryType@ in the specification.
--
-- Represents the parameter named \'type\'
--
-- Order type
data PostSapiV1MarginOrderParametersQueryType
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostSapiV1MarginOrderParametersQueryTypeOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostSapiV1MarginOrderParametersQueryTypeTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"LIMIT"@
    PostSapiV1MarginOrderParametersQueryTypeEnumLIMIT
  | -- | Represents the JSON value @"MARKET"@
    PostSapiV1MarginOrderParametersQueryTypeEnumMARKET
  | -- | Represents the JSON value @"STOP_LOSS"@
    PostSapiV1MarginOrderParametersQueryTypeEnumSTOPLOSS
  | -- | Represents the JSON value @"STOP_LOSS_LIMIT"@
    PostSapiV1MarginOrderParametersQueryTypeEnumSTOPLOSSLIMIT
  | -- | Represents the JSON value @"TAKE_PROFIT"@
    PostSapiV1MarginOrderParametersQueryTypeEnumTAKEPROFIT
  | -- | Represents the JSON value @"TAKE_PROFIT_LIMIT"@
    PostSapiV1MarginOrderParametersQueryTypeEnumTAKEPROFITLIMIT
  | -- | Represents the JSON value @"LIMIT_MAKER"@
    PostSapiV1MarginOrderParametersQueryTypeEnumLIMITMAKER
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1MarginOrderParametersQueryType where
  toJSON (PostSapiV1MarginOrderParametersQueryTypeOther val) = val
  toJSON (PostSapiV1MarginOrderParametersQueryTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostSapiV1MarginOrderParametersQueryTypeEnumLIMIT) = "LIMIT"
  toJSON (PostSapiV1MarginOrderParametersQueryTypeEnumMARKET) = "MARKET"
  toJSON (PostSapiV1MarginOrderParametersQueryTypeEnumSTOPLOSS) = "STOP_LOSS"
  toJSON (PostSapiV1MarginOrderParametersQueryTypeEnumSTOPLOSSLIMIT) = "STOP_LOSS_LIMIT"
  toJSON (PostSapiV1MarginOrderParametersQueryTypeEnumTAKEPROFIT) = "TAKE_PROFIT"
  toJSON (PostSapiV1MarginOrderParametersQueryTypeEnumTAKEPROFITLIMIT) = "TAKE_PROFIT_LIMIT"
  toJSON (PostSapiV1MarginOrderParametersQueryTypeEnumLIMITMAKER) = "LIMIT_MAKER"

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1MarginOrderParametersQueryType where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "LIMIT" -> PostSapiV1MarginOrderParametersQueryTypeEnumLIMIT
            | val GHC.Classes.== "MARKET" -> PostSapiV1MarginOrderParametersQueryTypeEnumMARKET
            | val GHC.Classes.== "STOP_LOSS" -> PostSapiV1MarginOrderParametersQueryTypeEnumSTOPLOSS
            | val GHC.Classes.== "STOP_LOSS_LIMIT" -> PostSapiV1MarginOrderParametersQueryTypeEnumSTOPLOSSLIMIT
            | val GHC.Classes.== "TAKE_PROFIT" -> PostSapiV1MarginOrderParametersQueryTypeEnumTAKEPROFIT
            | val GHC.Classes.== "TAKE_PROFIT_LIMIT" -> PostSapiV1MarginOrderParametersQueryTypeEnumTAKEPROFITLIMIT
            | val GHC.Classes.== "LIMIT_MAKER" -> PostSapiV1MarginOrderParametersQueryTypeEnumLIMITMAKER
            | GHC.Base.otherwise -> PostSapiV1MarginOrderParametersQueryTypeOther val
      )

-- | Represents a response of the operation 'postSapiV1MarginOrder'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostSapiV1MarginOrderResponseError' is used.
data PostSapiV1MarginOrderResponse
  = -- | Means either no matching case available or a parse error
    PostSapiV1MarginOrderResponseError GHC.Base.String
  | -- | Margin order info
    PostSapiV1MarginOrderResponse200 PostSapiV1MarginOrderResponseBody200Variants
  | -- | Bad Request
    PostSapiV1MarginOrderResponse400 Error
  | -- | Unauthorized Request
    PostSapiV1MarginOrderResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the oneOf schema located at @paths.\/sapi\/v1\/margin\/order.POST.responses.200.content.application\/json.schema.oneOf@ in the specification.
data PostSapiV1MarginOrderResponseBody200Variants
  = PostSapiV1MarginOrderResponseBody200Variant1 MarginOrderResponseAck
  | PostSapiV1MarginOrderResponseBody200Variant2 MarginOrderResponseResult
  | PostSapiV1MarginOrderResponseBody200Variant3 MarginOrderResponseFull
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1MarginOrderResponseBody200Variants where
  toJSON (PostSapiV1MarginOrderResponseBody200Variant1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostSapiV1MarginOrderResponseBody200Variant2 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostSapiV1MarginOrderResponseBody200Variant3 a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1MarginOrderResponseBody200Variants where
  parseJSON val = case (PostSapiV1MarginOrderResponseBody200Variant1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((PostSapiV1MarginOrderResponseBody200Variant2 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((PostSapiV1MarginOrderResponseBody200Variant3 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | > POST /sapi/v1/margin/order
--
-- The same as 'postSapiV1MarginOrder' but accepts an explicit configuration.
postSapiV1MarginOrderWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1MarginOrderParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response PostSapiV1MarginOrderResponse)
postSapiV1MarginOrderWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either PostSapiV1MarginOrderResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1MarginOrderResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              PostSapiV1MarginOrderResponseBody200Variants
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1MarginOrderResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1MarginOrderResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/margin/order")
          [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "side") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQuerySide parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "quantity") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQueryQuantity parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "quoteOrderQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryQuoteOrderQty parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "price") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryPrice parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopPrice") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryStopPrice parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "newClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryNewClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "icebergQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryIcebergQty parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "newOrderRespType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryNewOrderRespType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "sideEffectType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQuerySideEffectType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timeInForce") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryTimeInForce parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > POST /sapi/v1/margin/order
--
-- The same as 'postSapiV1MarginOrder' but returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1MarginOrderRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1MarginOrderParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1MarginOrderRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/margin/order")
        [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "side") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQuerySide parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "quantity") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQueryQuantity parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "quoteOrderQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryQuoteOrderQty parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "price") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryPrice parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopPrice") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryStopPrice parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "newClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryNewClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "icebergQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryIcebergQty parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "newOrderRespType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryNewOrderRespType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "sideEffectType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQuerySideEffectType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timeInForce") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryTimeInForce parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > POST /sapi/v1/margin/order
--
-- The same as 'postSapiV1MarginOrder' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1MarginOrderWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1MarginOrderParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1MarginOrderWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/margin/order")
          [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "side") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQuerySide parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "type") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQueryType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "quantity") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQueryQuantity parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "quoteOrderQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryQuoteOrderQty parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "price") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryPrice parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopPrice") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryStopPrice parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "newClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryNewClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "icebergQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryIcebergQty parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "newOrderRespType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryNewOrderRespType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "sideEffectType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQuerySideEffectType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timeInForce") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryTimeInForce parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MarginOrderParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MarginOrderParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
