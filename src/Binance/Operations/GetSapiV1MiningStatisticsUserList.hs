{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1MiningStatisticsUserList
module Binance.Operations.GetSapiV1MiningStatisticsUserList where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/mining/statistics/user/list
--
-- Weight(IP): 5
getSapiV1MiningStatisticsUserList ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningStatisticsUserListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1MiningStatisticsUserListResponse)
getSapiV1MiningStatisticsUserList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1MiningStatisticsUserListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MiningStatisticsUserListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1MiningStatisticsUserListResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MiningStatisticsUserListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MiningStatisticsUserListResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/mining/statistics/user/list")
        [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningStatisticsUserListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/statistics\/user\/list.GET.parameters@ in the specification.
data GetSapiV1MiningStatisticsUserListParameters = GetSapiV1MiningStatisticsUserListParameters
  { -- | queryAlgo: Represents the parameter named \'algo\'
    --
    -- Algorithm(sha256)
    getSapiV1MiningStatisticsUserListParametersQueryAlgo :: Data.Text.Internal.Text,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1MiningStatisticsUserListParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1MiningStatisticsUserListParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1MiningStatisticsUserListParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryUserName: Represents the parameter named \'userName\'
    --
    -- Mining Account
    getSapiV1MiningStatisticsUserListParametersQueryUserName :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningStatisticsUserListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryAlgo" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListParametersQueryAlgo obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningStatisticsUserListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListParametersQueryTimestamp obj] : ["queryUserName" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListParametersQueryUserName obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryAlgo" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListParametersQueryAlgo obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MiningStatisticsUserListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListParametersQueryTimestamp obj] : ["queryUserName" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListParametersQueryUserName obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningStatisticsUserListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningStatisticsUserListParameters" (\obj -> ((((GHC.Base.pure GetSapiV1MiningStatisticsUserListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAlgo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryUserName"))

-- | Create a new 'GetSapiV1MiningStatisticsUserListParameters' with all required fields.
mkGetSapiV1MiningStatisticsUserListParameters ::
  -- | 'getSapiV1MiningStatisticsUserListParametersQueryAlgo'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserListParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserListParametersQueryTimestamp'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningStatisticsUserListParametersQueryUserName'
  Data.Text.Internal.Text ->
  GetSapiV1MiningStatisticsUserListParameters
mkGetSapiV1MiningStatisticsUserListParameters getSapiV1MiningStatisticsUserListParametersQueryAlgo getSapiV1MiningStatisticsUserListParametersQuerySignature getSapiV1MiningStatisticsUserListParametersQueryTimestamp getSapiV1MiningStatisticsUserListParametersQueryUserName =
  GetSapiV1MiningStatisticsUserListParameters
    { getSapiV1MiningStatisticsUserListParametersQueryAlgo = getSapiV1MiningStatisticsUserListParametersQueryAlgo,
      getSapiV1MiningStatisticsUserListParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1MiningStatisticsUserListParametersQuerySignature = getSapiV1MiningStatisticsUserListParametersQuerySignature,
      getSapiV1MiningStatisticsUserListParametersQueryTimestamp = getSapiV1MiningStatisticsUserListParametersQueryTimestamp,
      getSapiV1MiningStatisticsUserListParametersQueryUserName = getSapiV1MiningStatisticsUserListParametersQueryUserName
    }

-- | Represents a response of the operation 'getSapiV1MiningStatisticsUserList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1MiningStatisticsUserListResponseError' is used.
data GetSapiV1MiningStatisticsUserListResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1MiningStatisticsUserListResponseError GHC.Base.String
  | -- | List of mining accounts
    GetSapiV1MiningStatisticsUserListResponse200 GetSapiV1MiningStatisticsUserListResponseBody200
  | -- | Bad Request
    GetSapiV1MiningStatisticsUserListResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1MiningStatisticsUserListResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/statistics\/user\/list.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1MiningStatisticsUserListResponseBody200 = GetSapiV1MiningStatisticsUserListResponseBody200
  { -- | code
    getSapiV1MiningStatisticsUserListResponseBody200Code :: GHC.Int.Int64,
    -- | data
    getSapiV1MiningStatisticsUserListResponseBody200Data :: ([GetSapiV1MiningStatisticsUserListResponseBody200Data]),
    -- | msg
    getSapiV1MiningStatisticsUserListResponseBody200Msg :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningStatisticsUserListResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["code" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200Code obj] : ["data" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200Data obj] : ["msg" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200Msg obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["code" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200Code obj] : ["data" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200Data obj] : ["msg" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200Msg obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningStatisticsUserListResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningStatisticsUserListResponseBody200" (\obj -> ((GHC.Base.pure GetSapiV1MiningStatisticsUserListResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "msg"))

-- | Create a new 'GetSapiV1MiningStatisticsUserListResponseBody200' with all required fields.
mkGetSapiV1MiningStatisticsUserListResponseBody200 ::
  -- | 'getSapiV1MiningStatisticsUserListResponseBody200Code'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MiningStatisticsUserListResponseBody200Data'
  [GetSapiV1MiningStatisticsUserListResponseBody200Data] ->
  -- | 'getSapiV1MiningStatisticsUserListResponseBody200Msg'
  Data.Text.Internal.Text ->
  GetSapiV1MiningStatisticsUserListResponseBody200
mkGetSapiV1MiningStatisticsUserListResponseBody200 getSapiV1MiningStatisticsUserListResponseBody200Code getSapiV1MiningStatisticsUserListResponseBody200Data getSapiV1MiningStatisticsUserListResponseBody200Msg =
  GetSapiV1MiningStatisticsUserListResponseBody200
    { getSapiV1MiningStatisticsUserListResponseBody200Code = getSapiV1MiningStatisticsUserListResponseBody200Code,
      getSapiV1MiningStatisticsUserListResponseBody200Data = getSapiV1MiningStatisticsUserListResponseBody200Data,
      getSapiV1MiningStatisticsUserListResponseBody200Msg = getSapiV1MiningStatisticsUserListResponseBody200Msg
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/statistics\/user\/list.GET.responses.200.content.application\/json.schema.properties.data.items@ in the specification.
data GetSapiV1MiningStatisticsUserListResponseBody200Data = GetSapiV1MiningStatisticsUserListResponseBody200Data
  { -- | list
    getSapiV1MiningStatisticsUserListResponseBody200DataList :: ([GetSapiV1MiningStatisticsUserListResponseBody200DataList]),
    -- | type
    getSapiV1MiningStatisticsUserListResponseBody200DataType :: Data.Text.Internal.Text,
    -- | userName
    getSapiV1MiningStatisticsUserListResponseBody200DataUserName :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningStatisticsUserListResponseBody200Data where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["list" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200DataList obj] : ["type" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200DataType obj] : ["userName" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200DataUserName obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["list" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200DataList obj] : ["type" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200DataType obj] : ["userName" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200DataUserName obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningStatisticsUserListResponseBody200Data where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningStatisticsUserListResponseBody200Data" (\obj -> ((GHC.Base.pure GetSapiV1MiningStatisticsUserListResponseBody200Data GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "list")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "userName"))

-- | Create a new 'GetSapiV1MiningStatisticsUserListResponseBody200Data' with all required fields.
mkGetSapiV1MiningStatisticsUserListResponseBody200Data ::
  -- | 'getSapiV1MiningStatisticsUserListResponseBody200DataList'
  [GetSapiV1MiningStatisticsUserListResponseBody200DataList] ->
  -- | 'getSapiV1MiningStatisticsUserListResponseBody200DataType'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserListResponseBody200DataUserName'
  Data.Text.Internal.Text ->
  GetSapiV1MiningStatisticsUserListResponseBody200Data
mkGetSapiV1MiningStatisticsUserListResponseBody200Data getSapiV1MiningStatisticsUserListResponseBody200DataList getSapiV1MiningStatisticsUserListResponseBody200DataType getSapiV1MiningStatisticsUserListResponseBody200DataUserName =
  GetSapiV1MiningStatisticsUserListResponseBody200Data
    { getSapiV1MiningStatisticsUserListResponseBody200DataList = getSapiV1MiningStatisticsUserListResponseBody200DataList,
      getSapiV1MiningStatisticsUserListResponseBody200DataType = getSapiV1MiningStatisticsUserListResponseBody200DataType,
      getSapiV1MiningStatisticsUserListResponseBody200DataUserName = getSapiV1MiningStatisticsUserListResponseBody200DataUserName
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/statistics\/user\/list.GET.responses.200.content.application\/json.schema.properties.data.items.properties.list.items@ in the specification.
data GetSapiV1MiningStatisticsUserListResponseBody200DataList = GetSapiV1MiningStatisticsUserListResponseBody200DataList
  { -- | hashrate
    getSapiV1MiningStatisticsUserListResponseBody200DataListHashrate :: Data.Text.Internal.Text,
    -- | reject
    getSapiV1MiningStatisticsUserListResponseBody200DataListReject :: Data.Text.Internal.Text,
    -- | time
    getSapiV1MiningStatisticsUserListResponseBody200DataListTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MiningStatisticsUserListResponseBody200DataList where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["hashrate" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200DataListHashrate obj] : ["reject" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200DataListReject obj] : ["time" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200DataListTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["hashrate" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200DataListHashrate obj] : ["reject" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200DataListReject obj] : ["time" Data.Aeson.Types.ToJSON..= getSapiV1MiningStatisticsUserListResponseBody200DataListTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MiningStatisticsUserListResponseBody200DataList where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MiningStatisticsUserListResponseBody200DataList" (\obj -> ((GHC.Base.pure GetSapiV1MiningStatisticsUserListResponseBody200DataList GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "hashrate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "reject")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "time"))

-- | Create a new 'GetSapiV1MiningStatisticsUserListResponseBody200DataList' with all required fields.
mkGetSapiV1MiningStatisticsUserListResponseBody200DataList ::
  -- | 'getSapiV1MiningStatisticsUserListResponseBody200DataListHashrate'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserListResponseBody200DataListReject'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MiningStatisticsUserListResponseBody200DataListTime'
  GHC.Int.Int64 ->
  GetSapiV1MiningStatisticsUserListResponseBody200DataList
mkGetSapiV1MiningStatisticsUserListResponseBody200DataList getSapiV1MiningStatisticsUserListResponseBody200DataListHashrate getSapiV1MiningStatisticsUserListResponseBody200DataListReject getSapiV1MiningStatisticsUserListResponseBody200DataListTime =
  GetSapiV1MiningStatisticsUserListResponseBody200DataList
    { getSapiV1MiningStatisticsUserListResponseBody200DataListHashrate = getSapiV1MiningStatisticsUserListResponseBody200DataListHashrate,
      getSapiV1MiningStatisticsUserListResponseBody200DataListReject = getSapiV1MiningStatisticsUserListResponseBody200DataListReject,
      getSapiV1MiningStatisticsUserListResponseBody200DataListTime = getSapiV1MiningStatisticsUserListResponseBody200DataListTime
    }

-- | > GET /sapi/v1/mining/statistics/user/list
--
-- The same as 'getSapiV1MiningStatisticsUserList' but accepts an explicit configuration.
getSapiV1MiningStatisticsUserListWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningStatisticsUserListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1MiningStatisticsUserListResponse)
getSapiV1MiningStatisticsUserListWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1MiningStatisticsUserListResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MiningStatisticsUserListResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1MiningStatisticsUserListResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MiningStatisticsUserListResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MiningStatisticsUserListResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/mining/statistics/user/list")
          [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningStatisticsUserListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/mining/statistics/user/list
--
-- The same as 'getSapiV1MiningStatisticsUserList' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MiningStatisticsUserListRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningStatisticsUserListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MiningStatisticsUserListRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/mining/statistics/user/list")
        [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningStatisticsUserListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/mining/statistics/user/list
--
-- The same as 'getSapiV1MiningStatisticsUserList' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MiningStatisticsUserListWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MiningStatisticsUserListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MiningStatisticsUserListWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/mining/statistics/user/list")
          [ Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MiningStatisticsUserListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MiningStatisticsUserListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
