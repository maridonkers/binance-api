{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getApiV3UiKlines
module Binance.Operations.GetApiV3UiKlines where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /api/v3/uiKlines
--
-- The request is similar to klines having the same parameters and response.
--
-- uiKlines return modified kline data, optimized for presentation of candlestick charts.
--
-- Weight(IP): 1
getApiV3UiKlines ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetApiV3UiKlinesParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetApiV3UiKlinesResponse)
getApiV3UiKlines parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetApiV3UiKlinesResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetApiV3UiKlinesResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ([[GetApiV3UiKlinesResponseBody200Variants]])
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetApiV3UiKlinesResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/api/v3/uiKlines")
        [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getApiV3UiKlinesParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "interval") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getApiV3UiKlinesParametersQueryInterval parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getApiV3UiKlinesParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getApiV3UiKlinesParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getApiV3UiKlinesParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/api\/v3\/uiKlines.GET.parameters@ in the specification.
data GetApiV3UiKlinesParameters = GetApiV3UiKlinesParameters
  { -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getApiV3UiKlinesParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryInterval: Represents the parameter named \'interval\'
    --
    -- kline intervals
    getApiV3UiKlinesParametersQueryInterval :: GetApiV3UiKlinesParametersQueryInterval,
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- Default 500; max 1000.
    getApiV3UiKlinesParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getApiV3UiKlinesParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySymbol: Represents the parameter named \'symbol\'
    --
    -- Trading symbol, e.g. BNBUSDT
    getApiV3UiKlinesParametersQuerySymbol :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetApiV3UiKlinesParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getApiV3UiKlinesParametersQueryEndTime obj) : ["queryInterval" Data.Aeson.Types.ToJSON..= getApiV3UiKlinesParametersQueryInterval obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getApiV3UiKlinesParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getApiV3UiKlinesParametersQueryStartTime obj) : ["querySymbol" Data.Aeson.Types.ToJSON..= getApiV3UiKlinesParametersQuerySymbol obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getApiV3UiKlinesParametersQueryEndTime obj) : ["queryInterval" Data.Aeson.Types.ToJSON..= getApiV3UiKlinesParametersQueryInterval obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getApiV3UiKlinesParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getApiV3UiKlinesParametersQueryStartTime obj) : ["querySymbol" Data.Aeson.Types.ToJSON..= getApiV3UiKlinesParametersQuerySymbol obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetApiV3UiKlinesParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetApiV3UiKlinesParameters" (\obj -> ((((GHC.Base.pure GetApiV3UiKlinesParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryInterval")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySymbol"))

-- | Create a new 'GetApiV3UiKlinesParameters' with all required fields.
mkGetApiV3UiKlinesParameters ::
  -- | 'getApiV3UiKlinesParametersQueryInterval'
  GetApiV3UiKlinesParametersQueryInterval ->
  -- | 'getApiV3UiKlinesParametersQuerySymbol'
  Data.Text.Internal.Text ->
  GetApiV3UiKlinesParameters
mkGetApiV3UiKlinesParameters getApiV3UiKlinesParametersQueryInterval getApiV3UiKlinesParametersQuerySymbol =
  GetApiV3UiKlinesParameters
    { getApiV3UiKlinesParametersQueryEndTime = GHC.Maybe.Nothing,
      getApiV3UiKlinesParametersQueryInterval = getApiV3UiKlinesParametersQueryInterval,
      getApiV3UiKlinesParametersQueryLimit = GHC.Maybe.Nothing,
      getApiV3UiKlinesParametersQueryStartTime = GHC.Maybe.Nothing,
      getApiV3UiKlinesParametersQuerySymbol = getApiV3UiKlinesParametersQuerySymbol
    }

-- | Defines the enum schema located at @paths.\/api\/v3\/uiKlines.GET.parameters.properties.queryInterval@ in the specification.
--
-- Represents the parameter named \'interval\'
--
-- kline intervals
data GetApiV3UiKlinesParametersQueryInterval
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetApiV3UiKlinesParametersQueryIntervalOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetApiV3UiKlinesParametersQueryIntervalTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"1s"@
    GetApiV3UiKlinesParametersQueryIntervalEnum1s
  | -- | Represents the JSON value @"1m"@
    GetApiV3UiKlinesParametersQueryIntervalEnum1m
  | -- | Represents the JSON value @"3m"@
    GetApiV3UiKlinesParametersQueryIntervalEnum3m
  | -- | Represents the JSON value @"5m"@
    GetApiV3UiKlinesParametersQueryIntervalEnum5m
  | -- | Represents the JSON value @"15m"@
    GetApiV3UiKlinesParametersQueryIntervalEnum15m
  | -- | Represents the JSON value @"30m"@
    GetApiV3UiKlinesParametersQueryIntervalEnum30m
  | -- | Represents the JSON value @"1h"@
    GetApiV3UiKlinesParametersQueryIntervalEnum1h
  | -- | Represents the JSON value @"2h"@
    GetApiV3UiKlinesParametersQueryIntervalEnum2h
  | -- | Represents the JSON value @"4h"@
    GetApiV3UiKlinesParametersQueryIntervalEnum4h
  | -- | Represents the JSON value @"6h"@
    GetApiV3UiKlinesParametersQueryIntervalEnum6h
  | -- | Represents the JSON value @"8h"@
    GetApiV3UiKlinesParametersQueryIntervalEnum8h
  | -- | Represents the JSON value @"12h"@
    GetApiV3UiKlinesParametersQueryIntervalEnum12h
  | -- | Represents the JSON value @"1d"@
    GetApiV3UiKlinesParametersQueryIntervalEnum1d
  | -- | Represents the JSON value @"3d"@
    GetApiV3UiKlinesParametersQueryIntervalEnum3d
  | -- | Represents the JSON value @"1w"@
    GetApiV3UiKlinesParametersQueryIntervalEnum1w
  | -- | Represents the JSON value @"1M"@
    GetApiV3UiKlinesParametersQueryIntervalEnum1M
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetApiV3UiKlinesParametersQueryInterval where
  toJSON (GetApiV3UiKlinesParametersQueryIntervalOther val) = val
  toJSON (GetApiV3UiKlinesParametersQueryIntervalTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum1s) = "1s"
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum1m) = "1m"
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum3m) = "3m"
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum5m) = "5m"
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum15m) = "15m"
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum30m) = "30m"
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum1h) = "1h"
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum2h) = "2h"
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum4h) = "4h"
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum6h) = "6h"
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum8h) = "8h"
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum12h) = "12h"
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum1d) = "1d"
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum3d) = "3d"
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum1w) = "1w"
  toJSON (GetApiV3UiKlinesParametersQueryIntervalEnum1M) = "1M"

instance Data.Aeson.Types.FromJSON.FromJSON GetApiV3UiKlinesParametersQueryInterval where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "1s" -> GetApiV3UiKlinesParametersQueryIntervalEnum1s
            | val GHC.Classes.== "1m" -> GetApiV3UiKlinesParametersQueryIntervalEnum1m
            | val GHC.Classes.== "3m" -> GetApiV3UiKlinesParametersQueryIntervalEnum3m
            | val GHC.Classes.== "5m" -> GetApiV3UiKlinesParametersQueryIntervalEnum5m
            | val GHC.Classes.== "15m" -> GetApiV3UiKlinesParametersQueryIntervalEnum15m
            | val GHC.Classes.== "30m" -> GetApiV3UiKlinesParametersQueryIntervalEnum30m
            | val GHC.Classes.== "1h" -> GetApiV3UiKlinesParametersQueryIntervalEnum1h
            | val GHC.Classes.== "2h" -> GetApiV3UiKlinesParametersQueryIntervalEnum2h
            | val GHC.Classes.== "4h" -> GetApiV3UiKlinesParametersQueryIntervalEnum4h
            | val GHC.Classes.== "6h" -> GetApiV3UiKlinesParametersQueryIntervalEnum6h
            | val GHC.Classes.== "8h" -> GetApiV3UiKlinesParametersQueryIntervalEnum8h
            | val GHC.Classes.== "12h" -> GetApiV3UiKlinesParametersQueryIntervalEnum12h
            | val GHC.Classes.== "1d" -> GetApiV3UiKlinesParametersQueryIntervalEnum1d
            | val GHC.Classes.== "3d" -> GetApiV3UiKlinesParametersQueryIntervalEnum3d
            | val GHC.Classes.== "1w" -> GetApiV3UiKlinesParametersQueryIntervalEnum1w
            | val GHC.Classes.== "1M" -> GetApiV3UiKlinesParametersQueryIntervalEnum1M
            | GHC.Base.otherwise -> GetApiV3UiKlinesParametersQueryIntervalOther val
      )

-- | Represents a response of the operation 'getApiV3UiKlines'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetApiV3UiKlinesResponseError' is used.
data GetApiV3UiKlinesResponse
  = -- | Means either no matching case available or a parse error
    GetApiV3UiKlinesResponseError GHC.Base.String
  | -- | UIKline data
    GetApiV3UiKlinesResponse200 ([[GetApiV3UiKlinesResponseBody200Variants]])
  | -- | Bad Request
    GetApiV3UiKlinesResponse400 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the oneOf schema located at @paths.\/api\/v3\/uiKlines.GET.responses.200.content.application\/json.schema.items.items.oneOf@ in the specification.
data GetApiV3UiKlinesResponseBody200Variants
  = GetApiV3UiKlinesResponseBody200Variant1 GHC.Int.Int64
  | GetApiV3UiKlinesResponseBody200Variant2 Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetApiV3UiKlinesResponseBody200Variants where
  toJSON (GetApiV3UiKlinesResponseBody200Variant1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetApiV3UiKlinesResponseBody200Variant2 a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetApiV3UiKlinesResponseBody200Variants where
  parseJSON val = case (GetApiV3UiKlinesResponseBody200Variant1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetApiV3UiKlinesResponseBody200Variant2 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | > GET /api/v3/uiKlines
--
-- The same as 'getApiV3UiKlines' but accepts an explicit configuration.
getApiV3UiKlinesWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetApiV3UiKlinesParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetApiV3UiKlinesResponse)
getApiV3UiKlinesWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_3 ->
          GHC.Base.fmap
            ( Data.Either.either GetApiV3UiKlinesResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_4 -> Network.HTTP.Types.Status.statusCode status_4 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetApiV3UiKlinesResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              ([[GetApiV3UiKlinesResponseBody200Variants]])
                                                        )
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetApiV3UiKlinesResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_3
            )
            response_3
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/api/v3/uiKlines")
          [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getApiV3UiKlinesParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "interval") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getApiV3UiKlinesParametersQueryInterval parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getApiV3UiKlinesParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getApiV3UiKlinesParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getApiV3UiKlinesParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /api/v3/uiKlines
--
-- The same as 'getApiV3UiKlines' but returns the raw 'Data.ByteString.Char8.ByteString'.
getApiV3UiKlinesRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetApiV3UiKlinesParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getApiV3UiKlinesRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/api/v3/uiKlines")
        [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getApiV3UiKlinesParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "interval") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getApiV3UiKlinesParametersQueryInterval parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getApiV3UiKlinesParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getApiV3UiKlinesParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getApiV3UiKlinesParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /api/v3/uiKlines
--
-- The same as 'getApiV3UiKlines' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getApiV3UiKlinesWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetApiV3UiKlinesParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getApiV3UiKlinesWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/api/v3/uiKlines")
          [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getApiV3UiKlinesParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "interval") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getApiV3UiKlinesParametersQueryInterval parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getApiV3UiKlinesParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getApiV3UiKlinesParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getApiV3UiKlinesParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False
          ]
      )
