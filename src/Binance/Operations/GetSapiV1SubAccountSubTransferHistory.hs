{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1SubAccountSubTransferHistory
module Binance.Operations.GetSapiV1SubAccountSubTransferHistory where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/sub-account/sub/transfer/history
--
-- - fromEmail and toEmail cannot be sent at the same time.
-- - Return fromEmail equal master account email by default.
--
-- Weight(IP): 1
getSapiV1SubAccountSubTransferHistory ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountSubTransferHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1SubAccountSubTransferHistoryResponse)
getSapiV1SubAccountSubTransferHistory parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1SubAccountSubTransferHistoryResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1SubAccountSubTransferHistoryResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ([GetSapiV1SubAccountSubTransferHistoryResponseBody200])
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1SubAccountSubTransferHistoryResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1SubAccountSubTransferHistoryResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/sub-account/sub/transfer/history")
        [ Binance.Common.QueryParameter (Data.Text.pack "fromEmail") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryFromEmail parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "toEmail") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryToEmail parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountSubTransferHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountSubTransferHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/sub\/transfer\/history.GET.parameters@ in the specification.
data GetSapiV1SubAccountSubTransferHistoryParameters = GetSapiV1SubAccountSubTransferHistoryParameters
  { -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1SubAccountSubTransferHistoryParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryFromEmail: Represents the parameter named \'fromEmail\'
    --
    -- Sub-account email
    getSapiV1SubAccountSubTransferHistoryParametersQueryFromEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- Default 1
    getSapiV1SubAccountSubTransferHistoryParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- Default 1
    getSapiV1SubAccountSubTransferHistoryParametersQueryPage :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1SubAccountSubTransferHistoryParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1SubAccountSubTransferHistoryParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1SubAccountSubTransferHistoryParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1SubAccountSubTransferHistoryParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryToEmail: Represents the parameter named \'toEmail\'
    --
    -- Sub-account email
    getSapiV1SubAccountSubTransferHistoryParametersQueryToEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1SubAccountSubTransferHistoryParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountSubTransferHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFromEmail" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountSubTransferHistoryParametersQueryFromEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountSubTransferHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountSubTransferHistoryParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountSubTransferHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountSubTransferHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryToEmail" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountSubTransferHistoryParametersQueryToEmail obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountSubTransferHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFromEmail" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountSubTransferHistoryParametersQueryFromEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountSubTransferHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountSubTransferHistoryParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountSubTransferHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountSubTransferHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryToEmail" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountSubTransferHistoryParametersQueryToEmail obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1SubAccountSubTransferHistoryParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1SubAccountSubTransferHistoryParameters" (\obj -> ((((((((GHC.Base.pure GetSapiV1SubAccountSubTransferHistoryParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryFromEmail")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryToEmail"))

-- | Create a new 'GetSapiV1SubAccountSubTransferHistoryParameters' with all required fields.
mkGetSapiV1SubAccountSubTransferHistoryParameters ::
  -- | 'getSapiV1SubAccountSubTransferHistoryParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountSubTransferHistoryParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1SubAccountSubTransferHistoryParameters
mkGetSapiV1SubAccountSubTransferHistoryParameters getSapiV1SubAccountSubTransferHistoryParametersQuerySignature getSapiV1SubAccountSubTransferHistoryParametersQueryTimestamp =
  GetSapiV1SubAccountSubTransferHistoryParameters
    { getSapiV1SubAccountSubTransferHistoryParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1SubAccountSubTransferHistoryParametersQueryFromEmail = GHC.Maybe.Nothing,
      getSapiV1SubAccountSubTransferHistoryParametersQueryLimit = GHC.Maybe.Nothing,
      getSapiV1SubAccountSubTransferHistoryParametersQueryPage = GHC.Maybe.Nothing,
      getSapiV1SubAccountSubTransferHistoryParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1SubAccountSubTransferHistoryParametersQuerySignature = getSapiV1SubAccountSubTransferHistoryParametersQuerySignature,
      getSapiV1SubAccountSubTransferHistoryParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1SubAccountSubTransferHistoryParametersQueryTimestamp = getSapiV1SubAccountSubTransferHistoryParametersQueryTimestamp,
      getSapiV1SubAccountSubTransferHistoryParametersQueryToEmail = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'getSapiV1SubAccountSubTransferHistory'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1SubAccountSubTransferHistoryResponseError' is used.
data GetSapiV1SubAccountSubTransferHistoryResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1SubAccountSubTransferHistoryResponseError GHC.Base.String
  | -- | Sub-account Spot Asset Transfer History
    GetSapiV1SubAccountSubTransferHistoryResponse200 ([GetSapiV1SubAccountSubTransferHistoryResponseBody200])
  | -- | Bad Request
    GetSapiV1SubAccountSubTransferHistoryResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1SubAccountSubTransferHistoryResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/sub\/transfer\/history.GET.responses.200.content.application\/json.schema.items@ in the specification.
data GetSapiV1SubAccountSubTransferHistoryResponseBody200 = GetSapiV1SubAccountSubTransferHistoryResponseBody200
  { -- | asset
    getSapiV1SubAccountSubTransferHistoryResponseBody200Asset :: Data.Text.Internal.Text,
    -- | from
    getSapiV1SubAccountSubTransferHistoryResponseBody200From :: Data.Text.Internal.Text,
    -- | qty
    getSapiV1SubAccountSubTransferHistoryResponseBody200Qty :: Data.Text.Internal.Text,
    -- | status
    getSapiV1SubAccountSubTransferHistoryResponseBody200Status :: Data.Text.Internal.Text,
    -- | time
    getSapiV1SubAccountSubTransferHistoryResponseBody200Time :: GHC.Int.Int64,
    -- | to
    getSapiV1SubAccountSubTransferHistoryResponseBody200To :: Data.Text.Internal.Text,
    -- | tranId
    getSapiV1SubAccountSubTransferHistoryResponseBody200TranId :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1SubAccountSubTransferHistoryResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryResponseBody200Asset obj] : ["from" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryResponseBody200From obj] : ["qty" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryResponseBody200Qty obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryResponseBody200Status obj] : ["time" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryResponseBody200Time obj] : ["to" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryResponseBody200To obj] : ["tranId" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryResponseBody200TranId obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryResponseBody200Asset obj] : ["from" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryResponseBody200From obj] : ["qty" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryResponseBody200Qty obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryResponseBody200Status obj] : ["time" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryResponseBody200Time obj] : ["to" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryResponseBody200To obj] : ["tranId" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountSubTransferHistoryResponseBody200TranId obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1SubAccountSubTransferHistoryResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1SubAccountSubTransferHistoryResponseBody200" (\obj -> ((((((GHC.Base.pure GetSapiV1SubAccountSubTransferHistoryResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "from")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "qty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "time")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "to")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tranId"))

-- | Create a new 'GetSapiV1SubAccountSubTransferHistoryResponseBody200' with all required fields.
mkGetSapiV1SubAccountSubTransferHistoryResponseBody200 ::
  -- | 'getSapiV1SubAccountSubTransferHistoryResponseBody200Asset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountSubTransferHistoryResponseBody200From'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountSubTransferHistoryResponseBody200Qty'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountSubTransferHistoryResponseBody200Status'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountSubTransferHistoryResponseBody200Time'
  GHC.Int.Int64 ->
  -- | 'getSapiV1SubAccountSubTransferHistoryResponseBody200To'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountSubTransferHistoryResponseBody200TranId'
  GHC.Int.Int64 ->
  GetSapiV1SubAccountSubTransferHistoryResponseBody200
mkGetSapiV1SubAccountSubTransferHistoryResponseBody200 getSapiV1SubAccountSubTransferHistoryResponseBody200Asset getSapiV1SubAccountSubTransferHistoryResponseBody200From getSapiV1SubAccountSubTransferHistoryResponseBody200Qty getSapiV1SubAccountSubTransferHistoryResponseBody200Status getSapiV1SubAccountSubTransferHistoryResponseBody200Time getSapiV1SubAccountSubTransferHistoryResponseBody200To getSapiV1SubAccountSubTransferHistoryResponseBody200TranId =
  GetSapiV1SubAccountSubTransferHistoryResponseBody200
    { getSapiV1SubAccountSubTransferHistoryResponseBody200Asset = getSapiV1SubAccountSubTransferHistoryResponseBody200Asset,
      getSapiV1SubAccountSubTransferHistoryResponseBody200From = getSapiV1SubAccountSubTransferHistoryResponseBody200From,
      getSapiV1SubAccountSubTransferHistoryResponseBody200Qty = getSapiV1SubAccountSubTransferHistoryResponseBody200Qty,
      getSapiV1SubAccountSubTransferHistoryResponseBody200Status = getSapiV1SubAccountSubTransferHistoryResponseBody200Status,
      getSapiV1SubAccountSubTransferHistoryResponseBody200Time = getSapiV1SubAccountSubTransferHistoryResponseBody200Time,
      getSapiV1SubAccountSubTransferHistoryResponseBody200To = getSapiV1SubAccountSubTransferHistoryResponseBody200To,
      getSapiV1SubAccountSubTransferHistoryResponseBody200TranId = getSapiV1SubAccountSubTransferHistoryResponseBody200TranId
    }

-- | > GET /sapi/v1/sub-account/sub/transfer/history
--
-- The same as 'getSapiV1SubAccountSubTransferHistory' but accepts an explicit configuration.
getSapiV1SubAccountSubTransferHistoryWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountSubTransferHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1SubAccountSubTransferHistoryResponse)
getSapiV1SubAccountSubTransferHistoryWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1SubAccountSubTransferHistoryResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1SubAccountSubTransferHistoryResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              ([GetSapiV1SubAccountSubTransferHistoryResponseBody200])
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1SubAccountSubTransferHistoryResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1SubAccountSubTransferHistoryResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/sub-account/sub/transfer/history")
          [ Binance.Common.QueryParameter (Data.Text.pack "fromEmail") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryFromEmail parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "toEmail") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryToEmail parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountSubTransferHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountSubTransferHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/sub-account/sub/transfer/history
--
-- The same as 'getSapiV1SubAccountSubTransferHistory' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1SubAccountSubTransferHistoryRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountSubTransferHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1SubAccountSubTransferHistoryRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/sub-account/sub/transfer/history")
        [ Binance.Common.QueryParameter (Data.Text.pack "fromEmail") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryFromEmail parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "toEmail") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryToEmail parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountSubTransferHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountSubTransferHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/sub-account/sub/transfer/history
--
-- The same as 'getSapiV1SubAccountSubTransferHistory' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1SubAccountSubTransferHistoryWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountSubTransferHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1SubAccountSubTransferHistoryWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/sub-account/sub/transfer/history")
          [ Binance.Common.QueryParameter (Data.Text.pack "fromEmail") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryFromEmail parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "toEmail") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryToEmail parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountSubTransferHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountSubTransferHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountSubTransferHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
