{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1SubAccountTransferSubUserHistory
module Binance.Operations.GetSapiV1SubAccountTransferSubUserHistory where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/sub-account/transfer/subUserHistory
--
-- - If \`type\` is not sent, the records of type 2: transfer out will be returned by default.
-- - If \`startTime\` and \`endTime\` are not sent, the recent 30-day data will be returned.
--
-- Weight(IP): 1
getSapiV1SubAccountTransferSubUserHistory ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountTransferSubUserHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1SubAccountTransferSubUserHistoryResponse)
getSapiV1SubAccountTransferSubUserHistory parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1SubAccountTransferSubUserHistoryResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1SubAccountTransferSubUserHistoryResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ([GetSapiV1SubAccountTransferSubUserHistoryResponseBody200])
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1SubAccountTransferSubUserHistoryResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1SubAccountTransferSubUserHistoryResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/sub-account/transfer/subUserHistory")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountTransferSubUserHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountTransferSubUserHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/transfer\/subUserHistory.GET.parameters@ in the specification.
data GetSapiV1SubAccountTransferSubUserHistoryParameters = GetSapiV1SubAccountTransferSubUserHistoryParameters
  { -- | queryAsset: Represents the parameter named \'asset\'
    getSapiV1SubAccountTransferSubUserHistoryParametersQueryAsset :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1SubAccountTransferSubUserHistoryParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- Default 500; max 1000.
    getSapiV1SubAccountTransferSubUserHistoryParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1SubAccountTransferSubUserHistoryParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1SubAccountTransferSubUserHistoryParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1SubAccountTransferSubUserHistoryParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1SubAccountTransferSubUserHistoryParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryType: Represents the parameter named \'type\'
    --
    -- * \`1\` - transfer in
    -- * \`2\` - transfer out
    getSapiV1SubAccountTransferSubUserHistoryParametersQueryType :: (GHC.Maybe.Maybe GetSapiV1SubAccountTransferSubUserHistoryParametersQueryType)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1SubAccountTransferSubUserHistoryParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAsset" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountTransferSubUserHistoryParametersQueryAsset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountTransferSubUserHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountTransferSubUserHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountTransferSubUserHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountTransferSubUserHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryType" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountTransferSubUserHistoryParametersQueryType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAsset" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountTransferSubUserHistoryParametersQueryAsset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountTransferSubUserHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountTransferSubUserHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountTransferSubUserHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountTransferSubUserHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryType" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountTransferSubUserHistoryParametersQueryType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1SubAccountTransferSubUserHistoryParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1SubAccountTransferSubUserHistoryParameters" (\obj -> (((((((GHC.Base.pure GetSapiV1SubAccountTransferSubUserHistoryParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryType"))

-- | Create a new 'GetSapiV1SubAccountTransferSubUserHistoryParameters' with all required fields.
mkGetSapiV1SubAccountTransferSubUserHistoryParameters ::
  -- | 'getSapiV1SubAccountTransferSubUserHistoryParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountTransferSubUserHistoryParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1SubAccountTransferSubUserHistoryParameters
mkGetSapiV1SubAccountTransferSubUserHistoryParameters getSapiV1SubAccountTransferSubUserHistoryParametersQuerySignature getSapiV1SubAccountTransferSubUserHistoryParametersQueryTimestamp =
  GetSapiV1SubAccountTransferSubUserHistoryParameters
    { getSapiV1SubAccountTransferSubUserHistoryParametersQueryAsset = GHC.Maybe.Nothing,
      getSapiV1SubAccountTransferSubUserHistoryParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1SubAccountTransferSubUserHistoryParametersQueryLimit = GHC.Maybe.Nothing,
      getSapiV1SubAccountTransferSubUserHistoryParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1SubAccountTransferSubUserHistoryParametersQuerySignature = getSapiV1SubAccountTransferSubUserHistoryParametersQuerySignature,
      getSapiV1SubAccountTransferSubUserHistoryParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1SubAccountTransferSubUserHistoryParametersQueryTimestamp = getSapiV1SubAccountTransferSubUserHistoryParametersQueryTimestamp,
      getSapiV1SubAccountTransferSubUserHistoryParametersQueryType = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/sub-account\/transfer\/subUserHistory.GET.parameters.properties.queryType@ in the specification.
--
-- Represents the parameter named \'type\'
--
-- * \`1\` - transfer in
-- * \`2\` - transfer out
data GetSapiV1SubAccountTransferSubUserHistoryParametersQueryType
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1SubAccountTransferSubUserHistoryParametersQueryTypeOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1SubAccountTransferSubUserHistoryParametersQueryTypeTyped GHC.Int.Int32
  | -- | Represents the JSON value @1@
    GetSapiV1SubAccountTransferSubUserHistoryParametersQueryTypeEnum1
  | -- | Represents the JSON value @2@
    GetSapiV1SubAccountTransferSubUserHistoryParametersQueryTypeEnum2
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1SubAccountTransferSubUserHistoryParametersQueryType where
  toJSON (GetSapiV1SubAccountTransferSubUserHistoryParametersQueryTypeOther val) = val
  toJSON (GetSapiV1SubAccountTransferSubUserHistoryParametersQueryTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1SubAccountTransferSubUserHistoryParametersQueryTypeEnum1) = Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 1 0)
  toJSON (GetSapiV1SubAccountTransferSubUserHistoryParametersQueryTypeEnum2) = Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 2 0)

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1SubAccountTransferSubUserHistoryParametersQueryType where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 1 0) -> GetSapiV1SubAccountTransferSubUserHistoryParametersQueryTypeEnum1
            | val GHC.Classes.== Data.Aeson.Types.Internal.Number (Data.Scientific.scientific 2 0) -> GetSapiV1SubAccountTransferSubUserHistoryParametersQueryTypeEnum2
            | GHC.Base.otherwise -> GetSapiV1SubAccountTransferSubUserHistoryParametersQueryTypeOther val
      )

-- | Represents a response of the operation 'getSapiV1SubAccountTransferSubUserHistory'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1SubAccountTransferSubUserHistoryResponseError' is used.
data GetSapiV1SubAccountTransferSubUserHistoryResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1SubAccountTransferSubUserHistoryResponseError GHC.Base.String
  | -- | Transfer id
    GetSapiV1SubAccountTransferSubUserHistoryResponse200 ([GetSapiV1SubAccountTransferSubUserHistoryResponseBody200])
  | -- | Bad Request
    GetSapiV1SubAccountTransferSubUserHistoryResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1SubAccountTransferSubUserHistoryResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/transfer\/subUserHistory.GET.responses.200.content.application\/json.schema.items@ in the specification.
data GetSapiV1SubAccountTransferSubUserHistoryResponseBody200 = GetSapiV1SubAccountTransferSubUserHistoryResponseBody200
  { -- | asset
    getSapiV1SubAccountTransferSubUserHistoryResponseBody200Asset :: Data.Text.Internal.Text,
    -- | counterParty
    getSapiV1SubAccountTransferSubUserHistoryResponseBody200CounterParty :: Data.Text.Internal.Text,
    -- | email
    getSapiV1SubAccountTransferSubUserHistoryResponseBody200Email :: Data.Text.Internal.Text,
    -- | fromAccountType
    getSapiV1SubAccountTransferSubUserHistoryResponseBody200FromAccountType :: Data.Text.Internal.Text,
    -- | qty
    getSapiV1SubAccountTransferSubUserHistoryResponseBody200Qty :: Data.Text.Internal.Text,
    -- | status
    getSapiV1SubAccountTransferSubUserHistoryResponseBody200Status :: Data.Text.Internal.Text,
    -- | time
    getSapiV1SubAccountTransferSubUserHistoryResponseBody200Time :: GHC.Int.Int64,
    -- | toAccountType
    getSapiV1SubAccountTransferSubUserHistoryResponseBody200ToAccountType :: Data.Text.Internal.Text,
    -- | tranId
    getSapiV1SubAccountTransferSubUserHistoryResponseBody200TranId :: GHC.Int.Int64,
    -- | type: 1 for transfer in, 2 for transfer out
    getSapiV1SubAccountTransferSubUserHistoryResponseBody200Type :: GHC.Int.Int32
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1SubAccountTransferSubUserHistoryResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200Asset obj] : ["counterParty" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200CounterParty obj] : ["email" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200Email obj] : ["fromAccountType" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200FromAccountType obj] : ["qty" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200Qty obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200Status obj] : ["time" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200Time obj] : ["toAccountType" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200ToAccountType obj] : ["tranId" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200TranId obj] : ["type" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200Type obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200Asset obj] : ["counterParty" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200CounterParty obj] : ["email" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200Email obj] : ["fromAccountType" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200FromAccountType obj] : ["qty" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200Qty obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200Status obj] : ["time" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200Time obj] : ["toAccountType" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200ToAccountType obj] : ["tranId" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200TranId obj] : ["type" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountTransferSubUserHistoryResponseBody200Type obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1SubAccountTransferSubUserHistoryResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1SubAccountTransferSubUserHistoryResponseBody200" (\obj -> (((((((((GHC.Base.pure GetSapiV1SubAccountTransferSubUserHistoryResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "counterParty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "fromAccountType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "qty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "time")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "toAccountType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tranId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))

-- | Create a new 'GetSapiV1SubAccountTransferSubUserHistoryResponseBody200' with all required fields.
mkGetSapiV1SubAccountTransferSubUserHistoryResponseBody200 ::
  -- | 'getSapiV1SubAccountTransferSubUserHistoryResponseBody200Asset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountTransferSubUserHistoryResponseBody200CounterParty'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountTransferSubUserHistoryResponseBody200Email'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountTransferSubUserHistoryResponseBody200FromAccountType'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountTransferSubUserHistoryResponseBody200Qty'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountTransferSubUserHistoryResponseBody200Status'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountTransferSubUserHistoryResponseBody200Time'
  GHC.Int.Int64 ->
  -- | 'getSapiV1SubAccountTransferSubUserHistoryResponseBody200ToAccountType'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountTransferSubUserHistoryResponseBody200TranId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1SubAccountTransferSubUserHistoryResponseBody200Type'
  GHC.Int.Int32 ->
  GetSapiV1SubAccountTransferSubUserHistoryResponseBody200
mkGetSapiV1SubAccountTransferSubUserHistoryResponseBody200 getSapiV1SubAccountTransferSubUserHistoryResponseBody200Asset getSapiV1SubAccountTransferSubUserHistoryResponseBody200CounterParty getSapiV1SubAccountTransferSubUserHistoryResponseBody200Email getSapiV1SubAccountTransferSubUserHistoryResponseBody200FromAccountType getSapiV1SubAccountTransferSubUserHistoryResponseBody200Qty getSapiV1SubAccountTransferSubUserHistoryResponseBody200Status getSapiV1SubAccountTransferSubUserHistoryResponseBody200Time getSapiV1SubAccountTransferSubUserHistoryResponseBody200ToAccountType getSapiV1SubAccountTransferSubUserHistoryResponseBody200TranId getSapiV1SubAccountTransferSubUserHistoryResponseBody200Type =
  GetSapiV1SubAccountTransferSubUserHistoryResponseBody200
    { getSapiV1SubAccountTransferSubUserHistoryResponseBody200Asset = getSapiV1SubAccountTransferSubUserHistoryResponseBody200Asset,
      getSapiV1SubAccountTransferSubUserHistoryResponseBody200CounterParty = getSapiV1SubAccountTransferSubUserHistoryResponseBody200CounterParty,
      getSapiV1SubAccountTransferSubUserHistoryResponseBody200Email = getSapiV1SubAccountTransferSubUserHistoryResponseBody200Email,
      getSapiV1SubAccountTransferSubUserHistoryResponseBody200FromAccountType = getSapiV1SubAccountTransferSubUserHistoryResponseBody200FromAccountType,
      getSapiV1SubAccountTransferSubUserHistoryResponseBody200Qty = getSapiV1SubAccountTransferSubUserHistoryResponseBody200Qty,
      getSapiV1SubAccountTransferSubUserHistoryResponseBody200Status = getSapiV1SubAccountTransferSubUserHistoryResponseBody200Status,
      getSapiV1SubAccountTransferSubUserHistoryResponseBody200Time = getSapiV1SubAccountTransferSubUserHistoryResponseBody200Time,
      getSapiV1SubAccountTransferSubUserHistoryResponseBody200ToAccountType = getSapiV1SubAccountTransferSubUserHistoryResponseBody200ToAccountType,
      getSapiV1SubAccountTransferSubUserHistoryResponseBody200TranId = getSapiV1SubAccountTransferSubUserHistoryResponseBody200TranId,
      getSapiV1SubAccountTransferSubUserHistoryResponseBody200Type = getSapiV1SubAccountTransferSubUserHistoryResponseBody200Type
    }

-- | > GET /sapi/v1/sub-account/transfer/subUserHistory
--
-- The same as 'getSapiV1SubAccountTransferSubUserHistory' but accepts an explicit configuration.
getSapiV1SubAccountTransferSubUserHistoryWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountTransferSubUserHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1SubAccountTransferSubUserHistoryResponse)
getSapiV1SubAccountTransferSubUserHistoryWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1SubAccountTransferSubUserHistoryResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1SubAccountTransferSubUserHistoryResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              ([GetSapiV1SubAccountTransferSubUserHistoryResponseBody200])
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1SubAccountTransferSubUserHistoryResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1SubAccountTransferSubUserHistoryResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/sub-account/transfer/subUserHistory")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountTransferSubUserHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountTransferSubUserHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/sub-account/transfer/subUserHistory
--
-- The same as 'getSapiV1SubAccountTransferSubUserHistory' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1SubAccountTransferSubUserHistoryRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountTransferSubUserHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1SubAccountTransferSubUserHistoryRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/sub-account/transfer/subUserHistory")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountTransferSubUserHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountTransferSubUserHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/sub-account/transfer/subUserHistory
--
-- The same as 'getSapiV1SubAccountTransferSubUserHistory' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1SubAccountTransferSubUserHistoryWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountTransferSubUserHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1SubAccountTransferSubUserHistoryWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/sub-account/transfer/subUserHistory")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountTransferSubUserHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountTransferSubUserHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountTransferSubUserHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
