{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1SubAccountFuturesAccount
module Binance.Operations.GetSapiV1SubAccountFuturesAccount where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/sub-account/futures/account
--
-- Weight(IP): 10
getSapiV1SubAccountFuturesAccount ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountFuturesAccountParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1SubAccountFuturesAccountResponse)
getSapiV1SubAccountFuturesAccount parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1SubAccountFuturesAccountResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1SubAccountFuturesAccountResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1SubAccountFuturesAccountResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1SubAccountFuturesAccountResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1SubAccountFuturesAccountResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/sub-account/futures/account")
        [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountFuturesAccountParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountFuturesAccountParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountFuturesAccountParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountFuturesAccountParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/futures\/account.GET.parameters@ in the specification.
data GetSapiV1SubAccountFuturesAccountParameters = GetSapiV1SubAccountFuturesAccountParameters
  { -- | queryEmail: Represents the parameter named \'email\'
    --
    -- Sub-account email
    getSapiV1SubAccountFuturesAccountParametersQueryEmail :: Data.Text.Internal.Text,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1SubAccountFuturesAccountParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1SubAccountFuturesAccountParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1SubAccountFuturesAccountParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1SubAccountFuturesAccountParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryEmail" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountParametersQueryEmail obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountFuturesAccountParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryEmail" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountParametersQueryEmail obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1SubAccountFuturesAccountParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1SubAccountFuturesAccountParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1SubAccountFuturesAccountParameters" (\obj -> (((GHC.Base.pure GetSapiV1SubAccountFuturesAccountParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryEmail")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1SubAccountFuturesAccountParameters' with all required fields.
mkGetSapiV1SubAccountFuturesAccountParameters ::
  -- | 'getSapiV1SubAccountFuturesAccountParametersQueryEmail'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1SubAccountFuturesAccountParameters
mkGetSapiV1SubAccountFuturesAccountParameters getSapiV1SubAccountFuturesAccountParametersQueryEmail getSapiV1SubAccountFuturesAccountParametersQuerySignature getSapiV1SubAccountFuturesAccountParametersQueryTimestamp =
  GetSapiV1SubAccountFuturesAccountParameters
    { getSapiV1SubAccountFuturesAccountParametersQueryEmail = getSapiV1SubAccountFuturesAccountParametersQueryEmail,
      getSapiV1SubAccountFuturesAccountParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1SubAccountFuturesAccountParametersQuerySignature = getSapiV1SubAccountFuturesAccountParametersQuerySignature,
      getSapiV1SubAccountFuturesAccountParametersQueryTimestamp = getSapiV1SubAccountFuturesAccountParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1SubAccountFuturesAccount'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1SubAccountFuturesAccountResponseError' is used.
data GetSapiV1SubAccountFuturesAccountResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1SubAccountFuturesAccountResponseError GHC.Base.String
  | -- | Futures account details
    GetSapiV1SubAccountFuturesAccountResponse200 GetSapiV1SubAccountFuturesAccountResponseBody200
  | -- | Bad Request
    GetSapiV1SubAccountFuturesAccountResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1SubAccountFuturesAccountResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/futures\/account.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1SubAccountFuturesAccountResponseBody200 = GetSapiV1SubAccountFuturesAccountResponseBody200
  { -- | asset
    getSapiV1SubAccountFuturesAccountResponseBody200Asset :: Data.Text.Internal.Text,
    -- | assets
    getSapiV1SubAccountFuturesAccountResponseBody200Assets :: ([GetSapiV1SubAccountFuturesAccountResponseBody200Assets]),
    -- | canDeposit
    getSapiV1SubAccountFuturesAccountResponseBody200CanDeposit :: GHC.Types.Bool,
    -- | canTrade
    getSapiV1SubAccountFuturesAccountResponseBody200CanTrade :: GHC.Types.Bool,
    -- | canWithdraw
    getSapiV1SubAccountFuturesAccountResponseBody200CanWithdraw :: GHC.Types.Bool,
    -- | email
    getSapiV1SubAccountFuturesAccountResponseBody200Email :: Data.Text.Internal.Text,
    -- | feeTier
    getSapiV1SubAccountFuturesAccountResponseBody200FeeTier :: GHC.Int.Int64,
    -- | maxWithdrawAmount
    getSapiV1SubAccountFuturesAccountResponseBody200MaxWithdrawAmount :: Data.Text.Internal.Text,
    -- | totalInitialMargin
    getSapiV1SubAccountFuturesAccountResponseBody200TotalInitialMargin :: Data.Text.Internal.Text,
    -- | totalMaintenanceMargin
    getSapiV1SubAccountFuturesAccountResponseBody200TotalMaintenanceMargin :: Data.Text.Internal.Text,
    -- | totalMarginBalance
    getSapiV1SubAccountFuturesAccountResponseBody200TotalMarginBalance :: Data.Text.Internal.Text,
    -- | totalOpenOrderInitialMargin
    getSapiV1SubAccountFuturesAccountResponseBody200TotalOpenOrderInitialMargin :: Data.Text.Internal.Text,
    -- | totalPositionInitialMargin
    getSapiV1SubAccountFuturesAccountResponseBody200TotalPositionInitialMargin :: Data.Text.Internal.Text,
    -- | totalUnrealizedProfit
    getSapiV1SubAccountFuturesAccountResponseBody200TotalUnrealizedProfit :: Data.Text.Internal.Text,
    -- | totalWalletBalance
    getSapiV1SubAccountFuturesAccountResponseBody200TotalWalletBalance :: Data.Text.Internal.Text,
    -- | updateTime
    getSapiV1SubAccountFuturesAccountResponseBody200UpdateTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1SubAccountFuturesAccountResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200Asset obj] : ["assets" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200Assets obj] : ["canDeposit" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200CanDeposit obj] : ["canTrade" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200CanTrade obj] : ["canWithdraw" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200CanWithdraw obj] : ["email" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200Email obj] : ["feeTier" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200FeeTier obj] : ["maxWithdrawAmount" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200MaxWithdrawAmount obj] : ["totalInitialMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200TotalInitialMargin obj] : ["totalMaintenanceMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200TotalMaintenanceMargin obj] : ["totalMarginBalance" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200TotalMarginBalance obj] : ["totalOpenOrderInitialMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200TotalOpenOrderInitialMargin obj] : ["totalPositionInitialMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200TotalPositionInitialMargin obj] : ["totalUnrealizedProfit" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200TotalUnrealizedProfit obj] : ["totalWalletBalance" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200TotalWalletBalance obj] : ["updateTime" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200UpdateTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200Asset obj] : ["assets" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200Assets obj] : ["canDeposit" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200CanDeposit obj] : ["canTrade" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200CanTrade obj] : ["canWithdraw" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200CanWithdraw obj] : ["email" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200Email obj] : ["feeTier" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200FeeTier obj] : ["maxWithdrawAmount" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200MaxWithdrawAmount obj] : ["totalInitialMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200TotalInitialMargin obj] : ["totalMaintenanceMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200TotalMaintenanceMargin obj] : ["totalMarginBalance" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200TotalMarginBalance obj] : ["totalOpenOrderInitialMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200TotalOpenOrderInitialMargin obj] : ["totalPositionInitialMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200TotalPositionInitialMargin obj] : ["totalUnrealizedProfit" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200TotalUnrealizedProfit obj] : ["totalWalletBalance" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200TotalWalletBalance obj] : ["updateTime" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200UpdateTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1SubAccountFuturesAccountResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1SubAccountFuturesAccountResponseBody200" (\obj -> (((((((((((((((GHC.Base.pure GetSapiV1SubAccountFuturesAccountResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "assets")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "canDeposit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "canTrade")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "canWithdraw")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "feeTier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "maxWithdrawAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalInitialMargin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalMaintenanceMargin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalMarginBalance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalOpenOrderInitialMargin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalPositionInitialMargin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalUnrealizedProfit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalWalletBalance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "updateTime"))

-- | Create a new 'GetSapiV1SubAccountFuturesAccountResponseBody200' with all required fields.
mkGetSapiV1SubAccountFuturesAccountResponseBody200 ::
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200Asset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200Assets'
  [GetSapiV1SubAccountFuturesAccountResponseBody200Assets] ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200CanDeposit'
  GHC.Types.Bool ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200CanTrade'
  GHC.Types.Bool ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200CanWithdraw'
  GHC.Types.Bool ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200Email'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200FeeTier'
  GHC.Int.Int64 ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200MaxWithdrawAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200TotalInitialMargin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200TotalMaintenanceMargin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200TotalMarginBalance'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200TotalOpenOrderInitialMargin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200TotalPositionInitialMargin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200TotalUnrealizedProfit'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200TotalWalletBalance'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200UpdateTime'
  GHC.Int.Int64 ->
  GetSapiV1SubAccountFuturesAccountResponseBody200
mkGetSapiV1SubAccountFuturesAccountResponseBody200 getSapiV1SubAccountFuturesAccountResponseBody200Asset getSapiV1SubAccountFuturesAccountResponseBody200Assets getSapiV1SubAccountFuturesAccountResponseBody200CanDeposit getSapiV1SubAccountFuturesAccountResponseBody200CanTrade getSapiV1SubAccountFuturesAccountResponseBody200CanWithdraw getSapiV1SubAccountFuturesAccountResponseBody200Email getSapiV1SubAccountFuturesAccountResponseBody200FeeTier getSapiV1SubAccountFuturesAccountResponseBody200MaxWithdrawAmount getSapiV1SubAccountFuturesAccountResponseBody200TotalInitialMargin getSapiV1SubAccountFuturesAccountResponseBody200TotalMaintenanceMargin getSapiV1SubAccountFuturesAccountResponseBody200TotalMarginBalance getSapiV1SubAccountFuturesAccountResponseBody200TotalOpenOrderInitialMargin getSapiV1SubAccountFuturesAccountResponseBody200TotalPositionInitialMargin getSapiV1SubAccountFuturesAccountResponseBody200TotalUnrealizedProfit getSapiV1SubAccountFuturesAccountResponseBody200TotalWalletBalance getSapiV1SubAccountFuturesAccountResponseBody200UpdateTime =
  GetSapiV1SubAccountFuturesAccountResponseBody200
    { getSapiV1SubAccountFuturesAccountResponseBody200Asset = getSapiV1SubAccountFuturesAccountResponseBody200Asset,
      getSapiV1SubAccountFuturesAccountResponseBody200Assets = getSapiV1SubAccountFuturesAccountResponseBody200Assets,
      getSapiV1SubAccountFuturesAccountResponseBody200CanDeposit = getSapiV1SubAccountFuturesAccountResponseBody200CanDeposit,
      getSapiV1SubAccountFuturesAccountResponseBody200CanTrade = getSapiV1SubAccountFuturesAccountResponseBody200CanTrade,
      getSapiV1SubAccountFuturesAccountResponseBody200CanWithdraw = getSapiV1SubAccountFuturesAccountResponseBody200CanWithdraw,
      getSapiV1SubAccountFuturesAccountResponseBody200Email = getSapiV1SubAccountFuturesAccountResponseBody200Email,
      getSapiV1SubAccountFuturesAccountResponseBody200FeeTier = getSapiV1SubAccountFuturesAccountResponseBody200FeeTier,
      getSapiV1SubAccountFuturesAccountResponseBody200MaxWithdrawAmount = getSapiV1SubAccountFuturesAccountResponseBody200MaxWithdrawAmount,
      getSapiV1SubAccountFuturesAccountResponseBody200TotalInitialMargin = getSapiV1SubAccountFuturesAccountResponseBody200TotalInitialMargin,
      getSapiV1SubAccountFuturesAccountResponseBody200TotalMaintenanceMargin = getSapiV1SubAccountFuturesAccountResponseBody200TotalMaintenanceMargin,
      getSapiV1SubAccountFuturesAccountResponseBody200TotalMarginBalance = getSapiV1SubAccountFuturesAccountResponseBody200TotalMarginBalance,
      getSapiV1SubAccountFuturesAccountResponseBody200TotalOpenOrderInitialMargin = getSapiV1SubAccountFuturesAccountResponseBody200TotalOpenOrderInitialMargin,
      getSapiV1SubAccountFuturesAccountResponseBody200TotalPositionInitialMargin = getSapiV1SubAccountFuturesAccountResponseBody200TotalPositionInitialMargin,
      getSapiV1SubAccountFuturesAccountResponseBody200TotalUnrealizedProfit = getSapiV1SubAccountFuturesAccountResponseBody200TotalUnrealizedProfit,
      getSapiV1SubAccountFuturesAccountResponseBody200TotalWalletBalance = getSapiV1SubAccountFuturesAccountResponseBody200TotalWalletBalance,
      getSapiV1SubAccountFuturesAccountResponseBody200UpdateTime = getSapiV1SubAccountFuturesAccountResponseBody200UpdateTime
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/futures\/account.GET.responses.200.content.application\/json.schema.properties.assets.items@ in the specification.
data GetSapiV1SubAccountFuturesAccountResponseBody200Assets = GetSapiV1SubAccountFuturesAccountResponseBody200Assets
  { -- | asset
    getSapiV1SubAccountFuturesAccountResponseBody200AssetsAsset :: Data.Text.Internal.Text,
    -- | initialMargin
    getSapiV1SubAccountFuturesAccountResponseBody200AssetsInitialMargin :: Data.Text.Internal.Text,
    -- | maintenanceMargin
    getSapiV1SubAccountFuturesAccountResponseBody200AssetsMaintenanceMargin :: Data.Text.Internal.Text,
    -- | marginBalance
    getSapiV1SubAccountFuturesAccountResponseBody200AssetsMarginBalance :: Data.Text.Internal.Text,
    -- | maxWithdrawAmount
    getSapiV1SubAccountFuturesAccountResponseBody200AssetsMaxWithdrawAmount :: Data.Text.Internal.Text,
    -- | openOrderInitialMargin
    getSapiV1SubAccountFuturesAccountResponseBody200AssetsOpenOrderInitialMargin :: Data.Text.Internal.Text,
    -- | positionInitialMargin
    getSapiV1SubAccountFuturesAccountResponseBody200AssetsPositionInitialMargin :: Data.Text.Internal.Text,
    -- | unrealizedProfit
    getSapiV1SubAccountFuturesAccountResponseBody200AssetsUnrealizedProfit :: Data.Text.Internal.Text,
    -- | walletBalance
    getSapiV1SubAccountFuturesAccountResponseBody200AssetsWalletBalance :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1SubAccountFuturesAccountResponseBody200Assets where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsAsset obj] : ["initialMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsInitialMargin obj] : ["maintenanceMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsMaintenanceMargin obj] : ["marginBalance" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsMarginBalance obj] : ["maxWithdrawAmount" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsMaxWithdrawAmount obj] : ["openOrderInitialMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsOpenOrderInitialMargin obj] : ["positionInitialMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsPositionInitialMargin obj] : ["unrealizedProfit" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsUnrealizedProfit obj] : ["walletBalance" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsWalletBalance obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsAsset obj] : ["initialMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsInitialMargin obj] : ["maintenanceMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsMaintenanceMargin obj] : ["marginBalance" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsMarginBalance obj] : ["maxWithdrawAmount" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsMaxWithdrawAmount obj] : ["openOrderInitialMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsOpenOrderInitialMargin obj] : ["positionInitialMargin" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsPositionInitialMargin obj] : ["unrealizedProfit" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsUnrealizedProfit obj] : ["walletBalance" Data.Aeson.Types.ToJSON..= getSapiV1SubAccountFuturesAccountResponseBody200AssetsWalletBalance obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1SubAccountFuturesAccountResponseBody200Assets where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1SubAccountFuturesAccountResponseBody200Assets" (\obj -> ((((((((GHC.Base.pure GetSapiV1SubAccountFuturesAccountResponseBody200Assets GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "initialMargin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "maintenanceMargin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "marginBalance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "maxWithdrawAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "openOrderInitialMargin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "positionInitialMargin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "unrealizedProfit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "walletBalance"))

-- | Create a new 'GetSapiV1SubAccountFuturesAccountResponseBody200Assets' with all required fields.
mkGetSapiV1SubAccountFuturesAccountResponseBody200Assets ::
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200AssetsAsset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200AssetsInitialMargin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200AssetsMaintenanceMargin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200AssetsMarginBalance'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200AssetsMaxWithdrawAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200AssetsOpenOrderInitialMargin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200AssetsPositionInitialMargin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200AssetsUnrealizedProfit'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1SubAccountFuturesAccountResponseBody200AssetsWalletBalance'
  Data.Text.Internal.Text ->
  GetSapiV1SubAccountFuturesAccountResponseBody200Assets
mkGetSapiV1SubAccountFuturesAccountResponseBody200Assets getSapiV1SubAccountFuturesAccountResponseBody200AssetsAsset getSapiV1SubAccountFuturesAccountResponseBody200AssetsInitialMargin getSapiV1SubAccountFuturesAccountResponseBody200AssetsMaintenanceMargin getSapiV1SubAccountFuturesAccountResponseBody200AssetsMarginBalance getSapiV1SubAccountFuturesAccountResponseBody200AssetsMaxWithdrawAmount getSapiV1SubAccountFuturesAccountResponseBody200AssetsOpenOrderInitialMargin getSapiV1SubAccountFuturesAccountResponseBody200AssetsPositionInitialMargin getSapiV1SubAccountFuturesAccountResponseBody200AssetsUnrealizedProfit getSapiV1SubAccountFuturesAccountResponseBody200AssetsWalletBalance =
  GetSapiV1SubAccountFuturesAccountResponseBody200Assets
    { getSapiV1SubAccountFuturesAccountResponseBody200AssetsAsset = getSapiV1SubAccountFuturesAccountResponseBody200AssetsAsset,
      getSapiV1SubAccountFuturesAccountResponseBody200AssetsInitialMargin = getSapiV1SubAccountFuturesAccountResponseBody200AssetsInitialMargin,
      getSapiV1SubAccountFuturesAccountResponseBody200AssetsMaintenanceMargin = getSapiV1SubAccountFuturesAccountResponseBody200AssetsMaintenanceMargin,
      getSapiV1SubAccountFuturesAccountResponseBody200AssetsMarginBalance = getSapiV1SubAccountFuturesAccountResponseBody200AssetsMarginBalance,
      getSapiV1SubAccountFuturesAccountResponseBody200AssetsMaxWithdrawAmount = getSapiV1SubAccountFuturesAccountResponseBody200AssetsMaxWithdrawAmount,
      getSapiV1SubAccountFuturesAccountResponseBody200AssetsOpenOrderInitialMargin = getSapiV1SubAccountFuturesAccountResponseBody200AssetsOpenOrderInitialMargin,
      getSapiV1SubAccountFuturesAccountResponseBody200AssetsPositionInitialMargin = getSapiV1SubAccountFuturesAccountResponseBody200AssetsPositionInitialMargin,
      getSapiV1SubAccountFuturesAccountResponseBody200AssetsUnrealizedProfit = getSapiV1SubAccountFuturesAccountResponseBody200AssetsUnrealizedProfit,
      getSapiV1SubAccountFuturesAccountResponseBody200AssetsWalletBalance = getSapiV1SubAccountFuturesAccountResponseBody200AssetsWalletBalance
    }

-- | > GET /sapi/v1/sub-account/futures/account
--
-- The same as 'getSapiV1SubAccountFuturesAccount' but accepts an explicit configuration.
getSapiV1SubAccountFuturesAccountWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountFuturesAccountParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1SubAccountFuturesAccountResponse)
getSapiV1SubAccountFuturesAccountWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1SubAccountFuturesAccountResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1SubAccountFuturesAccountResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1SubAccountFuturesAccountResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1SubAccountFuturesAccountResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1SubAccountFuturesAccountResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/sub-account/futures/account")
          [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountFuturesAccountParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountFuturesAccountParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountFuturesAccountParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountFuturesAccountParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/sub-account/futures/account
--
-- The same as 'getSapiV1SubAccountFuturesAccount' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1SubAccountFuturesAccountRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountFuturesAccountParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1SubAccountFuturesAccountRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/sub-account/futures/account")
        [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountFuturesAccountParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountFuturesAccountParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountFuturesAccountParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountFuturesAccountParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/sub-account/futures/account
--
-- The same as 'getSapiV1SubAccountFuturesAccount' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1SubAccountFuturesAccountWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1SubAccountFuturesAccountParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1SubAccountFuturesAccountWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/sub-account/futures/account")
          [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountFuturesAccountParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1SubAccountFuturesAccountParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountFuturesAccountParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1SubAccountFuturesAccountParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
