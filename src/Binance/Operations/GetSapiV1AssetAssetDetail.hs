{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1AssetAssetDetail
module Binance.Operations.GetSapiV1AssetAssetDetail where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/asset/assetDetail
--
-- Fetch details of assets supported on Binance.
--
-- - Please get network and other deposit or withdraw details from \`GET \/sapi\/v1\/capital\/config\/getall\`.
--
-- Weight(IP): 1
getSapiV1AssetAssetDetail ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AssetAssetDetailParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1AssetAssetDetailResponse)
getSapiV1AssetAssetDetail parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1AssetAssetDetailResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1AssetAssetDetailResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1AssetAssetDetailResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1AssetAssetDetailResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1AssetAssetDetailResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/asset/assetDetail")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetAssetDetailParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetAssetDetailParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetAssetDetailParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetAssetDetailParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/asset\/assetDetail.GET.parameters@ in the specification.
data GetSapiV1AssetAssetDetailParameters = GetSapiV1AssetAssetDetailParameters
  { -- | queryAsset: Represents the parameter named \'asset\'
    getSapiV1AssetAssetDetailParametersQueryAsset :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1AssetAssetDetailParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1AssetAssetDetailParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1AssetAssetDetailParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AssetAssetDetailParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAsset" Data.Aeson.Types.ToJSON..=)) (getSapiV1AssetAssetDetailParametersQueryAsset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1AssetAssetDetailParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAsset" Data.Aeson.Types.ToJSON..=)) (getSapiV1AssetAssetDetailParametersQueryAsset obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1AssetAssetDetailParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AssetAssetDetailParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1AssetAssetDetailParameters" (\obj -> (((GHC.Base.pure GetSapiV1AssetAssetDetailParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1AssetAssetDetailParameters' with all required fields.
mkGetSapiV1AssetAssetDetailParameters ::
  -- | 'getSapiV1AssetAssetDetailParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AssetAssetDetailParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1AssetAssetDetailParameters
mkGetSapiV1AssetAssetDetailParameters getSapiV1AssetAssetDetailParametersQuerySignature getSapiV1AssetAssetDetailParametersQueryTimestamp =
  GetSapiV1AssetAssetDetailParameters
    { getSapiV1AssetAssetDetailParametersQueryAsset = GHC.Maybe.Nothing,
      getSapiV1AssetAssetDetailParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1AssetAssetDetailParametersQuerySignature = getSapiV1AssetAssetDetailParametersQuerySignature,
      getSapiV1AssetAssetDetailParametersQueryTimestamp = getSapiV1AssetAssetDetailParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1AssetAssetDetail'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1AssetAssetDetailResponseError' is used.
data GetSapiV1AssetAssetDetailResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1AssetAssetDetailResponseError GHC.Base.String
  | -- | Asset detail
    GetSapiV1AssetAssetDetailResponse200 GetSapiV1AssetAssetDetailResponseBody200
  | -- | Bad Request
    GetSapiV1AssetAssetDetailResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1AssetAssetDetailResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/asset\/assetDetail.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1AssetAssetDetailResponseBody200 = GetSapiV1AssetAssetDetailResponseBody200
  { -- | CTR
    getSapiV1AssetAssetDetailResponseBody200CTR :: GetSapiV1AssetAssetDetailResponseBody200CTR
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AssetAssetDetailResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["CTR" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailResponseBody200CTR obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["CTR" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailResponseBody200CTR obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AssetAssetDetailResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1AssetAssetDetailResponseBody200" (\obj -> GHC.Base.pure GetSapiV1AssetAssetDetailResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "CTR"))

-- | Create a new 'GetSapiV1AssetAssetDetailResponseBody200' with all required fields.
mkGetSapiV1AssetAssetDetailResponseBody200 ::
  -- | 'getSapiV1AssetAssetDetailResponseBody200CTR'
  GetSapiV1AssetAssetDetailResponseBody200CTR ->
  GetSapiV1AssetAssetDetailResponseBody200
mkGetSapiV1AssetAssetDetailResponseBody200 getSapiV1AssetAssetDetailResponseBody200CTR = GetSapiV1AssetAssetDetailResponseBody200 {getSapiV1AssetAssetDetailResponseBody200CTR = getSapiV1AssetAssetDetailResponseBody200CTR}

-- | Defines the object schema located at @paths.\/sapi\/v1\/asset\/assetDetail.GET.responses.200.content.application\/json.schema.properties.CTR@ in the specification.
data GetSapiV1AssetAssetDetailResponseBody200CTR = GetSapiV1AssetAssetDetailResponseBody200CTR
  { -- | depositStatus: deposit status (false if ALL of networks\' are false)
    getSapiV1AssetAssetDetailResponseBody200CTRDepositStatus :: GHC.Types.Bool,
    -- | depositTip
    getSapiV1AssetAssetDetailResponseBody200CTRDepositTip :: Data.Text.Internal.Text,
    -- | minWithdrawAmount
    getSapiV1AssetAssetDetailResponseBody200CTRMinWithdrawAmount :: Data.Text.Internal.Text,
    -- | withdrawFee
    getSapiV1AssetAssetDetailResponseBody200CTRWithdrawFee :: GHC.Int.Int64,
    -- | withdrawStatus: withdrawStatus status (false if ALL of networks\' are false)
    getSapiV1AssetAssetDetailResponseBody200CTRWithdrawStatus :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AssetAssetDetailResponseBody200CTR where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["depositStatus" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailResponseBody200CTRDepositStatus obj] : ["depositTip" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailResponseBody200CTRDepositTip obj] : ["minWithdrawAmount" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailResponseBody200CTRMinWithdrawAmount obj] : ["withdrawFee" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailResponseBody200CTRWithdrawFee obj] : ["withdrawStatus" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailResponseBody200CTRWithdrawStatus obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["depositStatus" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailResponseBody200CTRDepositStatus obj] : ["depositTip" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailResponseBody200CTRDepositTip obj] : ["minWithdrawAmount" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailResponseBody200CTRMinWithdrawAmount obj] : ["withdrawFee" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailResponseBody200CTRWithdrawFee obj] : ["withdrawStatus" Data.Aeson.Types.ToJSON..= getSapiV1AssetAssetDetailResponseBody200CTRWithdrawStatus obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AssetAssetDetailResponseBody200CTR where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1AssetAssetDetailResponseBody200CTR" (\obj -> ((((GHC.Base.pure GetSapiV1AssetAssetDetailResponseBody200CTR GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "depositStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "depositTip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "minWithdrawAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "withdrawFee")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "withdrawStatus"))

-- | Create a new 'GetSapiV1AssetAssetDetailResponseBody200CTR' with all required fields.
mkGetSapiV1AssetAssetDetailResponseBody200CTR ::
  -- | 'getSapiV1AssetAssetDetailResponseBody200CTRDepositStatus'
  GHC.Types.Bool ->
  -- | 'getSapiV1AssetAssetDetailResponseBody200CTRDepositTip'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AssetAssetDetailResponseBody200CTRMinWithdrawAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AssetAssetDetailResponseBody200CTRWithdrawFee'
  GHC.Int.Int64 ->
  -- | 'getSapiV1AssetAssetDetailResponseBody200CTRWithdrawStatus'
  GHC.Types.Bool ->
  GetSapiV1AssetAssetDetailResponseBody200CTR
mkGetSapiV1AssetAssetDetailResponseBody200CTR getSapiV1AssetAssetDetailResponseBody200CTRDepositStatus getSapiV1AssetAssetDetailResponseBody200CTRDepositTip getSapiV1AssetAssetDetailResponseBody200CTRMinWithdrawAmount getSapiV1AssetAssetDetailResponseBody200CTRWithdrawFee getSapiV1AssetAssetDetailResponseBody200CTRWithdrawStatus =
  GetSapiV1AssetAssetDetailResponseBody200CTR
    { getSapiV1AssetAssetDetailResponseBody200CTRDepositStatus = getSapiV1AssetAssetDetailResponseBody200CTRDepositStatus,
      getSapiV1AssetAssetDetailResponseBody200CTRDepositTip = getSapiV1AssetAssetDetailResponseBody200CTRDepositTip,
      getSapiV1AssetAssetDetailResponseBody200CTRMinWithdrawAmount = getSapiV1AssetAssetDetailResponseBody200CTRMinWithdrawAmount,
      getSapiV1AssetAssetDetailResponseBody200CTRWithdrawFee = getSapiV1AssetAssetDetailResponseBody200CTRWithdrawFee,
      getSapiV1AssetAssetDetailResponseBody200CTRWithdrawStatus = getSapiV1AssetAssetDetailResponseBody200CTRWithdrawStatus
    }

-- | > GET /sapi/v1/asset/assetDetail
--
-- The same as 'getSapiV1AssetAssetDetail' but accepts an explicit configuration.
getSapiV1AssetAssetDetailWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AssetAssetDetailParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1AssetAssetDetailResponse)
getSapiV1AssetAssetDetailWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1AssetAssetDetailResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1AssetAssetDetailResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1AssetAssetDetailResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1AssetAssetDetailResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1AssetAssetDetailResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/asset/assetDetail")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetAssetDetailParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetAssetDetailParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetAssetDetailParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetAssetDetailParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/asset/assetDetail
--
-- The same as 'getSapiV1AssetAssetDetail' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1AssetAssetDetailRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AssetAssetDetailParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1AssetAssetDetailRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/asset/assetDetail")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetAssetDetailParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetAssetDetailParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetAssetDetailParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetAssetDetailParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/asset/assetDetail
--
-- The same as 'getSapiV1AssetAssetDetail' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1AssetAssetDetailWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AssetAssetDetailParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1AssetAssetDetailWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/asset/assetDetail")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetAssetDetailParametersQueryAsset parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AssetAssetDetailParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetAssetDetailParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AssetAssetDetailParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
