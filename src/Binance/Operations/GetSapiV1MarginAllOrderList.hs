{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1MarginAllOrderList
module Binance.Operations.GetSapiV1MarginAllOrderList where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/margin/allOrderList
--
-- Retrieves all OCO for a specific margin account based on provided optional parameters
--
-- Weight(IP): 200
getSapiV1MarginAllOrderList ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginAllOrderListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1MarginAllOrderListResponse)
getSapiV1MarginAllOrderList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1MarginAllOrderListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginAllOrderListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ([GetSapiV1MarginAllOrderListResponseBody200])
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginAllOrderListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginAllOrderListResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/allOrderList")
        [ Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "fromId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryFromId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAllOrderListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAllOrderListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/allOrderList.GET.parameters@ in the specification.
data GetSapiV1MarginAllOrderListParameters = GetSapiV1MarginAllOrderListParameters
  { -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginAllOrderListParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryFromId: Represents the parameter named \'fromId\'
    --
    -- If supplied, neither \`startTime\` or \`endTime\` can be provided
    getSapiV1MarginAllOrderListParametersQueryFromId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryIsIsolated: Represents the parameter named \'isIsolated\'
    --
    -- * \`TRUE\` - For isolated margin
    -- * \`FALSE\` - Default, not for isolated margin
    getSapiV1MarginAllOrderListParametersQueryIsIsolated :: (GHC.Maybe.Maybe GetSapiV1MarginAllOrderListParametersQueryIsIsolated),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- Default Value: 500; Max Value: 1000
    getSapiV1MarginAllOrderListParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1MarginAllOrderListParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1MarginAllOrderListParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginAllOrderListParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySymbol: Represents the parameter named \'symbol\'
    --
    -- Mandatory for isolated margin, not supported for cross margin
    getSapiV1MarginAllOrderListParametersQuerySymbol :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginAllOrderListParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginAllOrderListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAllOrderListParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFromId" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAllOrderListParametersQueryFromId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsIsolated" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAllOrderListParametersQueryIsIsolated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAllOrderListParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAllOrderListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAllOrderListParametersQueryStartTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAllOrderListParametersQuerySymbol obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAllOrderListParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryFromId" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAllOrderListParametersQueryFromId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsIsolated" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAllOrderListParametersQueryIsIsolated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAllOrderListParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAllOrderListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAllOrderListParametersQueryStartTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAllOrderListParametersQuerySymbol obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginAllOrderListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginAllOrderListParameters" (\obj -> ((((((((GHC.Base.pure GetSapiV1MarginAllOrderListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryFromId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryIsIsolated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySymbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1MarginAllOrderListParameters' with all required fields.
mkGetSapiV1MarginAllOrderListParameters ::
  -- | 'getSapiV1MarginAllOrderListParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAllOrderListParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1MarginAllOrderListParameters
mkGetSapiV1MarginAllOrderListParameters getSapiV1MarginAllOrderListParametersQuerySignature getSapiV1MarginAllOrderListParametersQueryTimestamp =
  GetSapiV1MarginAllOrderListParameters
    { getSapiV1MarginAllOrderListParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1MarginAllOrderListParametersQueryFromId = GHC.Maybe.Nothing,
      getSapiV1MarginAllOrderListParametersQueryIsIsolated = GHC.Maybe.Nothing,
      getSapiV1MarginAllOrderListParametersQueryLimit = GHC.Maybe.Nothing,
      getSapiV1MarginAllOrderListParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1MarginAllOrderListParametersQuerySignature = getSapiV1MarginAllOrderListParametersQuerySignature,
      getSapiV1MarginAllOrderListParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1MarginAllOrderListParametersQuerySymbol = GHC.Maybe.Nothing,
      getSapiV1MarginAllOrderListParametersQueryTimestamp = getSapiV1MarginAllOrderListParametersQueryTimestamp
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/margin\/allOrderList.GET.parameters.properties.queryIsIsolated@ in the specification.
--
-- Represents the parameter named \'isIsolated\'
--
-- * \`TRUE\` - For isolated margin
-- * \`FALSE\` - Default, not for isolated margin
data GetSapiV1MarginAllOrderListParametersQueryIsIsolated
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1MarginAllOrderListParametersQueryIsIsolatedOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1MarginAllOrderListParametersQueryIsIsolatedTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"TRUE"@
    GetSapiV1MarginAllOrderListParametersQueryIsIsolatedEnumTRUE
  | -- | Represents the JSON value @"FALSE"@
    GetSapiV1MarginAllOrderListParametersQueryIsIsolatedEnumFALSE
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginAllOrderListParametersQueryIsIsolated where
  toJSON (GetSapiV1MarginAllOrderListParametersQueryIsIsolatedOther val) = val
  toJSON (GetSapiV1MarginAllOrderListParametersQueryIsIsolatedTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1MarginAllOrderListParametersQueryIsIsolatedEnumTRUE) = "TRUE"
  toJSON (GetSapiV1MarginAllOrderListParametersQueryIsIsolatedEnumFALSE) = "FALSE"

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginAllOrderListParametersQueryIsIsolated where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "TRUE" -> GetSapiV1MarginAllOrderListParametersQueryIsIsolatedEnumTRUE
            | val GHC.Classes.== "FALSE" -> GetSapiV1MarginAllOrderListParametersQueryIsIsolatedEnumFALSE
            | GHC.Base.otherwise -> GetSapiV1MarginAllOrderListParametersQueryIsIsolatedOther val
      )

-- | Represents a response of the operation 'getSapiV1MarginAllOrderList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1MarginAllOrderListResponseError' is used.
data GetSapiV1MarginAllOrderListResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1MarginAllOrderListResponseError GHC.Base.String
  | -- | List of Margin OCO orders
    GetSapiV1MarginAllOrderListResponse200 ([GetSapiV1MarginAllOrderListResponseBody200])
  | -- | Bad Request
    GetSapiV1MarginAllOrderListResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1MarginAllOrderListResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/allOrderList.GET.responses.200.content.application\/json.schema.items@ in the specification.
data GetSapiV1MarginAllOrderListResponseBody200 = GetSapiV1MarginAllOrderListResponseBody200
  { -- | contingencyType
    getSapiV1MarginAllOrderListResponseBody200ContingencyType :: Data.Text.Internal.Text,
    -- | isIsolated
    getSapiV1MarginAllOrderListResponseBody200IsIsolated :: GHC.Types.Bool,
    -- | listClientOrderId
    getSapiV1MarginAllOrderListResponseBody200ListClientOrderId :: Data.Text.Internal.Text,
    -- | listOrderStatus
    getSapiV1MarginAllOrderListResponseBody200ListOrderStatus :: Data.Text.Internal.Text,
    -- | listStatusType
    getSapiV1MarginAllOrderListResponseBody200ListStatusType :: Data.Text.Internal.Text,
    -- | orderListId
    getSapiV1MarginAllOrderListResponseBody200OrderListId :: GHC.Int.Int64,
    -- | orders
    getSapiV1MarginAllOrderListResponseBody200Orders :: ([GetSapiV1MarginAllOrderListResponseBody200Orders]),
    -- | symbol
    getSapiV1MarginAllOrderListResponseBody200Symbol :: Data.Text.Internal.Text,
    -- | transactionTime
    getSapiV1MarginAllOrderListResponseBody200TransactionTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginAllOrderListResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["contingencyType" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200ContingencyType obj] : ["isIsolated" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200IsIsolated obj] : ["listClientOrderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200ListClientOrderId obj] : ["listOrderStatus" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200ListOrderStatus obj] : ["listStatusType" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200ListStatusType obj] : ["orderListId" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200OrderListId obj] : ["orders" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200Orders obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200Symbol obj] : ["transactionTime" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200TransactionTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["contingencyType" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200ContingencyType obj] : ["isIsolated" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200IsIsolated obj] : ["listClientOrderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200ListClientOrderId obj] : ["listOrderStatus" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200ListOrderStatus obj] : ["listStatusType" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200ListStatusType obj] : ["orderListId" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200OrderListId obj] : ["orders" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200Orders obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200Symbol obj] : ["transactionTime" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200TransactionTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginAllOrderListResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginAllOrderListResponseBody200" (\obj -> ((((((((GHC.Base.pure GetSapiV1MarginAllOrderListResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "contingencyType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "isIsolated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "listClientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "listOrderStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "listStatusType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderListId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orders")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transactionTime"))

-- | Create a new 'GetSapiV1MarginAllOrderListResponseBody200' with all required fields.
mkGetSapiV1MarginAllOrderListResponseBody200 ::
  -- | 'getSapiV1MarginAllOrderListResponseBody200ContingencyType'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAllOrderListResponseBody200IsIsolated'
  GHC.Types.Bool ->
  -- | 'getSapiV1MarginAllOrderListResponseBody200ListClientOrderId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAllOrderListResponseBody200ListOrderStatus'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAllOrderListResponseBody200ListStatusType'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAllOrderListResponseBody200OrderListId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MarginAllOrderListResponseBody200Orders'
  [GetSapiV1MarginAllOrderListResponseBody200Orders] ->
  -- | 'getSapiV1MarginAllOrderListResponseBody200Symbol'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAllOrderListResponseBody200TransactionTime'
  GHC.Int.Int64 ->
  GetSapiV1MarginAllOrderListResponseBody200
mkGetSapiV1MarginAllOrderListResponseBody200 getSapiV1MarginAllOrderListResponseBody200ContingencyType getSapiV1MarginAllOrderListResponseBody200IsIsolated getSapiV1MarginAllOrderListResponseBody200ListClientOrderId getSapiV1MarginAllOrderListResponseBody200ListOrderStatus getSapiV1MarginAllOrderListResponseBody200ListStatusType getSapiV1MarginAllOrderListResponseBody200OrderListId getSapiV1MarginAllOrderListResponseBody200Orders getSapiV1MarginAllOrderListResponseBody200Symbol getSapiV1MarginAllOrderListResponseBody200TransactionTime =
  GetSapiV1MarginAllOrderListResponseBody200
    { getSapiV1MarginAllOrderListResponseBody200ContingencyType = getSapiV1MarginAllOrderListResponseBody200ContingencyType,
      getSapiV1MarginAllOrderListResponseBody200IsIsolated = getSapiV1MarginAllOrderListResponseBody200IsIsolated,
      getSapiV1MarginAllOrderListResponseBody200ListClientOrderId = getSapiV1MarginAllOrderListResponseBody200ListClientOrderId,
      getSapiV1MarginAllOrderListResponseBody200ListOrderStatus = getSapiV1MarginAllOrderListResponseBody200ListOrderStatus,
      getSapiV1MarginAllOrderListResponseBody200ListStatusType = getSapiV1MarginAllOrderListResponseBody200ListStatusType,
      getSapiV1MarginAllOrderListResponseBody200OrderListId = getSapiV1MarginAllOrderListResponseBody200OrderListId,
      getSapiV1MarginAllOrderListResponseBody200Orders = getSapiV1MarginAllOrderListResponseBody200Orders,
      getSapiV1MarginAllOrderListResponseBody200Symbol = getSapiV1MarginAllOrderListResponseBody200Symbol,
      getSapiV1MarginAllOrderListResponseBody200TransactionTime = getSapiV1MarginAllOrderListResponseBody200TransactionTime
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/allOrderList.GET.responses.200.content.application\/json.schema.items.properties.orders.items@ in the specification.
data GetSapiV1MarginAllOrderListResponseBody200Orders = GetSapiV1MarginAllOrderListResponseBody200Orders
  { -- | clientOrderId
    getSapiV1MarginAllOrderListResponseBody200OrdersClientOrderId :: Data.Text.Internal.Text,
    -- | orderId
    getSapiV1MarginAllOrderListResponseBody200OrdersOrderId :: GHC.Int.Int64,
    -- | symbol
    getSapiV1MarginAllOrderListResponseBody200OrdersSymbol :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginAllOrderListResponseBody200Orders where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200OrdersClientOrderId obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200OrdersOrderId obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200OrdersSymbol obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200OrdersClientOrderId obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200OrdersOrderId obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginAllOrderListResponseBody200OrdersSymbol obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginAllOrderListResponseBody200Orders where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginAllOrderListResponseBody200Orders" (\obj -> ((GHC.Base.pure GetSapiV1MarginAllOrderListResponseBody200Orders GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "clientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol"))

-- | Create a new 'GetSapiV1MarginAllOrderListResponseBody200Orders' with all required fields.
mkGetSapiV1MarginAllOrderListResponseBody200Orders ::
  -- | 'getSapiV1MarginAllOrderListResponseBody200OrdersClientOrderId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAllOrderListResponseBody200OrdersOrderId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MarginAllOrderListResponseBody200OrdersSymbol'
  Data.Text.Internal.Text ->
  GetSapiV1MarginAllOrderListResponseBody200Orders
mkGetSapiV1MarginAllOrderListResponseBody200Orders getSapiV1MarginAllOrderListResponseBody200OrdersClientOrderId getSapiV1MarginAllOrderListResponseBody200OrdersOrderId getSapiV1MarginAllOrderListResponseBody200OrdersSymbol =
  GetSapiV1MarginAllOrderListResponseBody200Orders
    { getSapiV1MarginAllOrderListResponseBody200OrdersClientOrderId = getSapiV1MarginAllOrderListResponseBody200OrdersClientOrderId,
      getSapiV1MarginAllOrderListResponseBody200OrdersOrderId = getSapiV1MarginAllOrderListResponseBody200OrdersOrderId,
      getSapiV1MarginAllOrderListResponseBody200OrdersSymbol = getSapiV1MarginAllOrderListResponseBody200OrdersSymbol
    }

-- | > GET /sapi/v1/margin/allOrderList
--
-- The same as 'getSapiV1MarginAllOrderList' but accepts an explicit configuration.
getSapiV1MarginAllOrderListWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginAllOrderListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1MarginAllOrderListResponse)
getSapiV1MarginAllOrderListWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1MarginAllOrderListResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginAllOrderListResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              ([GetSapiV1MarginAllOrderListResponseBody200])
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginAllOrderListResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginAllOrderListResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/allOrderList")
          [ Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "fromId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryFromId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAllOrderListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAllOrderListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/margin/allOrderList
--
-- The same as 'getSapiV1MarginAllOrderList' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginAllOrderListRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginAllOrderListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginAllOrderListRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/allOrderList")
        [ Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "fromId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryFromId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAllOrderListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAllOrderListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/margin/allOrderList
--
-- The same as 'getSapiV1MarginAllOrderList' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginAllOrderListWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginAllOrderListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginAllOrderListWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/allOrderList")
          [ Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "fromId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryFromId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAllOrderListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAllOrderListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAllOrderListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
