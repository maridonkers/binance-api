{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1AlgoFuturesSubOrders
module Binance.Operations.GetSapiV1AlgoFuturesSubOrders where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/algo/futures/subOrders
--
-- - You need to enable Futures Trading Permission for the api key which requests this endpoint.
-- - Base URL: https:\/\/api.binance.com
--
-- Weight(IP): 1
getSapiV1AlgoFuturesSubOrders ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AlgoFuturesSubOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1AlgoFuturesSubOrdersResponse)
getSapiV1AlgoFuturesSubOrders parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1AlgoFuturesSubOrdersResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1AlgoFuturesSubOrdersResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1AlgoFuturesSubOrdersResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1AlgoFuturesSubOrdersResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1AlgoFuturesSubOrdersResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/algo/futures/subOrders")
        [ Binance.Common.QueryParameter (Data.Text.pack "algoId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesSubOrdersParametersQueryAlgoId parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesSubOrdersParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "pageSize") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesSubOrdersParametersQueryPageSize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesSubOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesSubOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesSubOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/algo\/futures\/subOrders.GET.parameters@ in the specification.
data GetSapiV1AlgoFuturesSubOrdersParameters = GetSapiV1AlgoFuturesSubOrdersParameters
  { -- | queryAlgoId: Represents the parameter named \'algoId\'
    getSapiV1AlgoFuturesSubOrdersParametersQueryAlgoId :: GHC.Int.Int64,
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- Default 1
    getSapiV1AlgoFuturesSubOrdersParametersQueryPage :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryPageSize: Represents the parameter named \'pageSize\'
    --
    -- Page size, minimum 1, maximum 100, default 100
    getSapiV1AlgoFuturesSubOrdersParametersQueryPageSize :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1AlgoFuturesSubOrdersParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1AlgoFuturesSubOrdersParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1AlgoFuturesSubOrdersParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AlgoFuturesSubOrdersParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryAlgoId" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersParametersQueryAlgoId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesSubOrdersParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPageSize" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesSubOrdersParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesSubOrdersParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryAlgoId" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersParametersQueryAlgoId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesSubOrdersParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPageSize" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesSubOrdersParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesSubOrdersParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AlgoFuturesSubOrdersParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1AlgoFuturesSubOrdersParameters" (\obj -> (((((GHC.Base.pure GetSapiV1AlgoFuturesSubOrdersParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAlgoId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPageSize")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1AlgoFuturesSubOrdersParameters' with all required fields.
mkGetSapiV1AlgoFuturesSubOrdersParameters ::
  -- | 'getSapiV1AlgoFuturesSubOrdersParametersQueryAlgoId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1AlgoFuturesSubOrdersParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesSubOrdersParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1AlgoFuturesSubOrdersParameters
mkGetSapiV1AlgoFuturesSubOrdersParameters getSapiV1AlgoFuturesSubOrdersParametersQueryAlgoId getSapiV1AlgoFuturesSubOrdersParametersQuerySignature getSapiV1AlgoFuturesSubOrdersParametersQueryTimestamp =
  GetSapiV1AlgoFuturesSubOrdersParameters
    { getSapiV1AlgoFuturesSubOrdersParametersQueryAlgoId = getSapiV1AlgoFuturesSubOrdersParametersQueryAlgoId,
      getSapiV1AlgoFuturesSubOrdersParametersQueryPage = GHC.Maybe.Nothing,
      getSapiV1AlgoFuturesSubOrdersParametersQueryPageSize = GHC.Maybe.Nothing,
      getSapiV1AlgoFuturesSubOrdersParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1AlgoFuturesSubOrdersParametersQuerySignature = getSapiV1AlgoFuturesSubOrdersParametersQuerySignature,
      getSapiV1AlgoFuturesSubOrdersParametersQueryTimestamp = getSapiV1AlgoFuturesSubOrdersParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1AlgoFuturesSubOrders'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1AlgoFuturesSubOrdersResponseError' is used.
data GetSapiV1AlgoFuturesSubOrdersResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1AlgoFuturesSubOrdersResponseError GHC.Base.String
  | -- | Adjust Cross-Collateral LTV History
    GetSapiV1AlgoFuturesSubOrdersResponse200 GetSapiV1AlgoFuturesSubOrdersResponseBody200
  | -- | Bad Request
    GetSapiV1AlgoFuturesSubOrdersResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1AlgoFuturesSubOrdersResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/algo\/futures\/subOrders.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1AlgoFuturesSubOrdersResponseBody200 = GetSapiV1AlgoFuturesSubOrdersResponseBody200
  { -- | executedAmt
    getSapiV1AlgoFuturesSubOrdersResponseBody200ExecutedAmt :: Data.Text.Internal.Text,
    -- | executedQty
    getSapiV1AlgoFuturesSubOrdersResponseBody200ExecutedQty :: Data.Text.Internal.Text,
    -- | subOrders
    getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders :: ([GetSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders]),
    -- | total
    getSapiV1AlgoFuturesSubOrdersResponseBody200Total :: GHC.Int.Int32
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AlgoFuturesSubOrdersResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["executedAmt" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200ExecutedAmt obj] : ["executedQty" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200ExecutedQty obj] : ["subOrders" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200Total obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["executedAmt" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200ExecutedAmt obj] : ["executedQty" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200ExecutedQty obj] : ["subOrders" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200Total obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AlgoFuturesSubOrdersResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1AlgoFuturesSubOrdersResponseBody200" (\obj -> (((GHC.Base.pure GetSapiV1AlgoFuturesSubOrdersResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "executedAmt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "executedQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "subOrders")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'GetSapiV1AlgoFuturesSubOrdersResponseBody200' with all required fields.
mkGetSapiV1AlgoFuturesSubOrdersResponseBody200 ::
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200ExecutedAmt'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200ExecutedQty'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders'
  [GetSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders] ->
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200Total'
  GHC.Int.Int32 ->
  GetSapiV1AlgoFuturesSubOrdersResponseBody200
mkGetSapiV1AlgoFuturesSubOrdersResponseBody200 getSapiV1AlgoFuturesSubOrdersResponseBody200ExecutedAmt getSapiV1AlgoFuturesSubOrdersResponseBody200ExecutedQty getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders getSapiV1AlgoFuturesSubOrdersResponseBody200Total =
  GetSapiV1AlgoFuturesSubOrdersResponseBody200
    { getSapiV1AlgoFuturesSubOrdersResponseBody200ExecutedAmt = getSapiV1AlgoFuturesSubOrdersResponseBody200ExecutedAmt,
      getSapiV1AlgoFuturesSubOrdersResponseBody200ExecutedQty = getSapiV1AlgoFuturesSubOrdersResponseBody200ExecutedQty,
      getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders = getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders,
      getSapiV1AlgoFuturesSubOrdersResponseBody200Total = getSapiV1AlgoFuturesSubOrdersResponseBody200Total
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/algo\/futures\/subOrders.GET.responses.200.content.application\/json.schema.properties.subOrders.items@ in the specification.
data GetSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders = GetSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders
  { -- | algoId
    getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersAlgoId :: GHC.Int.Int64,
    -- | avgPrice
    getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersAvgPrice :: Data.Text.Internal.Text,
    -- | bookTime
    getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersBookTime :: GHC.Int.Int64,
    -- | executedAmt
    getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersExecutedAmt :: Data.Text.Internal.Text,
    -- | executedQty
    getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersExecutedQty :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | feeAmt
    getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersFeeAmt :: Data.Text.Internal.Text,
    -- | feeAsset
    getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersFeeAsset :: Data.Text.Internal.Text,
    -- | orderId
    getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrderId :: GHC.Int.Int64,
    -- | orderStatus
    getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrderStatus :: Data.Text.Internal.Text,
    -- | origQty
    getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrigQty :: Data.Text.Internal.Text,
    -- | side
    getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSide :: Data.Text.Internal.Text,
    -- | subId
    getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSubId :: GHC.Int.Int64,
    -- | symbol
    getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSymbol :: Data.Text.Internal.Text,
    -- | timeInForce
    getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersTimeInForce :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["algoId" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersAlgoId obj] : ["avgPrice" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersAvgPrice obj] : ["bookTime" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersBookTime obj] : ["executedAmt" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersExecutedAmt obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("executedQty" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersExecutedQty obj) : ["feeAmt" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersFeeAmt obj] : ["feeAsset" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersFeeAsset obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrderId obj] : ["orderStatus" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrderStatus obj] : ["origQty" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrigQty obj] : ["side" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSide obj] : ["subId" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSubId obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSymbol obj] : ["timeInForce" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersTimeInForce obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["algoId" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersAlgoId obj] : ["avgPrice" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersAvgPrice obj] : ["bookTime" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersBookTime obj] : ["executedAmt" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersExecutedAmt obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("executedQty" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersExecutedQty obj) : ["feeAmt" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersFeeAmt obj] : ["feeAsset" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersFeeAsset obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrderId obj] : ["orderStatus" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrderStatus obj] : ["origQty" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrigQty obj] : ["side" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSide obj] : ["subId" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSubId obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSymbol obj] : ["timeInForce" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersTimeInForce obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders" (\obj -> (((((((((((((GHC.Base.pure GetSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "algoId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "avgPrice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "bookTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "executedAmt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "executedQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "feeAmt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "feeAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "origQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "side")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "subId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "timeInForce"))

-- | Create a new 'GetSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders' with all required fields.
mkGetSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders ::
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersAlgoId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersAvgPrice'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersBookTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersExecutedAmt'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersFeeAmt'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersFeeAsset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrderId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrderStatus'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrigQty'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSide'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSubId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSymbol'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersTimeInForce'
  Data.Text.Internal.Text ->
  GetSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders
mkGetSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersAlgoId getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersAvgPrice getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersBookTime getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersExecutedAmt getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersFeeAmt getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersFeeAsset getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrderId getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrderStatus getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrigQty getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSide getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSubId getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSymbol getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersTimeInForce =
  GetSapiV1AlgoFuturesSubOrdersResponseBody200SubOrders
    { getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersAlgoId = getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersAlgoId,
      getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersAvgPrice = getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersAvgPrice,
      getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersBookTime = getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersBookTime,
      getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersExecutedAmt = getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersExecutedAmt,
      getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersExecutedQty = GHC.Maybe.Nothing,
      getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersFeeAmt = getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersFeeAmt,
      getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersFeeAsset = getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersFeeAsset,
      getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrderId = getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrderId,
      getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrderStatus = getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrderStatus,
      getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrigQty = getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersOrigQty,
      getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSide = getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSide,
      getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSubId = getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSubId,
      getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSymbol = getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersSymbol,
      getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersTimeInForce = getSapiV1AlgoFuturesSubOrdersResponseBody200SubOrdersTimeInForce
    }

-- | > GET /sapi/v1/algo/futures/subOrders
--
-- The same as 'getSapiV1AlgoFuturesSubOrders' but accepts an explicit configuration.
getSapiV1AlgoFuturesSubOrdersWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AlgoFuturesSubOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1AlgoFuturesSubOrdersResponse)
getSapiV1AlgoFuturesSubOrdersWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1AlgoFuturesSubOrdersResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1AlgoFuturesSubOrdersResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1AlgoFuturesSubOrdersResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1AlgoFuturesSubOrdersResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1AlgoFuturesSubOrdersResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/algo/futures/subOrders")
          [ Binance.Common.QueryParameter (Data.Text.pack "algoId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesSubOrdersParametersQueryAlgoId parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesSubOrdersParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "pageSize") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesSubOrdersParametersQueryPageSize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesSubOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesSubOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesSubOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/algo/futures/subOrders
--
-- The same as 'getSapiV1AlgoFuturesSubOrders' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1AlgoFuturesSubOrdersRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AlgoFuturesSubOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1AlgoFuturesSubOrdersRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/algo/futures/subOrders")
        [ Binance.Common.QueryParameter (Data.Text.pack "algoId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesSubOrdersParametersQueryAlgoId parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesSubOrdersParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "pageSize") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesSubOrdersParametersQueryPageSize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesSubOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesSubOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesSubOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/algo/futures/subOrders
--
-- The same as 'getSapiV1AlgoFuturesSubOrders' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1AlgoFuturesSubOrdersWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AlgoFuturesSubOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1AlgoFuturesSubOrdersWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/algo/futures/subOrders")
          [ Binance.Common.QueryParameter (Data.Text.pack "algoId") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesSubOrdersParametersQueryAlgoId parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesSubOrdersParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "pageSize") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesSubOrdersParametersQueryPageSize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesSubOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesSubOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesSubOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
