{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1AlgoFuturesHistoricalOrders
module Binance.Operations.GetSapiV1AlgoFuturesHistoricalOrders where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/algo/futures/historicalOrders
--
-- - You need to enable Futures Trading Permission for the api key which requests this endpoint.
-- - Base URL: https:\/\/api.binance.com
--
-- Weight(IP): 1
getSapiV1AlgoFuturesHistoricalOrders ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AlgoFuturesHistoricalOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1AlgoFuturesHistoricalOrdersResponse)
getSapiV1AlgoFuturesHistoricalOrders parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1AlgoFuturesHistoricalOrdersResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1AlgoFuturesHistoricalOrdersResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1AlgoFuturesHistoricalOrdersResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1AlgoFuturesHistoricalOrdersResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/algo/futures/historicalOrders")
        [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "side") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySide parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "pageSize") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPageSize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesHistoricalOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/algo\/futures\/historicalOrders.GET.parameters@ in the specification.
data GetSapiV1AlgoFuturesHistoricalOrdersParameters = GetSapiV1AlgoFuturesHistoricalOrdersParameters
  { -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1AlgoFuturesHistoricalOrdersParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryPage: Represents the parameter named \'page\'
    --
    -- Default 1
    getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPage :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryPageSize: Represents the parameter named \'pageSize\'
    --
    -- Page size, minimum 1, maximum 100, default 100
    getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPageSize :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1AlgoFuturesHistoricalOrdersParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySide: Represents the parameter named \'side\'
    getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySide :: (GHC.Maybe.Maybe GetSapiV1AlgoFuturesHistoricalOrdersParametersQuerySide),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1AlgoFuturesHistoricalOrdersParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySymbol: Represents the parameter named \'symbol\'
    --
    -- Trading symbol, e.g. BNBUSDT
    getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySymbol :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1AlgoFuturesHistoricalOrdersParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AlgoFuturesHistoricalOrdersParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesHistoricalOrdersParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPageSize" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesHistoricalOrdersParametersQueryRecvWindow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySide" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySide obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesHistoricalOrdersParametersQueryStartTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySymbol obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesHistoricalOrdersParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPage" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPageSize" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesHistoricalOrdersParametersQueryRecvWindow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySide" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySide obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesHistoricalOrdersParametersQueryStartTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySymbol obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AlgoFuturesHistoricalOrdersParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1AlgoFuturesHistoricalOrdersParameters" (\obj -> ((((((((GHC.Base.pure GetSapiV1AlgoFuturesHistoricalOrdersParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPageSize")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySide")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySymbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1AlgoFuturesHistoricalOrdersParameters' with all required fields.
mkGetSapiV1AlgoFuturesHistoricalOrdersParameters ::
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1AlgoFuturesHistoricalOrdersParameters
mkGetSapiV1AlgoFuturesHistoricalOrdersParameters getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySignature getSapiV1AlgoFuturesHistoricalOrdersParametersQueryTimestamp =
  GetSapiV1AlgoFuturesHistoricalOrdersParameters
    { getSapiV1AlgoFuturesHistoricalOrdersParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPage = GHC.Maybe.Nothing,
      getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPageSize = GHC.Maybe.Nothing,
      getSapiV1AlgoFuturesHistoricalOrdersParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySide = GHC.Maybe.Nothing,
      getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySignature = getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySignature,
      getSapiV1AlgoFuturesHistoricalOrdersParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySymbol = GHC.Maybe.Nothing,
      getSapiV1AlgoFuturesHistoricalOrdersParametersQueryTimestamp = getSapiV1AlgoFuturesHistoricalOrdersParametersQueryTimestamp
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/algo\/futures\/historicalOrders.GET.parameters.properties.querySide@ in the specification.
--
-- Represents the parameter named \'side\'
data GetSapiV1AlgoFuturesHistoricalOrdersParametersQuerySide
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1AlgoFuturesHistoricalOrdersParametersQuerySideOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1AlgoFuturesHistoricalOrdersParametersQuerySideTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"SELL"@
    GetSapiV1AlgoFuturesHistoricalOrdersParametersQuerySideEnumSELL
  | -- | Represents the JSON value @"BUY"@
    GetSapiV1AlgoFuturesHistoricalOrdersParametersQuerySideEnumBUY
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AlgoFuturesHistoricalOrdersParametersQuerySide where
  toJSON (GetSapiV1AlgoFuturesHistoricalOrdersParametersQuerySideOther val) = val
  toJSON (GetSapiV1AlgoFuturesHistoricalOrdersParametersQuerySideTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1AlgoFuturesHistoricalOrdersParametersQuerySideEnumSELL) = "SELL"
  toJSON (GetSapiV1AlgoFuturesHistoricalOrdersParametersQuerySideEnumBUY) = "BUY"

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AlgoFuturesHistoricalOrdersParametersQuerySide where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "SELL" -> GetSapiV1AlgoFuturesHistoricalOrdersParametersQuerySideEnumSELL
            | val GHC.Classes.== "BUY" -> GetSapiV1AlgoFuturesHistoricalOrdersParametersQuerySideEnumBUY
            | GHC.Base.otherwise -> GetSapiV1AlgoFuturesHistoricalOrdersParametersQuerySideOther val
      )

-- | Represents a response of the operation 'getSapiV1AlgoFuturesHistoricalOrders'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1AlgoFuturesHistoricalOrdersResponseError' is used.
data GetSapiV1AlgoFuturesHistoricalOrdersResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1AlgoFuturesHistoricalOrdersResponseError GHC.Base.String
  | -- | Historical Algo Orders
    GetSapiV1AlgoFuturesHistoricalOrdersResponse200 GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200
  | -- | Bad Request
    GetSapiV1AlgoFuturesHistoricalOrdersResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1AlgoFuturesHistoricalOrdersResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/algo\/futures\/historicalOrders.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200 = GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200
  { -- | orders
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders :: ([GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders]),
    -- | total
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200Total :: GHC.Int.Int32
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["orders" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200Total obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["orders" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200Total obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200" (\obj -> (GHC.Base.pure GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orders")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200' with all required fields.
mkGetSapiV1AlgoFuturesHistoricalOrdersResponseBody200 ::
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders'
  [GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders] ->
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200Total'
  GHC.Int.Int32 ->
  GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200
mkGetSapiV1AlgoFuturesHistoricalOrdersResponseBody200 getSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders getSapiV1AlgoFuturesHistoricalOrdersResponseBody200Total =
  GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200
    { getSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders,
      getSapiV1AlgoFuturesHistoricalOrdersResponseBody200Total = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200Total
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/algo\/futures\/historicalOrders.GET.responses.200.content.application\/json.schema.properties.orders.items@ in the specification.
data GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders = GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders
  { -- | algoId
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoId :: GHC.Int.Int64,
    -- | algoStatus
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoStatus :: Data.Text.Internal.Text,
    -- | algoType
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoType :: Data.Text.Internal.Text,
    -- | avgPrice
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAvgPrice :: Data.Text.Internal.Text,
    -- | bookTime
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersBookTime :: GHC.Int.Int64,
    -- | clientAlgoId
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersClientAlgoId :: Data.Text.Internal.Text,
    -- | endTime
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersEndTime :: GHC.Int.Int64,
    -- | executedAmt
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersExecutedAmt :: Data.Text.Internal.Text,
    -- | executedQty
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersExecutedQty :: Data.Text.Internal.Text,
    -- | positionSide
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersPositionSide :: Data.Text.Internal.Text,
    -- | side
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersSide :: Data.Text.Internal.Text,
    -- | symbol
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersSymbol :: Data.Text.Internal.Text,
    -- | totalQty
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersTotalQty :: Data.Text.Internal.Text,
    -- | urgency
    getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersUrgency :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["algoId" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoId obj] : ["algoStatus" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoStatus obj] : ["algoType" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoType obj] : ["avgPrice" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAvgPrice obj] : ["bookTime" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersBookTime obj] : ["clientAlgoId" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersClientAlgoId obj] : ["endTime" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersEndTime obj] : ["executedAmt" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersExecutedAmt obj] : ["executedQty" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersExecutedQty obj] : ["positionSide" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersPositionSide obj] : ["side" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersSide obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersSymbol obj] : ["totalQty" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersTotalQty obj] : ["urgency" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersUrgency obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["algoId" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoId obj] : ["algoStatus" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoStatus obj] : ["algoType" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoType obj] : ["avgPrice" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAvgPrice obj] : ["bookTime" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersBookTime obj] : ["clientAlgoId" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersClientAlgoId obj] : ["endTime" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersEndTime obj] : ["executedAmt" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersExecutedAmt obj] : ["executedQty" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersExecutedQty obj] : ["positionSide" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersPositionSide obj] : ["side" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersSide obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersSymbol obj] : ["totalQty" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersTotalQty obj] : ["urgency" Data.Aeson.Types.ToJSON..= getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersUrgency obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders" (\obj -> (((((((((((((GHC.Base.pure GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "algoId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "algoStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "algoType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "avgPrice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "bookTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "clientAlgoId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "endTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "executedAmt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "executedQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "positionSide")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "side")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "urgency"))

-- | Create a new 'GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders' with all required fields.
mkGetSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders ::
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoStatus'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoType'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAvgPrice'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersBookTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersClientAlgoId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersEndTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersExecutedAmt'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersExecutedQty'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersPositionSide'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersSide'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersSymbol'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersTotalQty'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersUrgency'
  Data.Text.Internal.Text ->
  GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders
mkGetSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoId getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoStatus getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoType getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAvgPrice getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersBookTime getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersClientAlgoId getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersEndTime getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersExecutedAmt getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersExecutedQty getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersPositionSide getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersSide getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersSymbol getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersTotalQty getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersUrgency =
  GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200Orders
    { getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoId = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoId,
      getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoStatus = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoStatus,
      getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoType = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAlgoType,
      getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAvgPrice = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersAvgPrice,
      getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersBookTime = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersBookTime,
      getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersClientAlgoId = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersClientAlgoId,
      getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersEndTime = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersEndTime,
      getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersExecutedAmt = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersExecutedAmt,
      getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersExecutedQty = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersExecutedQty,
      getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersPositionSide = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersPositionSide,
      getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersSide = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersSide,
      getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersSymbol = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersSymbol,
      getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersTotalQty = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersTotalQty,
      getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersUrgency = getSapiV1AlgoFuturesHistoricalOrdersResponseBody200OrdersUrgency
    }

-- | > GET /sapi/v1/algo/futures/historicalOrders
--
-- The same as 'getSapiV1AlgoFuturesHistoricalOrders' but accepts an explicit configuration.
getSapiV1AlgoFuturesHistoricalOrdersWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AlgoFuturesHistoricalOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1AlgoFuturesHistoricalOrdersResponse)
getSapiV1AlgoFuturesHistoricalOrdersWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1AlgoFuturesHistoricalOrdersResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1AlgoFuturesHistoricalOrdersResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1AlgoFuturesHistoricalOrdersResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1AlgoFuturesHistoricalOrdersResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1AlgoFuturesHistoricalOrdersResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/algo/futures/historicalOrders")
          [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "side") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySide parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "pageSize") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPageSize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesHistoricalOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/algo/futures/historicalOrders
--
-- The same as 'getSapiV1AlgoFuturesHistoricalOrders' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1AlgoFuturesHistoricalOrdersRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AlgoFuturesHistoricalOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1AlgoFuturesHistoricalOrdersRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/algo/futures/historicalOrders")
        [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "side") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySide parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "pageSize") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPageSize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesHistoricalOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/algo/futures/historicalOrders
--
-- The same as 'getSapiV1AlgoFuturesHistoricalOrders' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1AlgoFuturesHistoricalOrdersWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1AlgoFuturesHistoricalOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1AlgoFuturesHistoricalOrdersWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/algo/futures/historicalOrders")
          [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "side") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySide parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "page") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPage parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "pageSize") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryPageSize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1AlgoFuturesHistoricalOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesHistoricalOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1AlgoFuturesHistoricalOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
