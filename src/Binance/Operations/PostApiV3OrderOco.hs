{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postApiV3OrderOco
module Binance.Operations.PostApiV3OrderOco where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /api/v3/order/oco
--
-- Send in a new OCO
--
-- - Price Restrictions:
--   - \`SELL\`: Limit Price > Last Price > Stop Price
--   - \`BUY\`: Limit Price \< Last Price \< Stop Price
-- - Quantity Restrictions:
--     - Both legs must have the same quantity
--     - \`ICEBERG\` quantities however do not have to be the same
-- - Order Rate Limit
--     - \`OCO\` counts as 2 orders against the order rate limit.
--
-- Weight(IP): 1
postApiV3OrderOco ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostApiV3OrderOcoParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response PostApiV3OrderOcoResponse)
postApiV3OrderOco parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostApiV3OrderOcoResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostApiV3OrderOcoResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PostApiV3OrderOcoResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostApiV3OrderOcoResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostApiV3OrderOcoResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/api/v3/order/oco")
        [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "listClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryListClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "side") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQuerySide parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "quantity") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryQuantity parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limitClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limitStrategyId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitStrategyId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limitStrategyType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitStrategyType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "price") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryPrice parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limitIcebergQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitIcebergQty parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "trailingDelta") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryTrailingDelta parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopPrice") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryStopPrice parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopStrategyId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopStrategyId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopStrategyType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopStrategyType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopLimitPrice") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopLimitPrice parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopIcebergQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopIcebergQty parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopLimitTimeInForce") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopLimitTimeInForce parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "newOrderRespType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryNewOrderRespType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/api\/v3\/order\/oco.POST.parameters@ in the specification.
data PostApiV3OrderOcoParameters = PostApiV3OrderOcoParameters
  { -- | queryLimitClientOrderId: Represents the parameter named \'limitClientOrderId\'
    --
    -- A unique Id for the limit order
    postApiV3OrderOcoParametersQueryLimitClientOrderId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryLimitIcebergQty: Represents the parameter named \'limitIcebergQty\'
    postApiV3OrderOcoParametersQueryLimitIcebergQty :: (GHC.Maybe.Maybe GHC.Types.Double),
    -- | queryLimitStrategyId: Represents the parameter named \'limitStrategyId\'
    postApiV3OrderOcoParametersQueryLimitStrategyId :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLimitStrategyType: Represents the parameter named \'limitStrategyType\'
    --
    -- The value cannot be less than 1000000.
    postApiV3OrderOcoParametersQueryLimitStrategyType :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryListClientOrderId: Represents the parameter named \'listClientOrderId\'
    --
    -- A unique Id for the entire orderList
    postApiV3OrderOcoParametersQueryListClientOrderId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryNewOrderRespType: Represents the parameter named \'newOrderRespType\'
    --
    -- Set the response JSON.
    postApiV3OrderOcoParametersQueryNewOrderRespType :: (GHC.Maybe.Maybe PostApiV3OrderOcoParametersQueryNewOrderRespType),
    -- | queryPrice: Represents the parameter named \'price\'
    --
    -- Order price
    postApiV3OrderOcoParametersQueryPrice :: GHC.Types.Double,
    -- | queryQuantity: Represents the parameter named \'quantity\'
    postApiV3OrderOcoParametersQueryQuantity :: GHC.Types.Double,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    postApiV3OrderOcoParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySide: Represents the parameter named \'side\'
    postApiV3OrderOcoParametersQuerySide :: PostApiV3OrderOcoParametersQuerySide,
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    postApiV3OrderOcoParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStopClientOrderId: Represents the parameter named \'stopClientOrderId\'
    --
    -- A unique Id for the stop loss\/stop loss limit leg
    postApiV3OrderOcoParametersQueryStopClientOrderId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryStopIcebergQty: Represents the parameter named \'stopIcebergQty\'
    postApiV3OrderOcoParametersQueryStopIcebergQty :: (GHC.Maybe.Maybe GHC.Types.Double),
    -- | queryStopLimitPrice: Represents the parameter named \'stopLimitPrice\'
    --
    -- If provided, stopLimitTimeInForce is required.
    postApiV3OrderOcoParametersQueryStopLimitPrice :: (GHC.Maybe.Maybe GHC.Types.Double),
    -- | queryStopLimitTimeInForce: Represents the parameter named \'stopLimitTimeInForce\'
    postApiV3OrderOcoParametersQueryStopLimitTimeInForce :: (GHC.Maybe.Maybe PostApiV3OrderOcoParametersQueryStopLimitTimeInForce),
    -- | queryStopPrice: Represents the parameter named \'stopPrice\'
    postApiV3OrderOcoParametersQueryStopPrice :: GHC.Types.Double,
    -- | queryStopStrategyId: Represents the parameter named \'stopStrategyId\'
    postApiV3OrderOcoParametersQueryStopStrategyId :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryStopStrategyType: Represents the parameter named \'stopStrategyType\'
    postApiV3OrderOcoParametersQueryStopStrategyType :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySymbol: Represents the parameter named \'symbol\'
    --
    -- Trading symbol, e.g. BNBUSDT
    postApiV3OrderOcoParametersQuerySymbol :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    postApiV3OrderOcoParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryTrailingDelta: Represents the parameter named \'trailingDelta\'
    postApiV3OrderOcoParametersQueryTrailingDelta :: (GHC.Maybe.Maybe GHC.Types.Double)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostApiV3OrderOcoParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimitClientOrderId" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryLimitClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimitIcebergQty" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryLimitIcebergQty obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimitStrategyId" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryLimitStrategyId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimitStrategyType" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryLimitStrategyType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryListClientOrderId" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryListClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryNewOrderRespType" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryNewOrderRespType obj) : ["queryPrice" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoParametersQueryPrice obj] : ["queryQuantity" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoParametersQueryQuantity obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryRecvWindow obj) : ["querySide" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoParametersQuerySide obj] : ["querySignature" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStopClientOrderId" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryStopClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStopIcebergQty" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryStopIcebergQty obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStopLimitPrice" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryStopLimitPrice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStopLimitTimeInForce" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryStopLimitTimeInForce obj) : ["queryStopPrice" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoParametersQueryStopPrice obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStopStrategyId" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryStopStrategyId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStopStrategyType" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryStopStrategyType obj) : ["querySymbol" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoParametersQuerySymbol obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTrailingDelta" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryTrailingDelta obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimitClientOrderId" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryLimitClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimitIcebergQty" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryLimitIcebergQty obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimitStrategyId" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryLimitStrategyId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimitStrategyType" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryLimitStrategyType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryListClientOrderId" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryListClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryNewOrderRespType" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryNewOrderRespType obj) : ["queryPrice" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoParametersQueryPrice obj] : ["queryQuantity" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoParametersQueryQuantity obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryRecvWindow obj) : ["querySide" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoParametersQuerySide obj] : ["querySignature" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStopClientOrderId" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryStopClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStopIcebergQty" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryStopIcebergQty obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStopLimitPrice" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryStopLimitPrice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStopLimitTimeInForce" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryStopLimitTimeInForce obj) : ["queryStopPrice" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoParametersQueryStopPrice obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStopStrategyId" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryStopStrategyId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStopStrategyType" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryStopStrategyType obj) : ["querySymbol" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoParametersQuerySymbol obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTrailingDelta" Data.Aeson.Types.ToJSON..=)) (postApiV3OrderOcoParametersQueryTrailingDelta obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostApiV3OrderOcoParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostApiV3OrderOcoParameters" (\obj -> ((((((((((((((((((((GHC.Base.pure PostApiV3OrderOcoParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimitClientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimitIcebergQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimitStrategyId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimitStrategyType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryListClientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryNewOrderRespType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryPrice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryQuantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySide")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStopClientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStopIcebergQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStopLimitPrice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStopLimitTimeInForce")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryStopPrice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStopStrategyId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStopStrategyType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySymbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryTrailingDelta"))

-- | Create a new 'PostApiV3OrderOcoParameters' with all required fields.
mkPostApiV3OrderOcoParameters ::
  -- | 'postApiV3OrderOcoParametersQueryPrice'
  GHC.Types.Double ->
  -- | 'postApiV3OrderOcoParametersQueryQuantity'
  GHC.Types.Double ->
  -- | 'postApiV3OrderOcoParametersQuerySide'
  PostApiV3OrderOcoParametersQuerySide ->
  -- | 'postApiV3OrderOcoParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoParametersQueryStopPrice'
  GHC.Types.Double ->
  -- | 'postApiV3OrderOcoParametersQuerySymbol'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoParametersQueryTimestamp'
  GHC.Int.Int64 ->
  PostApiV3OrderOcoParameters
mkPostApiV3OrderOcoParameters postApiV3OrderOcoParametersQueryPrice postApiV3OrderOcoParametersQueryQuantity postApiV3OrderOcoParametersQuerySide postApiV3OrderOcoParametersQuerySignature postApiV3OrderOcoParametersQueryStopPrice postApiV3OrderOcoParametersQuerySymbol postApiV3OrderOcoParametersQueryTimestamp =
  PostApiV3OrderOcoParameters
    { postApiV3OrderOcoParametersQueryLimitClientOrderId = GHC.Maybe.Nothing,
      postApiV3OrderOcoParametersQueryLimitIcebergQty = GHC.Maybe.Nothing,
      postApiV3OrderOcoParametersQueryLimitStrategyId = GHC.Maybe.Nothing,
      postApiV3OrderOcoParametersQueryLimitStrategyType = GHC.Maybe.Nothing,
      postApiV3OrderOcoParametersQueryListClientOrderId = GHC.Maybe.Nothing,
      postApiV3OrderOcoParametersQueryNewOrderRespType = GHC.Maybe.Nothing,
      postApiV3OrderOcoParametersQueryPrice = postApiV3OrderOcoParametersQueryPrice,
      postApiV3OrderOcoParametersQueryQuantity = postApiV3OrderOcoParametersQueryQuantity,
      postApiV3OrderOcoParametersQueryRecvWindow = GHC.Maybe.Nothing,
      postApiV3OrderOcoParametersQuerySide = postApiV3OrderOcoParametersQuerySide,
      postApiV3OrderOcoParametersQuerySignature = postApiV3OrderOcoParametersQuerySignature,
      postApiV3OrderOcoParametersQueryStopClientOrderId = GHC.Maybe.Nothing,
      postApiV3OrderOcoParametersQueryStopIcebergQty = GHC.Maybe.Nothing,
      postApiV3OrderOcoParametersQueryStopLimitPrice = GHC.Maybe.Nothing,
      postApiV3OrderOcoParametersQueryStopLimitTimeInForce = GHC.Maybe.Nothing,
      postApiV3OrderOcoParametersQueryStopPrice = postApiV3OrderOcoParametersQueryStopPrice,
      postApiV3OrderOcoParametersQueryStopStrategyId = GHC.Maybe.Nothing,
      postApiV3OrderOcoParametersQueryStopStrategyType = GHC.Maybe.Nothing,
      postApiV3OrderOcoParametersQuerySymbol = postApiV3OrderOcoParametersQuerySymbol,
      postApiV3OrderOcoParametersQueryTimestamp = postApiV3OrderOcoParametersQueryTimestamp,
      postApiV3OrderOcoParametersQueryTrailingDelta = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/api\/v3\/order\/oco.POST.parameters.properties.queryNewOrderRespType@ in the specification.
--
-- Represents the parameter named \'newOrderRespType\'
--
-- Set the response JSON.
data PostApiV3OrderOcoParametersQueryNewOrderRespType
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostApiV3OrderOcoParametersQueryNewOrderRespTypeOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostApiV3OrderOcoParametersQueryNewOrderRespTypeTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"ACK"@
    PostApiV3OrderOcoParametersQueryNewOrderRespTypeEnumACK
  | -- | Represents the JSON value @"RESULT"@
    PostApiV3OrderOcoParametersQueryNewOrderRespTypeEnumRESULT
  | -- | Represents the JSON value @"FULL"@
    PostApiV3OrderOcoParametersQueryNewOrderRespTypeEnumFULL
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostApiV3OrderOcoParametersQueryNewOrderRespType where
  toJSON (PostApiV3OrderOcoParametersQueryNewOrderRespTypeOther val) = val
  toJSON (PostApiV3OrderOcoParametersQueryNewOrderRespTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostApiV3OrderOcoParametersQueryNewOrderRespTypeEnumACK) = "ACK"
  toJSON (PostApiV3OrderOcoParametersQueryNewOrderRespTypeEnumRESULT) = "RESULT"
  toJSON (PostApiV3OrderOcoParametersQueryNewOrderRespTypeEnumFULL) = "FULL"

instance Data.Aeson.Types.FromJSON.FromJSON PostApiV3OrderOcoParametersQueryNewOrderRespType where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "ACK" -> PostApiV3OrderOcoParametersQueryNewOrderRespTypeEnumACK
            | val GHC.Classes.== "RESULT" -> PostApiV3OrderOcoParametersQueryNewOrderRespTypeEnumRESULT
            | val GHC.Classes.== "FULL" -> PostApiV3OrderOcoParametersQueryNewOrderRespTypeEnumFULL
            | GHC.Base.otherwise -> PostApiV3OrderOcoParametersQueryNewOrderRespTypeOther val
      )

-- | Defines the enum schema located at @paths.\/api\/v3\/order\/oco.POST.parameters.properties.querySide@ in the specification.
--
-- Represents the parameter named \'side\'
data PostApiV3OrderOcoParametersQuerySide
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostApiV3OrderOcoParametersQuerySideOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostApiV3OrderOcoParametersQuerySideTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"SELL"@
    PostApiV3OrderOcoParametersQuerySideEnumSELL
  | -- | Represents the JSON value @"BUY"@
    PostApiV3OrderOcoParametersQuerySideEnumBUY
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostApiV3OrderOcoParametersQuerySide where
  toJSON (PostApiV3OrderOcoParametersQuerySideOther val) = val
  toJSON (PostApiV3OrderOcoParametersQuerySideTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostApiV3OrderOcoParametersQuerySideEnumSELL) = "SELL"
  toJSON (PostApiV3OrderOcoParametersQuerySideEnumBUY) = "BUY"

instance Data.Aeson.Types.FromJSON.FromJSON PostApiV3OrderOcoParametersQuerySide where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "SELL" -> PostApiV3OrderOcoParametersQuerySideEnumSELL
            | val GHC.Classes.== "BUY" -> PostApiV3OrderOcoParametersQuerySideEnumBUY
            | GHC.Base.otherwise -> PostApiV3OrderOcoParametersQuerySideOther val
      )

-- | Defines the enum schema located at @paths.\/api\/v3\/order\/oco.POST.parameters.properties.queryStopLimitTimeInForce@ in the specification.
--
-- Represents the parameter named \'stopLimitTimeInForce\'
data PostApiV3OrderOcoParametersQueryStopLimitTimeInForce
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostApiV3OrderOcoParametersQueryStopLimitTimeInForceOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostApiV3OrderOcoParametersQueryStopLimitTimeInForceTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"GTC"@
    PostApiV3OrderOcoParametersQueryStopLimitTimeInForceEnumGTC
  | -- | Represents the JSON value @"FOK"@
    PostApiV3OrderOcoParametersQueryStopLimitTimeInForceEnumFOK
  | -- | Represents the JSON value @"IOC"@
    PostApiV3OrderOcoParametersQueryStopLimitTimeInForceEnumIOC
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostApiV3OrderOcoParametersQueryStopLimitTimeInForce where
  toJSON (PostApiV3OrderOcoParametersQueryStopLimitTimeInForceOther val) = val
  toJSON (PostApiV3OrderOcoParametersQueryStopLimitTimeInForceTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostApiV3OrderOcoParametersQueryStopLimitTimeInForceEnumGTC) = "GTC"
  toJSON (PostApiV3OrderOcoParametersQueryStopLimitTimeInForceEnumFOK) = "FOK"
  toJSON (PostApiV3OrderOcoParametersQueryStopLimitTimeInForceEnumIOC) = "IOC"

instance Data.Aeson.Types.FromJSON.FromJSON PostApiV3OrderOcoParametersQueryStopLimitTimeInForce where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "GTC" -> PostApiV3OrderOcoParametersQueryStopLimitTimeInForceEnumGTC
            | val GHC.Classes.== "FOK" -> PostApiV3OrderOcoParametersQueryStopLimitTimeInForceEnumFOK
            | val GHC.Classes.== "IOC" -> PostApiV3OrderOcoParametersQueryStopLimitTimeInForceEnumIOC
            | GHC.Base.otherwise -> PostApiV3OrderOcoParametersQueryStopLimitTimeInForceOther val
      )

-- | Represents a response of the operation 'postApiV3OrderOco'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostApiV3OrderOcoResponseError' is used.
data PostApiV3OrderOcoResponse
  = -- | Means either no matching case available or a parse error
    PostApiV3OrderOcoResponseError GHC.Base.String
  | -- | New OCO details
    PostApiV3OrderOcoResponse200 PostApiV3OrderOcoResponseBody200
  | -- | Bad Request
    PostApiV3OrderOcoResponse400 Error
  | -- | Unauthorized Request
    PostApiV3OrderOcoResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/api\/v3\/order\/oco.POST.responses.200.content.application\/json.schema@ in the specification.
data PostApiV3OrderOcoResponseBody200 = PostApiV3OrderOcoResponseBody200
  { -- | contingencyType
    postApiV3OrderOcoResponseBody200ContingencyType :: Data.Text.Internal.Text,
    -- | listClientOrderId
    postApiV3OrderOcoResponseBody200ListClientOrderId :: Data.Text.Internal.Text,
    -- | listOrderStatus
    postApiV3OrderOcoResponseBody200ListOrderStatus :: Data.Text.Internal.Text,
    -- | listStatusType
    postApiV3OrderOcoResponseBody200ListStatusType :: Data.Text.Internal.Text,
    -- | orderListId
    postApiV3OrderOcoResponseBody200OrderListId :: GHC.Int.Int64,
    -- | orderReports
    postApiV3OrderOcoResponseBody200OrderReports :: ([PostApiV3OrderOcoResponseBody200OrderReports]),
    -- | orders
    postApiV3OrderOcoResponseBody200Orders :: ([PostApiV3OrderOcoResponseBody200Orders]),
    -- | symbol
    postApiV3OrderOcoResponseBody200Symbol :: Data.Text.Internal.Text,
    -- | transactionTime
    postApiV3OrderOcoResponseBody200TransactionTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostApiV3OrderOcoResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["contingencyType" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200ContingencyType obj] : ["listClientOrderId" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200ListClientOrderId obj] : ["listOrderStatus" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200ListOrderStatus obj] : ["listStatusType" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200ListStatusType obj] : ["orderListId" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderListId obj] : ["orderReports" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReports obj] : ["orders" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200Orders obj] : ["symbol" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200Symbol obj] : ["transactionTime" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200TransactionTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["contingencyType" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200ContingencyType obj] : ["listClientOrderId" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200ListClientOrderId obj] : ["listOrderStatus" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200ListOrderStatus obj] : ["listStatusType" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200ListStatusType obj] : ["orderListId" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderListId obj] : ["orderReports" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReports obj] : ["orders" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200Orders obj] : ["symbol" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200Symbol obj] : ["transactionTime" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200TransactionTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostApiV3OrderOcoResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostApiV3OrderOcoResponseBody200" (\obj -> ((((((((GHC.Base.pure PostApiV3OrderOcoResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "contingencyType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "listClientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "listOrderStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "listStatusType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderListId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderReports")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orders")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transactionTime"))

-- | Create a new 'PostApiV3OrderOcoResponseBody200' with all required fields.
mkPostApiV3OrderOcoResponseBody200 ::
  -- | 'postApiV3OrderOcoResponseBody200ContingencyType'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200ListClientOrderId'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200ListOrderStatus'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200ListStatusType'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200OrderListId'
  GHC.Int.Int64 ->
  -- | 'postApiV3OrderOcoResponseBody200OrderReports'
  [PostApiV3OrderOcoResponseBody200OrderReports] ->
  -- | 'postApiV3OrderOcoResponseBody200Orders'
  [PostApiV3OrderOcoResponseBody200Orders] ->
  -- | 'postApiV3OrderOcoResponseBody200Symbol'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200TransactionTime'
  GHC.Int.Int64 ->
  PostApiV3OrderOcoResponseBody200
mkPostApiV3OrderOcoResponseBody200 postApiV3OrderOcoResponseBody200ContingencyType postApiV3OrderOcoResponseBody200ListClientOrderId postApiV3OrderOcoResponseBody200ListOrderStatus postApiV3OrderOcoResponseBody200ListStatusType postApiV3OrderOcoResponseBody200OrderListId postApiV3OrderOcoResponseBody200OrderReports postApiV3OrderOcoResponseBody200Orders postApiV3OrderOcoResponseBody200Symbol postApiV3OrderOcoResponseBody200TransactionTime =
  PostApiV3OrderOcoResponseBody200
    { postApiV3OrderOcoResponseBody200ContingencyType = postApiV3OrderOcoResponseBody200ContingencyType,
      postApiV3OrderOcoResponseBody200ListClientOrderId = postApiV3OrderOcoResponseBody200ListClientOrderId,
      postApiV3OrderOcoResponseBody200ListOrderStatus = postApiV3OrderOcoResponseBody200ListOrderStatus,
      postApiV3OrderOcoResponseBody200ListStatusType = postApiV3OrderOcoResponseBody200ListStatusType,
      postApiV3OrderOcoResponseBody200OrderListId = postApiV3OrderOcoResponseBody200OrderListId,
      postApiV3OrderOcoResponseBody200OrderReports = postApiV3OrderOcoResponseBody200OrderReports,
      postApiV3OrderOcoResponseBody200Orders = postApiV3OrderOcoResponseBody200Orders,
      postApiV3OrderOcoResponseBody200Symbol = postApiV3OrderOcoResponseBody200Symbol,
      postApiV3OrderOcoResponseBody200TransactionTime = postApiV3OrderOcoResponseBody200TransactionTime
    }

-- | Defines the object schema located at @paths.\/api\/v3\/order\/oco.POST.responses.200.content.application\/json.schema.properties.orderReports.items@ in the specification.
data PostApiV3OrderOcoResponseBody200OrderReports = PostApiV3OrderOcoResponseBody200OrderReports
  { -- | clientOrderId
    postApiV3OrderOcoResponseBody200OrderReportsClientOrderId :: Data.Text.Internal.Text,
    -- | cummulativeQuoteQty
    postApiV3OrderOcoResponseBody200OrderReportsCummulativeQuoteQty :: Data.Text.Internal.Text,
    -- | executedQty
    postApiV3OrderOcoResponseBody200OrderReportsExecutedQty :: Data.Text.Internal.Text,
    -- | orderId
    postApiV3OrderOcoResponseBody200OrderReportsOrderId :: GHC.Int.Int64,
    -- | orderListId
    postApiV3OrderOcoResponseBody200OrderReportsOrderListId :: GHC.Int.Int64,
    -- | origQty
    postApiV3OrderOcoResponseBody200OrderReportsOrigQty :: Data.Text.Internal.Text,
    -- | price
    postApiV3OrderOcoResponseBody200OrderReportsPrice :: Data.Text.Internal.Text,
    -- | side
    postApiV3OrderOcoResponseBody200OrderReportsSide :: Data.Text.Internal.Text,
    -- | status
    postApiV3OrderOcoResponseBody200OrderReportsStatus :: Data.Text.Internal.Text,
    -- | stopPrice
    postApiV3OrderOcoResponseBody200OrderReportsStopPrice :: Data.Text.Internal.Text,
    -- | symbol
    postApiV3OrderOcoResponseBody200OrderReportsSymbol :: Data.Text.Internal.Text,
    -- | timeInForce
    postApiV3OrderOcoResponseBody200OrderReportsTimeInForce :: Data.Text.Internal.Text,
    -- | transactTime
    postApiV3OrderOcoResponseBody200OrderReportsTransactTime :: GHC.Int.Int64,
    -- | type
    postApiV3OrderOcoResponseBody200OrderReportsType :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostApiV3OrderOcoResponseBody200OrderReports where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsClientOrderId obj] : ["cummulativeQuoteQty" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsCummulativeQuoteQty obj] : ["executedQty" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsExecutedQty obj] : ["orderId" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsOrderId obj] : ["orderListId" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsOrderListId obj] : ["origQty" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsOrigQty obj] : ["price" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsPrice obj] : ["side" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsSide obj] : ["status" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsStatus obj] : ["stopPrice" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsStopPrice obj] : ["symbol" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsSymbol obj] : ["timeInForce" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsTimeInForce obj] : ["transactTime" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsTransactTime obj] : ["type" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsClientOrderId obj] : ["cummulativeQuoteQty" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsCummulativeQuoteQty obj] : ["executedQty" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsExecutedQty obj] : ["orderId" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsOrderId obj] : ["orderListId" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsOrderListId obj] : ["origQty" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsOrigQty obj] : ["price" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsPrice obj] : ["side" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsSide obj] : ["status" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsStatus obj] : ["stopPrice" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsStopPrice obj] : ["symbol" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsSymbol obj] : ["timeInForce" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsTimeInForce obj] : ["transactTime" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsTransactTime obj] : ["type" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrderReportsType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostApiV3OrderOcoResponseBody200OrderReports where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostApiV3OrderOcoResponseBody200OrderReports" (\obj -> (((((((((((((GHC.Base.pure PostApiV3OrderOcoResponseBody200OrderReports GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "clientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cummulativeQuoteQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "executedQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderListId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "origQty")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "price")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "side")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "stopPrice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "timeInForce")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transactTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))

-- | Create a new 'PostApiV3OrderOcoResponseBody200OrderReports' with all required fields.
mkPostApiV3OrderOcoResponseBody200OrderReports ::
  -- | 'postApiV3OrderOcoResponseBody200OrderReportsClientOrderId'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200OrderReportsCummulativeQuoteQty'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200OrderReportsExecutedQty'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200OrderReportsOrderId'
  GHC.Int.Int64 ->
  -- | 'postApiV3OrderOcoResponseBody200OrderReportsOrderListId'
  GHC.Int.Int64 ->
  -- | 'postApiV3OrderOcoResponseBody200OrderReportsOrigQty'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200OrderReportsPrice'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200OrderReportsSide'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200OrderReportsStatus'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200OrderReportsStopPrice'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200OrderReportsSymbol'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200OrderReportsTimeInForce'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200OrderReportsTransactTime'
  GHC.Int.Int64 ->
  -- | 'postApiV3OrderOcoResponseBody200OrderReportsType'
  Data.Text.Internal.Text ->
  PostApiV3OrderOcoResponseBody200OrderReports
mkPostApiV3OrderOcoResponseBody200OrderReports postApiV3OrderOcoResponseBody200OrderReportsClientOrderId postApiV3OrderOcoResponseBody200OrderReportsCummulativeQuoteQty postApiV3OrderOcoResponseBody200OrderReportsExecutedQty postApiV3OrderOcoResponseBody200OrderReportsOrderId postApiV3OrderOcoResponseBody200OrderReportsOrderListId postApiV3OrderOcoResponseBody200OrderReportsOrigQty postApiV3OrderOcoResponseBody200OrderReportsPrice postApiV3OrderOcoResponseBody200OrderReportsSide postApiV3OrderOcoResponseBody200OrderReportsStatus postApiV3OrderOcoResponseBody200OrderReportsStopPrice postApiV3OrderOcoResponseBody200OrderReportsSymbol postApiV3OrderOcoResponseBody200OrderReportsTimeInForce postApiV3OrderOcoResponseBody200OrderReportsTransactTime postApiV3OrderOcoResponseBody200OrderReportsType =
  PostApiV3OrderOcoResponseBody200OrderReports
    { postApiV3OrderOcoResponseBody200OrderReportsClientOrderId = postApiV3OrderOcoResponseBody200OrderReportsClientOrderId,
      postApiV3OrderOcoResponseBody200OrderReportsCummulativeQuoteQty = postApiV3OrderOcoResponseBody200OrderReportsCummulativeQuoteQty,
      postApiV3OrderOcoResponseBody200OrderReportsExecutedQty = postApiV3OrderOcoResponseBody200OrderReportsExecutedQty,
      postApiV3OrderOcoResponseBody200OrderReportsOrderId = postApiV3OrderOcoResponseBody200OrderReportsOrderId,
      postApiV3OrderOcoResponseBody200OrderReportsOrderListId = postApiV3OrderOcoResponseBody200OrderReportsOrderListId,
      postApiV3OrderOcoResponseBody200OrderReportsOrigQty = postApiV3OrderOcoResponseBody200OrderReportsOrigQty,
      postApiV3OrderOcoResponseBody200OrderReportsPrice = postApiV3OrderOcoResponseBody200OrderReportsPrice,
      postApiV3OrderOcoResponseBody200OrderReportsSide = postApiV3OrderOcoResponseBody200OrderReportsSide,
      postApiV3OrderOcoResponseBody200OrderReportsStatus = postApiV3OrderOcoResponseBody200OrderReportsStatus,
      postApiV3OrderOcoResponseBody200OrderReportsStopPrice = postApiV3OrderOcoResponseBody200OrderReportsStopPrice,
      postApiV3OrderOcoResponseBody200OrderReportsSymbol = postApiV3OrderOcoResponseBody200OrderReportsSymbol,
      postApiV3OrderOcoResponseBody200OrderReportsTimeInForce = postApiV3OrderOcoResponseBody200OrderReportsTimeInForce,
      postApiV3OrderOcoResponseBody200OrderReportsTransactTime = postApiV3OrderOcoResponseBody200OrderReportsTransactTime,
      postApiV3OrderOcoResponseBody200OrderReportsType = postApiV3OrderOcoResponseBody200OrderReportsType
    }

-- | Defines the object schema located at @paths.\/api\/v3\/order\/oco.POST.responses.200.content.application\/json.schema.properties.orders.items@ in the specification.
data PostApiV3OrderOcoResponseBody200Orders = PostApiV3OrderOcoResponseBody200Orders
  { -- | clientOrderId
    postApiV3OrderOcoResponseBody200OrdersClientOrderId :: Data.Text.Internal.Text,
    -- | orderId
    postApiV3OrderOcoResponseBody200OrdersOrderId :: GHC.Int.Int64,
    -- | symbol
    postApiV3OrderOcoResponseBody200OrdersSymbol :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostApiV3OrderOcoResponseBody200Orders where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrdersClientOrderId obj] : ["orderId" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrdersOrderId obj] : ["symbol" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrdersSymbol obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrdersClientOrderId obj] : ["orderId" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrdersOrderId obj] : ["symbol" Data.Aeson.Types.ToJSON..= postApiV3OrderOcoResponseBody200OrdersSymbol obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostApiV3OrderOcoResponseBody200Orders where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostApiV3OrderOcoResponseBody200Orders" (\obj -> ((GHC.Base.pure PostApiV3OrderOcoResponseBody200Orders GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "clientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol"))

-- | Create a new 'PostApiV3OrderOcoResponseBody200Orders' with all required fields.
mkPostApiV3OrderOcoResponseBody200Orders ::
  -- | 'postApiV3OrderOcoResponseBody200OrdersClientOrderId'
  Data.Text.Internal.Text ->
  -- | 'postApiV3OrderOcoResponseBody200OrdersOrderId'
  GHC.Int.Int64 ->
  -- | 'postApiV3OrderOcoResponseBody200OrdersSymbol'
  Data.Text.Internal.Text ->
  PostApiV3OrderOcoResponseBody200Orders
mkPostApiV3OrderOcoResponseBody200Orders postApiV3OrderOcoResponseBody200OrdersClientOrderId postApiV3OrderOcoResponseBody200OrdersOrderId postApiV3OrderOcoResponseBody200OrdersSymbol =
  PostApiV3OrderOcoResponseBody200Orders
    { postApiV3OrderOcoResponseBody200OrdersClientOrderId = postApiV3OrderOcoResponseBody200OrdersClientOrderId,
      postApiV3OrderOcoResponseBody200OrdersOrderId = postApiV3OrderOcoResponseBody200OrdersOrderId,
      postApiV3OrderOcoResponseBody200OrdersSymbol = postApiV3OrderOcoResponseBody200OrdersSymbol
    }

-- | > POST /api/v3/order/oco
--
-- The same as 'postApiV3OrderOco' but accepts an explicit configuration.
postApiV3OrderOcoWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostApiV3OrderOcoParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response PostApiV3OrderOcoResponse)
postApiV3OrderOcoWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either PostApiV3OrderOcoResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostApiV3OrderOcoResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              PostApiV3OrderOcoResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostApiV3OrderOcoResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostApiV3OrderOcoResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/api/v3/order/oco")
          [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "listClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryListClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "side") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQuerySide parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "quantity") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryQuantity parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limitClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limitStrategyId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitStrategyId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limitStrategyType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitStrategyType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "price") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryPrice parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limitIcebergQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitIcebergQty parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "trailingDelta") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryTrailingDelta parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopPrice") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryStopPrice parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopStrategyId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopStrategyId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopStrategyType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopStrategyType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopLimitPrice") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopLimitPrice parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopIcebergQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopIcebergQty parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopLimitTimeInForce") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopLimitTimeInForce parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "newOrderRespType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryNewOrderRespType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > POST /api/v3/order/oco
--
-- The same as 'postApiV3OrderOco' but returns the raw 'Data.ByteString.Char8.ByteString'.
postApiV3OrderOcoRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostApiV3OrderOcoParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postApiV3OrderOcoRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/api/v3/order/oco")
        [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "listClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryListClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "side") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQuerySide parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "quantity") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryQuantity parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limitClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limitStrategyId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitStrategyId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limitStrategyType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitStrategyType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "price") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryPrice parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limitIcebergQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitIcebergQty parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "trailingDelta") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryTrailingDelta parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopPrice") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryStopPrice parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopStrategyId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopStrategyId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopStrategyType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopStrategyType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopLimitPrice") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopLimitPrice parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopIcebergQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopIcebergQty parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "stopLimitTimeInForce") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopLimitTimeInForce parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "newOrderRespType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryNewOrderRespType parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > POST /api/v3/order/oco
--
-- The same as 'postApiV3OrderOco' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postApiV3OrderOcoWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostApiV3OrderOcoParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postApiV3OrderOcoWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/api/v3/order/oco")
          [ Binance.Common.QueryParameter (Data.Text.pack "symbol") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQuerySymbol parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "listClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryListClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "side") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQuerySide parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "quantity") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryQuantity parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limitClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limitStrategyId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitStrategyId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limitStrategyType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitStrategyType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "price") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryPrice parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limitIcebergQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryLimitIcebergQty parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "trailingDelta") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryTrailingDelta parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopPrice") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryStopPrice parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopStrategyId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopStrategyId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopStrategyType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopStrategyType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopLimitPrice") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopLimitPrice parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopIcebergQty") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopIcebergQty parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "stopLimitTimeInForce") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryStopLimitTimeInForce parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "newOrderRespType") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryNewOrderRespType parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postApiV3OrderOcoParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postApiV3OrderOcoParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
