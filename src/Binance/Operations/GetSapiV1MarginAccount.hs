{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1MarginAccount
module Binance.Operations.GetSapiV1MarginAccount where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/margin/account
--
-- Weight(IP): 10
getSapiV1MarginAccount ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginAccountParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1MarginAccountResponse)
getSapiV1MarginAccount parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1MarginAccountResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginAccountResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1MarginAccountResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginAccountResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginAccountResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/account")
        [ Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAccountParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAccountParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAccountParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/account.GET.parameters@ in the specification.
data GetSapiV1MarginAccountParameters = GetSapiV1MarginAccountParameters
  { -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1MarginAccountParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1MarginAccountParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginAccountParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginAccountParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAccountParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginAccountParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginAccountParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginAccountParameters" (\obj -> ((GHC.Base.pure GetSapiV1MarginAccountParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1MarginAccountParameters' with all required fields.
mkGetSapiV1MarginAccountParameters ::
  -- | 'getSapiV1MarginAccountParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAccountParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1MarginAccountParameters
mkGetSapiV1MarginAccountParameters getSapiV1MarginAccountParametersQuerySignature getSapiV1MarginAccountParametersQueryTimestamp =
  GetSapiV1MarginAccountParameters
    { getSapiV1MarginAccountParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1MarginAccountParametersQuerySignature = getSapiV1MarginAccountParametersQuerySignature,
      getSapiV1MarginAccountParametersQueryTimestamp = getSapiV1MarginAccountParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1MarginAccount'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1MarginAccountResponseError' is used.
data GetSapiV1MarginAccountResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1MarginAccountResponseError GHC.Base.String
  | -- | Margin account details
    GetSapiV1MarginAccountResponse200 GetSapiV1MarginAccountResponseBody200
  | -- | Bad Request
    GetSapiV1MarginAccountResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1MarginAccountResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/account.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1MarginAccountResponseBody200 = GetSapiV1MarginAccountResponseBody200
  { -- | borrowEnabled
    getSapiV1MarginAccountResponseBody200BorrowEnabled :: GHC.Types.Bool,
    -- | marginLevel
    getSapiV1MarginAccountResponseBody200MarginLevel :: Data.Text.Internal.Text,
    -- | totalAssetOfBtc
    getSapiV1MarginAccountResponseBody200TotalAssetOfBtc :: Data.Text.Internal.Text,
    -- | totalLiabilityOfBtc
    getSapiV1MarginAccountResponseBody200TotalLiabilityOfBtc :: Data.Text.Internal.Text,
    -- | totalNetAssetOfBtc
    getSapiV1MarginAccountResponseBody200TotalNetAssetOfBtc :: Data.Text.Internal.Text,
    -- | tradeEnabled
    getSapiV1MarginAccountResponseBody200TradeEnabled :: GHC.Types.Bool,
    -- | transferEnabled
    getSapiV1MarginAccountResponseBody200TransferEnabled :: GHC.Types.Bool,
    -- | userAssets
    getSapiV1MarginAccountResponseBody200UserAssets :: ([GetSapiV1MarginAccountResponseBody200UserAssets])
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginAccountResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["borrowEnabled" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200BorrowEnabled obj] : ["marginLevel" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200MarginLevel obj] : ["totalAssetOfBtc" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200TotalAssetOfBtc obj] : ["totalLiabilityOfBtc" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200TotalLiabilityOfBtc obj] : ["totalNetAssetOfBtc" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200TotalNetAssetOfBtc obj] : ["tradeEnabled" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200TradeEnabled obj] : ["transferEnabled" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200TransferEnabled obj] : ["userAssets" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200UserAssets obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["borrowEnabled" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200BorrowEnabled obj] : ["marginLevel" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200MarginLevel obj] : ["totalAssetOfBtc" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200TotalAssetOfBtc obj] : ["totalLiabilityOfBtc" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200TotalLiabilityOfBtc obj] : ["totalNetAssetOfBtc" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200TotalNetAssetOfBtc obj] : ["tradeEnabled" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200TradeEnabled obj] : ["transferEnabled" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200TransferEnabled obj] : ["userAssets" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200UserAssets obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginAccountResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginAccountResponseBody200" (\obj -> (((((((GHC.Base.pure GetSapiV1MarginAccountResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "borrowEnabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "marginLevel")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalAssetOfBtc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalLiabilityOfBtc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalNetAssetOfBtc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tradeEnabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transferEnabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "userAssets"))

-- | Create a new 'GetSapiV1MarginAccountResponseBody200' with all required fields.
mkGetSapiV1MarginAccountResponseBody200 ::
  -- | 'getSapiV1MarginAccountResponseBody200BorrowEnabled'
  GHC.Types.Bool ->
  -- | 'getSapiV1MarginAccountResponseBody200MarginLevel'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAccountResponseBody200TotalAssetOfBtc'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAccountResponseBody200TotalLiabilityOfBtc'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAccountResponseBody200TotalNetAssetOfBtc'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAccountResponseBody200TradeEnabled'
  GHC.Types.Bool ->
  -- | 'getSapiV1MarginAccountResponseBody200TransferEnabled'
  GHC.Types.Bool ->
  -- | 'getSapiV1MarginAccountResponseBody200UserAssets'
  [GetSapiV1MarginAccountResponseBody200UserAssets] ->
  GetSapiV1MarginAccountResponseBody200
mkGetSapiV1MarginAccountResponseBody200 getSapiV1MarginAccountResponseBody200BorrowEnabled getSapiV1MarginAccountResponseBody200MarginLevel getSapiV1MarginAccountResponseBody200TotalAssetOfBtc getSapiV1MarginAccountResponseBody200TotalLiabilityOfBtc getSapiV1MarginAccountResponseBody200TotalNetAssetOfBtc getSapiV1MarginAccountResponseBody200TradeEnabled getSapiV1MarginAccountResponseBody200TransferEnabled getSapiV1MarginAccountResponseBody200UserAssets =
  GetSapiV1MarginAccountResponseBody200
    { getSapiV1MarginAccountResponseBody200BorrowEnabled = getSapiV1MarginAccountResponseBody200BorrowEnabled,
      getSapiV1MarginAccountResponseBody200MarginLevel = getSapiV1MarginAccountResponseBody200MarginLevel,
      getSapiV1MarginAccountResponseBody200TotalAssetOfBtc = getSapiV1MarginAccountResponseBody200TotalAssetOfBtc,
      getSapiV1MarginAccountResponseBody200TotalLiabilityOfBtc = getSapiV1MarginAccountResponseBody200TotalLiabilityOfBtc,
      getSapiV1MarginAccountResponseBody200TotalNetAssetOfBtc = getSapiV1MarginAccountResponseBody200TotalNetAssetOfBtc,
      getSapiV1MarginAccountResponseBody200TradeEnabled = getSapiV1MarginAccountResponseBody200TradeEnabled,
      getSapiV1MarginAccountResponseBody200TransferEnabled = getSapiV1MarginAccountResponseBody200TransferEnabled,
      getSapiV1MarginAccountResponseBody200UserAssets = getSapiV1MarginAccountResponseBody200UserAssets
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/account.GET.responses.200.content.application\/json.schema.properties.userAssets.items@ in the specification.
data GetSapiV1MarginAccountResponseBody200UserAssets = GetSapiV1MarginAccountResponseBody200UserAssets
  { -- | asset
    getSapiV1MarginAccountResponseBody200UserAssetsAsset :: Data.Text.Internal.Text,
    -- | borrowed
    getSapiV1MarginAccountResponseBody200UserAssetsBorrowed :: Data.Text.Internal.Text,
    -- | free
    getSapiV1MarginAccountResponseBody200UserAssetsFree :: Data.Text.Internal.Text,
    -- | interest
    getSapiV1MarginAccountResponseBody200UserAssetsInterest :: Data.Text.Internal.Text,
    -- | locked
    getSapiV1MarginAccountResponseBody200UserAssetsLocked :: Data.Text.Internal.Text,
    -- | netAsset
    getSapiV1MarginAccountResponseBody200UserAssetsNetAsset :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginAccountResponseBody200UserAssets where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200UserAssetsAsset obj] : ["borrowed" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200UserAssetsBorrowed obj] : ["free" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200UserAssetsFree obj] : ["interest" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200UserAssetsInterest obj] : ["locked" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200UserAssetsLocked obj] : ["netAsset" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200UserAssetsNetAsset obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200UserAssetsAsset obj] : ["borrowed" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200UserAssetsBorrowed obj] : ["free" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200UserAssetsFree obj] : ["interest" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200UserAssetsInterest obj] : ["locked" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200UserAssetsLocked obj] : ["netAsset" Data.Aeson.Types.ToJSON..= getSapiV1MarginAccountResponseBody200UserAssetsNetAsset obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginAccountResponseBody200UserAssets where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginAccountResponseBody200UserAssets" (\obj -> (((((GHC.Base.pure GetSapiV1MarginAccountResponseBody200UserAssets GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "borrowed")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "free")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interest")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "locked")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "netAsset"))

-- | Create a new 'GetSapiV1MarginAccountResponseBody200UserAssets' with all required fields.
mkGetSapiV1MarginAccountResponseBody200UserAssets ::
  -- | 'getSapiV1MarginAccountResponseBody200UserAssetsAsset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAccountResponseBody200UserAssetsBorrowed'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAccountResponseBody200UserAssetsFree'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAccountResponseBody200UserAssetsInterest'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAccountResponseBody200UserAssetsLocked'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginAccountResponseBody200UserAssetsNetAsset'
  Data.Text.Internal.Text ->
  GetSapiV1MarginAccountResponseBody200UserAssets
mkGetSapiV1MarginAccountResponseBody200UserAssets getSapiV1MarginAccountResponseBody200UserAssetsAsset getSapiV1MarginAccountResponseBody200UserAssetsBorrowed getSapiV1MarginAccountResponseBody200UserAssetsFree getSapiV1MarginAccountResponseBody200UserAssetsInterest getSapiV1MarginAccountResponseBody200UserAssetsLocked getSapiV1MarginAccountResponseBody200UserAssetsNetAsset =
  GetSapiV1MarginAccountResponseBody200UserAssets
    { getSapiV1MarginAccountResponseBody200UserAssetsAsset = getSapiV1MarginAccountResponseBody200UserAssetsAsset,
      getSapiV1MarginAccountResponseBody200UserAssetsBorrowed = getSapiV1MarginAccountResponseBody200UserAssetsBorrowed,
      getSapiV1MarginAccountResponseBody200UserAssetsFree = getSapiV1MarginAccountResponseBody200UserAssetsFree,
      getSapiV1MarginAccountResponseBody200UserAssetsInterest = getSapiV1MarginAccountResponseBody200UserAssetsInterest,
      getSapiV1MarginAccountResponseBody200UserAssetsLocked = getSapiV1MarginAccountResponseBody200UserAssetsLocked,
      getSapiV1MarginAccountResponseBody200UserAssetsNetAsset = getSapiV1MarginAccountResponseBody200UserAssetsNetAsset
    }

-- | > GET /sapi/v1/margin/account
--
-- The same as 'getSapiV1MarginAccount' but accepts an explicit configuration.
getSapiV1MarginAccountWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginAccountParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1MarginAccountResponse)
getSapiV1MarginAccountWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1MarginAccountResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginAccountResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1MarginAccountResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginAccountResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginAccountResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/account")
          [ Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAccountParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAccountParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAccountParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/margin/account
--
-- The same as 'getSapiV1MarginAccount' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginAccountRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginAccountParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginAccountRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/account")
        [ Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAccountParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAccountParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAccountParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/margin/account
--
-- The same as 'getSapiV1MarginAccount' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginAccountWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginAccountParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginAccountWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/account")
          [ Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginAccountParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAccountParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginAccountParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
