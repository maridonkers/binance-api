{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1MarginRepay
module Binance.Operations.GetSapiV1MarginRepay where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/margin/repay
--
-- - \`txId\` or \`startTime\` must be sent. \`txId\` takes precedence.
-- - Response in descending order
-- - If \`isolatedSymbol\` is not sent, crossed margin data will be returned
-- - Set \`archived\` to \`true\` to query data from 6 months ago
--
-- Weight(IP): 10
getSapiV1MarginRepay ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginRepayParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1MarginRepayResponse)
getSapiV1MarginRepay parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1MarginRepayResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginRepayResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1MarginRepayResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginRepayResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginRepayResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/repay")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginRepayParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "txId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryTxId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "archived") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryArchived parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginRepayParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginRepayParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/repay.GET.parameters@ in the specification.
data GetSapiV1MarginRepayParameters = GetSapiV1MarginRepayParameters
  { -- | queryArchived: Represents the parameter named \'archived\'
    --
    -- Default: false. Set to true for archived data from 6 months ago
    getSapiV1MarginRepayParametersQueryArchived :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryAsset: Represents the parameter named \'asset\'
    getSapiV1MarginRepayParametersQueryAsset :: Data.Text.Internal.Text,
    -- | queryCurrent: Represents the parameter named \'current\'
    --
    -- Current querying page. Start from 1. Default:1
    getSapiV1MarginRepayParametersQueryCurrent :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginRepayParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryIsolatedSymbol: Represents the parameter named \'isolatedSymbol\'
    --
    -- Isolated symbol
    getSapiV1MarginRepayParametersQueryIsolatedSymbol :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1MarginRepayParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1MarginRepayParametersQuerySignature :: Data.Text.Internal.Text,
    -- | querySize: Represents the parameter named \'size\'
    --
    -- Default:10 Max:100
    getSapiV1MarginRepayParametersQuerySize :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginRepayParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginRepayParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryTxId: Represents the parameter named \'txId\'
    --
    -- the tranId in  \`POST \/sapi\/v1\/margin\/repay\`
    getSapiV1MarginRepayParametersQueryTxId :: (GHC.Maybe.Maybe GHC.Int.Int64)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginRepayParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryArchived" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQueryArchived obj) : ["queryAsset" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayParametersQueryAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsolatedSymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQueryIsolatedSymbol obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQuerySize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTxId" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQueryTxId obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryArchived" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQueryArchived obj) : ["queryAsset" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayParametersQueryAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsolatedSymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQueryIsolatedSymbol obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQuerySize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTxId" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginRepayParametersQueryTxId obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginRepayParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginRepayParameters" (\obj -> ((((((((((GHC.Base.pure GetSapiV1MarginRepayParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryArchived")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCurrent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryIsolatedSymbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySize")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryTxId"))

-- | Create a new 'GetSapiV1MarginRepayParameters' with all required fields.
mkGetSapiV1MarginRepayParameters ::
  -- | 'getSapiV1MarginRepayParametersQueryAsset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginRepayParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginRepayParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1MarginRepayParameters
mkGetSapiV1MarginRepayParameters getSapiV1MarginRepayParametersQueryAsset getSapiV1MarginRepayParametersQuerySignature getSapiV1MarginRepayParametersQueryTimestamp =
  GetSapiV1MarginRepayParameters
    { getSapiV1MarginRepayParametersQueryArchived = GHC.Maybe.Nothing,
      getSapiV1MarginRepayParametersQueryAsset = getSapiV1MarginRepayParametersQueryAsset,
      getSapiV1MarginRepayParametersQueryCurrent = GHC.Maybe.Nothing,
      getSapiV1MarginRepayParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1MarginRepayParametersQueryIsolatedSymbol = GHC.Maybe.Nothing,
      getSapiV1MarginRepayParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1MarginRepayParametersQuerySignature = getSapiV1MarginRepayParametersQuerySignature,
      getSapiV1MarginRepayParametersQuerySize = GHC.Maybe.Nothing,
      getSapiV1MarginRepayParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1MarginRepayParametersQueryTimestamp = getSapiV1MarginRepayParametersQueryTimestamp,
      getSapiV1MarginRepayParametersQueryTxId = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'getSapiV1MarginRepay'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1MarginRepayResponseError' is used.
data GetSapiV1MarginRepayResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1MarginRepayResponseError GHC.Base.String
  | -- | Load records
    GetSapiV1MarginRepayResponse200 GetSapiV1MarginRepayResponseBody200
  | -- | Bad Request
    GetSapiV1MarginRepayResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1MarginRepayResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/repay.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1MarginRepayResponseBody200 = GetSapiV1MarginRepayResponseBody200
  { -- | rows
    getSapiV1MarginRepayResponseBody200Rows :: ([GetSapiV1MarginRepayResponseBody200Rows]),
    -- | total
    getSapiV1MarginRepayResponseBody200Total :: GHC.Int.Int32
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginRepayResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200Total obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200Total obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginRepayResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginRepayResponseBody200" (\obj -> (GHC.Base.pure GetSapiV1MarginRepayResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "rows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'GetSapiV1MarginRepayResponseBody200' with all required fields.
mkGetSapiV1MarginRepayResponseBody200 ::
  -- | 'getSapiV1MarginRepayResponseBody200Rows'
  [GetSapiV1MarginRepayResponseBody200Rows] ->
  -- | 'getSapiV1MarginRepayResponseBody200Total'
  GHC.Int.Int32 ->
  GetSapiV1MarginRepayResponseBody200
mkGetSapiV1MarginRepayResponseBody200 getSapiV1MarginRepayResponseBody200Rows getSapiV1MarginRepayResponseBody200Total =
  GetSapiV1MarginRepayResponseBody200
    { getSapiV1MarginRepayResponseBody200Rows = getSapiV1MarginRepayResponseBody200Rows,
      getSapiV1MarginRepayResponseBody200Total = getSapiV1MarginRepayResponseBody200Total
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/repay.GET.responses.200.content.application\/json.schema.properties.rows.items@ in the specification.
data GetSapiV1MarginRepayResponseBody200Rows = GetSapiV1MarginRepayResponseBody200Rows
  { -- | amount: Total amount repaid
    getSapiV1MarginRepayResponseBody200RowsAmount :: Data.Text.Internal.Text,
    -- | asset
    getSapiV1MarginRepayResponseBody200RowsAsset :: Data.Text.Internal.Text,
    -- | interest: Interest repaid
    getSapiV1MarginRepayResponseBody200RowsInterest :: Data.Text.Internal.Text,
    -- | isolatedSymbol: Isolated symbol, will not be returned for crossed margin
    getSapiV1MarginRepayResponseBody200RowsIsolatedSymbol :: Data.Text.Internal.Text,
    -- | principal: Principal repaid
    getSapiV1MarginRepayResponseBody200RowsPrincipal :: Data.Text.Internal.Text,
    -- | status: One of PENDING (pending execution), CONFIRMED (successfully execution), FAILED (execution failed, nothing happened to your account)
    getSapiV1MarginRepayResponseBody200RowsStatus :: Data.Text.Internal.Text,
    -- | timestamp
    getSapiV1MarginRepayResponseBody200RowsTimestamp :: GHC.Int.Int64,
    -- | txId
    getSapiV1MarginRepayResponseBody200RowsTxId :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginRepayResponseBody200Rows where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsAmount obj] : ["asset" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsAsset obj] : ["interest" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsInterest obj] : ["isolatedSymbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsIsolatedSymbol obj] : ["principal" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsPrincipal obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsStatus obj] : ["timestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsTimestamp obj] : ["txId" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsTxId obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsAmount obj] : ["asset" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsAsset obj] : ["interest" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsInterest obj] : ["isolatedSymbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsIsolatedSymbol obj] : ["principal" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsPrincipal obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsStatus obj] : ["timestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsTimestamp obj] : ["txId" Data.Aeson.Types.ToJSON..= getSapiV1MarginRepayResponseBody200RowsTxId obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginRepayResponseBody200Rows where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginRepayResponseBody200Rows" (\obj -> (((((((GHC.Base.pure GetSapiV1MarginRepayResponseBody200Rows GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interest")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "isolatedSymbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "principal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "timestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "txId"))

-- | Create a new 'GetSapiV1MarginRepayResponseBody200Rows' with all required fields.
mkGetSapiV1MarginRepayResponseBody200Rows ::
  -- | 'getSapiV1MarginRepayResponseBody200RowsAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginRepayResponseBody200RowsAsset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginRepayResponseBody200RowsInterest'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginRepayResponseBody200RowsIsolatedSymbol'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginRepayResponseBody200RowsPrincipal'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginRepayResponseBody200RowsStatus'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginRepayResponseBody200RowsTimestamp'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MarginRepayResponseBody200RowsTxId'
  GHC.Int.Int64 ->
  GetSapiV1MarginRepayResponseBody200Rows
mkGetSapiV1MarginRepayResponseBody200Rows getSapiV1MarginRepayResponseBody200RowsAmount getSapiV1MarginRepayResponseBody200RowsAsset getSapiV1MarginRepayResponseBody200RowsInterest getSapiV1MarginRepayResponseBody200RowsIsolatedSymbol getSapiV1MarginRepayResponseBody200RowsPrincipal getSapiV1MarginRepayResponseBody200RowsStatus getSapiV1MarginRepayResponseBody200RowsTimestamp getSapiV1MarginRepayResponseBody200RowsTxId =
  GetSapiV1MarginRepayResponseBody200Rows
    { getSapiV1MarginRepayResponseBody200RowsAmount = getSapiV1MarginRepayResponseBody200RowsAmount,
      getSapiV1MarginRepayResponseBody200RowsAsset = getSapiV1MarginRepayResponseBody200RowsAsset,
      getSapiV1MarginRepayResponseBody200RowsInterest = getSapiV1MarginRepayResponseBody200RowsInterest,
      getSapiV1MarginRepayResponseBody200RowsIsolatedSymbol = getSapiV1MarginRepayResponseBody200RowsIsolatedSymbol,
      getSapiV1MarginRepayResponseBody200RowsPrincipal = getSapiV1MarginRepayResponseBody200RowsPrincipal,
      getSapiV1MarginRepayResponseBody200RowsStatus = getSapiV1MarginRepayResponseBody200RowsStatus,
      getSapiV1MarginRepayResponseBody200RowsTimestamp = getSapiV1MarginRepayResponseBody200RowsTimestamp,
      getSapiV1MarginRepayResponseBody200RowsTxId = getSapiV1MarginRepayResponseBody200RowsTxId
    }

-- | > GET /sapi/v1/margin/repay
--
-- The same as 'getSapiV1MarginRepay' but accepts an explicit configuration.
getSapiV1MarginRepayWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginRepayParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1MarginRepayResponse)
getSapiV1MarginRepayWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1MarginRepayResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginRepayResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1MarginRepayResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginRepayResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginRepayResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/repay")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginRepayParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "txId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryTxId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "archived") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryArchived parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginRepayParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginRepayParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/margin/repay
--
-- The same as 'getSapiV1MarginRepay' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginRepayRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginRepayParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginRepayRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/repay")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginRepayParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "txId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryTxId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "archived") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryArchived parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginRepayParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginRepayParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/margin/repay
--
-- The same as 'getSapiV1MarginRepay' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginRepayWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginRepayParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginRepayWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/repay")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginRepayParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "txId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryTxId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "archived") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryArchived parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginRepayParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginRepayParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginRepayParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
