{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postSapiV1ManagedSubaccountDeposit
module Binance.Operations.PostSapiV1ManagedSubaccountDeposit where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /sapi/v1/managed-subaccount/deposit
--
-- Weight(IP): 1
postSapiV1ManagedSubaccountDeposit ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1ManagedSubaccountDepositParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response PostSapiV1ManagedSubaccountDepositResponse)
postSapiV1ManagedSubaccountDeposit parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostSapiV1ManagedSubaccountDepositResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1ManagedSubaccountDepositResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PostSapiV1ManagedSubaccountDepositResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1ManagedSubaccountDepositResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1ManagedSubaccountDepositResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/managed-subaccount/deposit")
        [ Binance.Common.QueryParameter (Data.Text.pack "toEmail") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryToEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "amount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1ManagedSubaccountDepositParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/managed-subaccount\/deposit.POST.parameters@ in the specification.
data PostSapiV1ManagedSubaccountDepositParameters = PostSapiV1ManagedSubaccountDepositParameters
  { -- | queryAmount: Represents the parameter named \'amount\'
    postSapiV1ManagedSubaccountDepositParametersQueryAmount :: GHC.Types.Double,
    -- | queryAsset: Represents the parameter named \'asset\'
    postSapiV1ManagedSubaccountDepositParametersQueryAsset :: Data.Text.Internal.Text,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    postSapiV1ManagedSubaccountDepositParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    postSapiV1ManagedSubaccountDepositParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    postSapiV1ManagedSubaccountDepositParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryToEmail: Represents the parameter named \'toEmail\'
    --
    -- Recipient email
    postSapiV1ManagedSubaccountDepositParametersQueryToEmail :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1ManagedSubaccountDepositParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryAmount" Data.Aeson.Types.ToJSON..= postSapiV1ManagedSubaccountDepositParametersQueryAmount obj] : ["queryAsset" Data.Aeson.Types.ToJSON..= postSapiV1ManagedSubaccountDepositParametersQueryAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1ManagedSubaccountDepositParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1ManagedSubaccountDepositParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1ManagedSubaccountDepositParametersQueryTimestamp obj] : ["queryToEmail" Data.Aeson.Types.ToJSON..= postSapiV1ManagedSubaccountDepositParametersQueryToEmail obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryAmount" Data.Aeson.Types.ToJSON..= postSapiV1ManagedSubaccountDepositParametersQueryAmount obj] : ["queryAsset" Data.Aeson.Types.ToJSON..= postSapiV1ManagedSubaccountDepositParametersQueryAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1ManagedSubaccountDepositParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1ManagedSubaccountDepositParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1ManagedSubaccountDepositParametersQueryTimestamp obj] : ["queryToEmail" Data.Aeson.Types.ToJSON..= postSapiV1ManagedSubaccountDepositParametersQueryToEmail obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1ManagedSubaccountDepositParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1ManagedSubaccountDepositParameters" (\obj -> (((((GHC.Base.pure PostSapiV1ManagedSubaccountDepositParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryToEmail"))

-- | Create a new 'PostSapiV1ManagedSubaccountDepositParameters' with all required fields.
mkPostSapiV1ManagedSubaccountDepositParameters ::
  -- | 'postSapiV1ManagedSubaccountDepositParametersQueryAmount'
  GHC.Types.Double ->
  -- | 'postSapiV1ManagedSubaccountDepositParametersQueryAsset'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1ManagedSubaccountDepositParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1ManagedSubaccountDepositParametersQueryTimestamp'
  GHC.Int.Int64 ->
  -- | 'postSapiV1ManagedSubaccountDepositParametersQueryToEmail'
  Data.Text.Internal.Text ->
  PostSapiV1ManagedSubaccountDepositParameters
mkPostSapiV1ManagedSubaccountDepositParameters postSapiV1ManagedSubaccountDepositParametersQueryAmount postSapiV1ManagedSubaccountDepositParametersQueryAsset postSapiV1ManagedSubaccountDepositParametersQuerySignature postSapiV1ManagedSubaccountDepositParametersQueryTimestamp postSapiV1ManagedSubaccountDepositParametersQueryToEmail =
  PostSapiV1ManagedSubaccountDepositParameters
    { postSapiV1ManagedSubaccountDepositParametersQueryAmount = postSapiV1ManagedSubaccountDepositParametersQueryAmount,
      postSapiV1ManagedSubaccountDepositParametersQueryAsset = postSapiV1ManagedSubaccountDepositParametersQueryAsset,
      postSapiV1ManagedSubaccountDepositParametersQueryRecvWindow = GHC.Maybe.Nothing,
      postSapiV1ManagedSubaccountDepositParametersQuerySignature = postSapiV1ManagedSubaccountDepositParametersQuerySignature,
      postSapiV1ManagedSubaccountDepositParametersQueryTimestamp = postSapiV1ManagedSubaccountDepositParametersQueryTimestamp,
      postSapiV1ManagedSubaccountDepositParametersQueryToEmail = postSapiV1ManagedSubaccountDepositParametersQueryToEmail
    }

-- | Represents a response of the operation 'postSapiV1ManagedSubaccountDeposit'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostSapiV1ManagedSubaccountDepositResponseError' is used.
data PostSapiV1ManagedSubaccountDepositResponse
  = -- | Means either no matching case available or a parse error
    PostSapiV1ManagedSubaccountDepositResponseError GHC.Base.String
  | -- | Transfer id
    PostSapiV1ManagedSubaccountDepositResponse200 PostSapiV1ManagedSubaccountDepositResponseBody200
  | -- | Bad Request
    PostSapiV1ManagedSubaccountDepositResponse400 Error
  | -- | Unauthorized Request
    PostSapiV1ManagedSubaccountDepositResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/managed-subaccount\/deposit.POST.responses.200.content.application\/json.schema@ in the specification.
data PostSapiV1ManagedSubaccountDepositResponseBody200 = PostSapiV1ManagedSubaccountDepositResponseBody200
  { -- | tranId
    postSapiV1ManagedSubaccountDepositResponseBody200TranId :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1ManagedSubaccountDepositResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["tranId" Data.Aeson.Types.ToJSON..= postSapiV1ManagedSubaccountDepositResponseBody200TranId obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["tranId" Data.Aeson.Types.ToJSON..= postSapiV1ManagedSubaccountDepositResponseBody200TranId obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1ManagedSubaccountDepositResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1ManagedSubaccountDepositResponseBody200" (\obj -> GHC.Base.pure PostSapiV1ManagedSubaccountDepositResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tranId"))

-- | Create a new 'PostSapiV1ManagedSubaccountDepositResponseBody200' with all required fields.
mkPostSapiV1ManagedSubaccountDepositResponseBody200 ::
  -- | 'postSapiV1ManagedSubaccountDepositResponseBody200TranId'
  GHC.Int.Int64 ->
  PostSapiV1ManagedSubaccountDepositResponseBody200
mkPostSapiV1ManagedSubaccountDepositResponseBody200 postSapiV1ManagedSubaccountDepositResponseBody200TranId = PostSapiV1ManagedSubaccountDepositResponseBody200 {postSapiV1ManagedSubaccountDepositResponseBody200TranId = postSapiV1ManagedSubaccountDepositResponseBody200TranId}

-- | > POST /sapi/v1/managed-subaccount/deposit
--
-- The same as 'postSapiV1ManagedSubaccountDeposit' but accepts an explicit configuration.
postSapiV1ManagedSubaccountDepositWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1ManagedSubaccountDepositParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response PostSapiV1ManagedSubaccountDepositResponse)
postSapiV1ManagedSubaccountDepositWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either PostSapiV1ManagedSubaccountDepositResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1ManagedSubaccountDepositResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              PostSapiV1ManagedSubaccountDepositResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1ManagedSubaccountDepositResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1ManagedSubaccountDepositResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/managed-subaccount/deposit")
          [ Binance.Common.QueryParameter (Data.Text.pack "toEmail") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryToEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "amount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1ManagedSubaccountDepositParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > POST /sapi/v1/managed-subaccount/deposit
--
-- The same as 'postSapiV1ManagedSubaccountDeposit' but returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1ManagedSubaccountDepositRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1ManagedSubaccountDepositParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1ManagedSubaccountDepositRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/managed-subaccount/deposit")
        [ Binance.Common.QueryParameter (Data.Text.pack "toEmail") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryToEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "amount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1ManagedSubaccountDepositParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > POST /sapi/v1/managed-subaccount/deposit
--
-- The same as 'postSapiV1ManagedSubaccountDeposit' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1ManagedSubaccountDepositWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1ManagedSubaccountDepositParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1ManagedSubaccountDepositWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/managed-subaccount/deposit")
          [ Binance.Common.QueryParameter (Data.Text.pack "toEmail") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryToEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "amount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1ManagedSubaccountDepositParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1ManagedSubaccountDepositParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
