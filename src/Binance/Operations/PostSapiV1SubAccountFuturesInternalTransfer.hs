{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postSapiV1SubAccountFuturesInternalTransfer
module Binance.Operations.PostSapiV1SubAccountFuturesInternalTransfer where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /sapi/v1/sub-account/futures/internalTransfer
--
-- - Master account can transfer max 2000 times a minute
--
-- Weight(IP): 1
postSapiV1SubAccountFuturesInternalTransfer ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1SubAccountFuturesInternalTransferParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response PostSapiV1SubAccountFuturesInternalTransferResponse)
postSapiV1SubAccountFuturesInternalTransfer parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostSapiV1SubAccountFuturesInternalTransferResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1SubAccountFuturesInternalTransferResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PostSapiV1SubAccountFuturesInternalTransferResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1SubAccountFuturesInternalTransferResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1SubAccountFuturesInternalTransferResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/sub-account/futures/internalTransfer")
        [ Binance.Common.QueryParameter (Data.Text.pack "fromEmail") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryFromEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "toEmail") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryToEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "futuresType") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryFuturesType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "amount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1SubAccountFuturesInternalTransferParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/futures\/internalTransfer.POST.parameters@ in the specification.
data PostSapiV1SubAccountFuturesInternalTransferParameters = PostSapiV1SubAccountFuturesInternalTransferParameters
  { -- | queryAmount: Represents the parameter named \'amount\'
    postSapiV1SubAccountFuturesInternalTransferParametersQueryAmount :: GHC.Types.Double,
    -- | queryAsset: Represents the parameter named \'asset\'
    postSapiV1SubAccountFuturesInternalTransferParametersQueryAsset :: Data.Text.Internal.Text,
    -- | queryFromEmail: Represents the parameter named \'fromEmail\'
    --
    -- Sender email
    postSapiV1SubAccountFuturesInternalTransferParametersQueryFromEmail :: Data.Text.Internal.Text,
    -- | queryFuturesType: Represents the parameter named \'futuresType\'
    --
    -- 1:USDT-margined Futures,2: Coin-margined Futures
    postSapiV1SubAccountFuturesInternalTransferParametersQueryFuturesType :: GHC.Int.Int32,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    postSapiV1SubAccountFuturesInternalTransferParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    postSapiV1SubAccountFuturesInternalTransferParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    postSapiV1SubAccountFuturesInternalTransferParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryToEmail: Represents the parameter named \'toEmail\'
    --
    -- Recipient email
    postSapiV1SubAccountFuturesInternalTransferParametersQueryToEmail :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1SubAccountFuturesInternalTransferParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryAmount" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferParametersQueryAmount obj] : ["queryAsset" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferParametersQueryAsset obj] : ["queryFromEmail" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferParametersQueryFromEmail obj] : ["queryFuturesType" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferParametersQueryFuturesType obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1SubAccountFuturesInternalTransferParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferParametersQueryTimestamp obj] : ["queryToEmail" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferParametersQueryToEmail obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryAmount" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferParametersQueryAmount obj] : ["queryAsset" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferParametersQueryAsset obj] : ["queryFromEmail" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferParametersQueryFromEmail obj] : ["queryFuturesType" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferParametersQueryFuturesType obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1SubAccountFuturesInternalTransferParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferParametersQueryTimestamp obj] : ["queryToEmail" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferParametersQueryToEmail obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1SubAccountFuturesInternalTransferParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1SubAccountFuturesInternalTransferParameters" (\obj -> (((((((GHC.Base.pure PostSapiV1SubAccountFuturesInternalTransferParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryFromEmail")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryFuturesType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryToEmail"))

-- | Create a new 'PostSapiV1SubAccountFuturesInternalTransferParameters' with all required fields.
mkPostSapiV1SubAccountFuturesInternalTransferParameters ::
  -- | 'postSapiV1SubAccountFuturesInternalTransferParametersQueryAmount'
  GHC.Types.Double ->
  -- | 'postSapiV1SubAccountFuturesInternalTransferParametersQueryAsset'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1SubAccountFuturesInternalTransferParametersQueryFromEmail'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1SubAccountFuturesInternalTransferParametersQueryFuturesType'
  GHC.Int.Int32 ->
  -- | 'postSapiV1SubAccountFuturesInternalTransferParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1SubAccountFuturesInternalTransferParametersQueryTimestamp'
  GHC.Int.Int64 ->
  -- | 'postSapiV1SubAccountFuturesInternalTransferParametersQueryToEmail'
  Data.Text.Internal.Text ->
  PostSapiV1SubAccountFuturesInternalTransferParameters
mkPostSapiV1SubAccountFuturesInternalTransferParameters postSapiV1SubAccountFuturesInternalTransferParametersQueryAmount postSapiV1SubAccountFuturesInternalTransferParametersQueryAsset postSapiV1SubAccountFuturesInternalTransferParametersQueryFromEmail postSapiV1SubAccountFuturesInternalTransferParametersQueryFuturesType postSapiV1SubAccountFuturesInternalTransferParametersQuerySignature postSapiV1SubAccountFuturesInternalTransferParametersQueryTimestamp postSapiV1SubAccountFuturesInternalTransferParametersQueryToEmail =
  PostSapiV1SubAccountFuturesInternalTransferParameters
    { postSapiV1SubAccountFuturesInternalTransferParametersQueryAmount = postSapiV1SubAccountFuturesInternalTransferParametersQueryAmount,
      postSapiV1SubAccountFuturesInternalTransferParametersQueryAsset = postSapiV1SubAccountFuturesInternalTransferParametersQueryAsset,
      postSapiV1SubAccountFuturesInternalTransferParametersQueryFromEmail = postSapiV1SubAccountFuturesInternalTransferParametersQueryFromEmail,
      postSapiV1SubAccountFuturesInternalTransferParametersQueryFuturesType = postSapiV1SubAccountFuturesInternalTransferParametersQueryFuturesType,
      postSapiV1SubAccountFuturesInternalTransferParametersQueryRecvWindow = GHC.Maybe.Nothing,
      postSapiV1SubAccountFuturesInternalTransferParametersQuerySignature = postSapiV1SubAccountFuturesInternalTransferParametersQuerySignature,
      postSapiV1SubAccountFuturesInternalTransferParametersQueryTimestamp = postSapiV1SubAccountFuturesInternalTransferParametersQueryTimestamp,
      postSapiV1SubAccountFuturesInternalTransferParametersQueryToEmail = postSapiV1SubAccountFuturesInternalTransferParametersQueryToEmail
    }

-- | Represents a response of the operation 'postSapiV1SubAccountFuturesInternalTransfer'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostSapiV1SubAccountFuturesInternalTransferResponseError' is used.
data PostSapiV1SubAccountFuturesInternalTransferResponse
  = -- | Means either no matching case available or a parse error
    PostSapiV1SubAccountFuturesInternalTransferResponseError GHC.Base.String
  | -- | Futures Asset Transfer Info
    PostSapiV1SubAccountFuturesInternalTransferResponse200 PostSapiV1SubAccountFuturesInternalTransferResponseBody200
  | -- | Bad Request
    PostSapiV1SubAccountFuturesInternalTransferResponse400 Error
  | -- | Unauthorized Request
    PostSapiV1SubAccountFuturesInternalTransferResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/sub-account\/futures\/internalTransfer.POST.responses.200.content.application\/json.schema@ in the specification.
data PostSapiV1SubAccountFuturesInternalTransferResponseBody200 = PostSapiV1SubAccountFuturesInternalTransferResponseBody200
  { -- | success
    postSapiV1SubAccountFuturesInternalTransferResponseBody200Success :: GHC.Types.Bool,
    -- | txnId
    postSapiV1SubAccountFuturesInternalTransferResponseBody200TxnId :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1SubAccountFuturesInternalTransferResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["success" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferResponseBody200Success obj] : ["txnId" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferResponseBody200TxnId obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["success" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferResponseBody200Success obj] : ["txnId" Data.Aeson.Types.ToJSON..= postSapiV1SubAccountFuturesInternalTransferResponseBody200TxnId obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1SubAccountFuturesInternalTransferResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1SubAccountFuturesInternalTransferResponseBody200" (\obj -> (GHC.Base.pure PostSapiV1SubAccountFuturesInternalTransferResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "success")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "txnId"))

-- | Create a new 'PostSapiV1SubAccountFuturesInternalTransferResponseBody200' with all required fields.
mkPostSapiV1SubAccountFuturesInternalTransferResponseBody200 ::
  -- | 'postSapiV1SubAccountFuturesInternalTransferResponseBody200Success'
  GHC.Types.Bool ->
  -- | 'postSapiV1SubAccountFuturesInternalTransferResponseBody200TxnId'
  Data.Text.Internal.Text ->
  PostSapiV1SubAccountFuturesInternalTransferResponseBody200
mkPostSapiV1SubAccountFuturesInternalTransferResponseBody200 postSapiV1SubAccountFuturesInternalTransferResponseBody200Success postSapiV1SubAccountFuturesInternalTransferResponseBody200TxnId =
  PostSapiV1SubAccountFuturesInternalTransferResponseBody200
    { postSapiV1SubAccountFuturesInternalTransferResponseBody200Success = postSapiV1SubAccountFuturesInternalTransferResponseBody200Success,
      postSapiV1SubAccountFuturesInternalTransferResponseBody200TxnId = postSapiV1SubAccountFuturesInternalTransferResponseBody200TxnId
    }

-- | > POST /sapi/v1/sub-account/futures/internalTransfer
--
-- The same as 'postSapiV1SubAccountFuturesInternalTransfer' but accepts an explicit configuration.
postSapiV1SubAccountFuturesInternalTransferWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1SubAccountFuturesInternalTransferParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response PostSapiV1SubAccountFuturesInternalTransferResponse)
postSapiV1SubAccountFuturesInternalTransferWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either PostSapiV1SubAccountFuturesInternalTransferResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1SubAccountFuturesInternalTransferResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              PostSapiV1SubAccountFuturesInternalTransferResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1SubAccountFuturesInternalTransferResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1SubAccountFuturesInternalTransferResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/sub-account/futures/internalTransfer")
          [ Binance.Common.QueryParameter (Data.Text.pack "fromEmail") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryFromEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "toEmail") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryToEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "futuresType") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryFuturesType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "amount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1SubAccountFuturesInternalTransferParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > POST /sapi/v1/sub-account/futures/internalTransfer
--
-- The same as 'postSapiV1SubAccountFuturesInternalTransfer' but returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1SubAccountFuturesInternalTransferRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1SubAccountFuturesInternalTransferParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1SubAccountFuturesInternalTransferRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/sub-account/futures/internalTransfer")
        [ Binance.Common.QueryParameter (Data.Text.pack "fromEmail") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryFromEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "toEmail") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryToEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "futuresType") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryFuturesType parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "amount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1SubAccountFuturesInternalTransferParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > POST /sapi/v1/sub-account/futures/internalTransfer
--
-- The same as 'postSapiV1SubAccountFuturesInternalTransfer' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1SubAccountFuturesInternalTransferWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1SubAccountFuturesInternalTransferParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1SubAccountFuturesInternalTransferWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/sub-account/futures/internalTransfer")
          [ Binance.Common.QueryParameter (Data.Text.pack "fromEmail") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryFromEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "toEmail") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryToEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "futuresType") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryFuturesType parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "amount") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryAmount parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1SubAccountFuturesInternalTransferParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1SubAccountFuturesInternalTransferParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
