{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1LoanOngoingOrders
module Binance.Operations.GetSapiV1LoanOngoingOrders where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/loan/ongoing/orders
--
-- Weight(IP): 400
getSapiV1LoanOngoingOrders ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LoanOngoingOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1LoanOngoingOrdersResponse)
getSapiV1LoanOngoingOrders parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1LoanOngoingOrdersResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LoanOngoingOrdersResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1LoanOngoingOrdersResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LoanOngoingOrdersResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LoanOngoingOrdersResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/loan/ongoing/orders")
        [ Binance.Common.QueryParameter (Data.Text.pack "orderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanOngoingOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanOngoingOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/loan\/ongoing\/orders.GET.parameters@ in the specification.
data GetSapiV1LoanOngoingOrdersParameters = GetSapiV1LoanOngoingOrdersParameters
  { -- | queryCollateralCoin: Represents the parameter named \'collateralCoin\'
    --
    -- Coin used as collateral
    getSapiV1LoanOngoingOrdersParametersQueryCollateralCoin :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryCurrent: Represents the parameter named \'current\'
    --
    -- Current querying page. Start from 1; default:1, max:1000
    getSapiV1LoanOngoingOrdersParametersQueryCurrent :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- default 10, max 100
    getSapiV1LoanOngoingOrdersParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLoanCoin: Represents the parameter named \'loanCoin\'
    --
    -- Coin loaned
    getSapiV1LoanOngoingOrdersParametersQueryLoanCoin :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOrderId: Represents the parameter named \'orderId\'
    --
    -- orderId in POST \/sapi\/v1\/loan\/borrow
    getSapiV1LoanOngoingOrdersParametersQueryOrderId :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1LoanOngoingOrdersParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1LoanOngoingOrdersParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1LoanOngoingOrdersParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LoanOngoingOrdersParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCollateralCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanOngoingOrdersParametersQueryCollateralCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanOngoingOrdersParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanOngoingOrdersParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLoanCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanOngoingOrdersParametersQueryLoanCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrderId" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanOngoingOrdersParametersQueryOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanOngoingOrdersParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCollateralCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanOngoingOrdersParametersQueryCollateralCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanOngoingOrdersParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanOngoingOrdersParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLoanCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanOngoingOrdersParametersQueryLoanCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrderId" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanOngoingOrdersParametersQueryOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanOngoingOrdersParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LoanOngoingOrdersParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LoanOngoingOrdersParameters" (\obj -> (((((((GHC.Base.pure GetSapiV1LoanOngoingOrdersParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCollateralCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCurrent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLoanCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1LoanOngoingOrdersParameters' with all required fields.
mkGetSapiV1LoanOngoingOrdersParameters ::
  -- | 'getSapiV1LoanOngoingOrdersParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanOngoingOrdersParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1LoanOngoingOrdersParameters
mkGetSapiV1LoanOngoingOrdersParameters getSapiV1LoanOngoingOrdersParametersQuerySignature getSapiV1LoanOngoingOrdersParametersQueryTimestamp =
  GetSapiV1LoanOngoingOrdersParameters
    { getSapiV1LoanOngoingOrdersParametersQueryCollateralCoin = GHC.Maybe.Nothing,
      getSapiV1LoanOngoingOrdersParametersQueryCurrent = GHC.Maybe.Nothing,
      getSapiV1LoanOngoingOrdersParametersQueryLimit = GHC.Maybe.Nothing,
      getSapiV1LoanOngoingOrdersParametersQueryLoanCoin = GHC.Maybe.Nothing,
      getSapiV1LoanOngoingOrdersParametersQueryOrderId = GHC.Maybe.Nothing,
      getSapiV1LoanOngoingOrdersParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1LoanOngoingOrdersParametersQuerySignature = getSapiV1LoanOngoingOrdersParametersQuerySignature,
      getSapiV1LoanOngoingOrdersParametersQueryTimestamp = getSapiV1LoanOngoingOrdersParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1LoanOngoingOrders'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1LoanOngoingOrdersResponseError' is used.
data GetSapiV1LoanOngoingOrdersResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1LoanOngoingOrdersResponseError GHC.Base.String
  | -- | Ongoing Orders
    GetSapiV1LoanOngoingOrdersResponse200 GetSapiV1LoanOngoingOrdersResponseBody200
  | -- | Bad Request
    GetSapiV1LoanOngoingOrdersResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1LoanOngoingOrdersResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/loan\/ongoing\/orders.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1LoanOngoingOrdersResponseBody200 = GetSapiV1LoanOngoingOrdersResponseBody200
  { -- | rows
    getSapiV1LoanOngoingOrdersResponseBody200Rows :: ([GetSapiV1LoanOngoingOrdersResponseBody200Rows]),
    -- | total
    getSapiV1LoanOngoingOrdersResponseBody200Total :: GHC.Int.Int32
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LoanOngoingOrdersResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200Total obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200Total obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LoanOngoingOrdersResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LoanOngoingOrdersResponseBody200" (\obj -> (GHC.Base.pure GetSapiV1LoanOngoingOrdersResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "rows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'GetSapiV1LoanOngoingOrdersResponseBody200' with all required fields.
mkGetSapiV1LoanOngoingOrdersResponseBody200 ::
  -- | 'getSapiV1LoanOngoingOrdersResponseBody200Rows'
  [GetSapiV1LoanOngoingOrdersResponseBody200Rows] ->
  -- | 'getSapiV1LoanOngoingOrdersResponseBody200Total'
  GHC.Int.Int32 ->
  GetSapiV1LoanOngoingOrdersResponseBody200
mkGetSapiV1LoanOngoingOrdersResponseBody200 getSapiV1LoanOngoingOrdersResponseBody200Rows getSapiV1LoanOngoingOrdersResponseBody200Total =
  GetSapiV1LoanOngoingOrdersResponseBody200
    { getSapiV1LoanOngoingOrdersResponseBody200Rows = getSapiV1LoanOngoingOrdersResponseBody200Rows,
      getSapiV1LoanOngoingOrdersResponseBody200Total = getSapiV1LoanOngoingOrdersResponseBody200Total
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/loan\/ongoing\/orders.GET.responses.200.content.application\/json.schema.properties.rows.items@ in the specification.
data GetSapiV1LoanOngoingOrdersResponseBody200Rows = GetSapiV1LoanOngoingOrdersResponseBody200Rows
  { -- | collateralAmount
    getSapiV1LoanOngoingOrdersResponseBody200RowsCollateralAmount :: Data.Text.Internal.Text,
    -- | collateralCoin
    getSapiV1LoanOngoingOrdersResponseBody200RowsCollateralCoin :: Data.Text.Internal.Text,
    -- | currentLTV
    getSapiV1LoanOngoingOrdersResponseBody200RowsCurrentLTV :: Data.Text.Internal.Text,
    -- | expirationTime
    getSapiV1LoanOngoingOrdersResponseBody200RowsExpirationTime :: GHC.Int.Int64,
    -- | loanCoin
    getSapiV1LoanOngoingOrdersResponseBody200RowsLoanCoin :: Data.Text.Internal.Text,
    -- | orderId
    getSapiV1LoanOngoingOrdersResponseBody200RowsOrderId :: GHC.Int.Int64,
    -- | residualInterest
    getSapiV1LoanOngoingOrdersResponseBody200RowsResidualInterest :: Data.Text.Internal.Text,
    -- | totalDebt
    getSapiV1LoanOngoingOrdersResponseBody200RowsTotalDebt :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LoanOngoingOrdersResponseBody200Rows where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["collateralAmount" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsCollateralAmount obj] : ["collateralCoin" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsCollateralCoin obj] : ["currentLTV" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsCurrentLTV obj] : ["expirationTime" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsExpirationTime obj] : ["loanCoin" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsLoanCoin obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsOrderId obj] : ["residualInterest" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsResidualInterest obj] : ["totalDebt" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsTotalDebt obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["collateralAmount" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsCollateralAmount obj] : ["collateralCoin" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsCollateralCoin obj] : ["currentLTV" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsCurrentLTV obj] : ["expirationTime" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsExpirationTime obj] : ["loanCoin" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsLoanCoin obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsOrderId obj] : ["residualInterest" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsResidualInterest obj] : ["totalDebt" Data.Aeson.Types.ToJSON..= getSapiV1LoanOngoingOrdersResponseBody200RowsTotalDebt obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LoanOngoingOrdersResponseBody200Rows where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LoanOngoingOrdersResponseBody200Rows" (\obj -> (((((((GHC.Base.pure GetSapiV1LoanOngoingOrdersResponseBody200Rows GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "collateralAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "collateralCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currentLTV")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "expirationTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "loanCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "residualInterest")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalDebt"))

-- | Create a new 'GetSapiV1LoanOngoingOrdersResponseBody200Rows' with all required fields.
mkGetSapiV1LoanOngoingOrdersResponseBody200Rows ::
  -- | 'getSapiV1LoanOngoingOrdersResponseBody200RowsCollateralAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanOngoingOrdersResponseBody200RowsCollateralCoin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanOngoingOrdersResponseBody200RowsCurrentLTV'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanOngoingOrdersResponseBody200RowsExpirationTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LoanOngoingOrdersResponseBody200RowsLoanCoin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanOngoingOrdersResponseBody200RowsOrderId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LoanOngoingOrdersResponseBody200RowsResidualInterest'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanOngoingOrdersResponseBody200RowsTotalDebt'
  Data.Text.Internal.Text ->
  GetSapiV1LoanOngoingOrdersResponseBody200Rows
mkGetSapiV1LoanOngoingOrdersResponseBody200Rows getSapiV1LoanOngoingOrdersResponseBody200RowsCollateralAmount getSapiV1LoanOngoingOrdersResponseBody200RowsCollateralCoin getSapiV1LoanOngoingOrdersResponseBody200RowsCurrentLTV getSapiV1LoanOngoingOrdersResponseBody200RowsExpirationTime getSapiV1LoanOngoingOrdersResponseBody200RowsLoanCoin getSapiV1LoanOngoingOrdersResponseBody200RowsOrderId getSapiV1LoanOngoingOrdersResponseBody200RowsResidualInterest getSapiV1LoanOngoingOrdersResponseBody200RowsTotalDebt =
  GetSapiV1LoanOngoingOrdersResponseBody200Rows
    { getSapiV1LoanOngoingOrdersResponseBody200RowsCollateralAmount = getSapiV1LoanOngoingOrdersResponseBody200RowsCollateralAmount,
      getSapiV1LoanOngoingOrdersResponseBody200RowsCollateralCoin = getSapiV1LoanOngoingOrdersResponseBody200RowsCollateralCoin,
      getSapiV1LoanOngoingOrdersResponseBody200RowsCurrentLTV = getSapiV1LoanOngoingOrdersResponseBody200RowsCurrentLTV,
      getSapiV1LoanOngoingOrdersResponseBody200RowsExpirationTime = getSapiV1LoanOngoingOrdersResponseBody200RowsExpirationTime,
      getSapiV1LoanOngoingOrdersResponseBody200RowsLoanCoin = getSapiV1LoanOngoingOrdersResponseBody200RowsLoanCoin,
      getSapiV1LoanOngoingOrdersResponseBody200RowsOrderId = getSapiV1LoanOngoingOrdersResponseBody200RowsOrderId,
      getSapiV1LoanOngoingOrdersResponseBody200RowsResidualInterest = getSapiV1LoanOngoingOrdersResponseBody200RowsResidualInterest,
      getSapiV1LoanOngoingOrdersResponseBody200RowsTotalDebt = getSapiV1LoanOngoingOrdersResponseBody200RowsTotalDebt
    }

-- | > GET /sapi/v1/loan/ongoing/orders
--
-- The same as 'getSapiV1LoanOngoingOrders' but accepts an explicit configuration.
getSapiV1LoanOngoingOrdersWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LoanOngoingOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1LoanOngoingOrdersResponse)
getSapiV1LoanOngoingOrdersWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1LoanOngoingOrdersResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LoanOngoingOrdersResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1LoanOngoingOrdersResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LoanOngoingOrdersResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LoanOngoingOrdersResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/loan/ongoing/orders")
          [ Binance.Common.QueryParameter (Data.Text.pack "orderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanOngoingOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanOngoingOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/loan/ongoing/orders
--
-- The same as 'getSapiV1LoanOngoingOrders' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LoanOngoingOrdersRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LoanOngoingOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LoanOngoingOrdersRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/loan/ongoing/orders")
        [ Binance.Common.QueryParameter (Data.Text.pack "orderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanOngoingOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanOngoingOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/loan/ongoing/orders
--
-- The same as 'getSapiV1LoanOngoingOrders' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LoanOngoingOrdersWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LoanOngoingOrdersParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LoanOngoingOrdersWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/loan/ongoing/orders")
          [ Binance.Common.QueryParameter (Data.Text.pack "orderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanOngoingOrdersParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanOngoingOrdersParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanOngoingOrdersParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
