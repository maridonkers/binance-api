{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postSapiV1MiningHashTransferConfig
module Binance.Operations.PostSapiV1MiningHashTransferConfig where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /sapi/v1/mining/hash-transfer/config
--
-- Weight(IP): 5
postSapiV1MiningHashTransferConfig ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1MiningHashTransferConfigParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response PostSapiV1MiningHashTransferConfigResponse)
postSapiV1MiningHashTransferConfig parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostSapiV1MiningHashTransferConfigResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1MiningHashTransferConfigResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            PostSapiV1MiningHashTransferConfigResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1MiningHashTransferConfigResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostSapiV1MiningHashTransferConfigResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/mining/hash-transfer/config")
        [ Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startDate") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MiningHashTransferConfigParametersQueryStartDate parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endDate") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MiningHashTransferConfigParametersQueryEndDate parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "toPoolUser") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryToPoolUser parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "hashRate") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryHashRate parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MiningHashTransferConfigParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/hash-transfer\/config.POST.parameters@ in the specification.
data PostSapiV1MiningHashTransferConfigParameters = PostSapiV1MiningHashTransferConfigParameters
  { -- | queryAlgo: Represents the parameter named \'algo\'
    --
    -- Algorithm(sha256)
    postSapiV1MiningHashTransferConfigParametersQueryAlgo :: Data.Text.Internal.Text,
    -- | queryEndDate: Represents the parameter named \'endDate\'
    --
    -- Search date, millisecond timestamp, while empty query all
    postSapiV1MiningHashTransferConfigParametersQueryEndDate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryHashRate: Represents the parameter named \'hashRate\'
    --
    -- Resale hashrate h\/s must be transferred (BTC is greater than 500000000000 ETH is greater than 500000)
    postSapiV1MiningHashTransferConfigParametersQueryHashRate :: Data.Text.Internal.Text,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    postSapiV1MiningHashTransferConfigParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    postSapiV1MiningHashTransferConfigParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartDate: Represents the parameter named \'startDate\'
    --
    -- Search date, millisecond timestamp, while empty query all
    postSapiV1MiningHashTransferConfigParametersQueryStartDate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    postSapiV1MiningHashTransferConfigParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryToPoolUser: Represents the parameter named \'toPoolUser\'
    --
    -- Mining Account
    postSapiV1MiningHashTransferConfigParametersQueryToPoolUser :: Data.Text.Internal.Text,
    -- | queryUserName: Represents the parameter named \'userName\'
    --
    -- Mining Account
    postSapiV1MiningHashTransferConfigParametersQueryUserName :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1MiningHashTransferConfigParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryAlgo" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigParametersQueryAlgo obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndDate" Data.Aeson.Types.ToJSON..=)) (postSapiV1MiningHashTransferConfigParametersQueryEndDate obj) : ["queryHashRate" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigParametersQueryHashRate obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1MiningHashTransferConfigParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartDate" Data.Aeson.Types.ToJSON..=)) (postSapiV1MiningHashTransferConfigParametersQueryStartDate obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigParametersQueryTimestamp obj] : ["queryToPoolUser" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigParametersQueryToPoolUser obj] : ["queryUserName" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigParametersQueryUserName obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryAlgo" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigParametersQueryAlgo obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndDate" Data.Aeson.Types.ToJSON..=)) (postSapiV1MiningHashTransferConfigParametersQueryEndDate obj) : ["queryHashRate" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigParametersQueryHashRate obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (postSapiV1MiningHashTransferConfigParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartDate" Data.Aeson.Types.ToJSON..=)) (postSapiV1MiningHashTransferConfigParametersQueryStartDate obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigParametersQueryTimestamp obj] : ["queryToPoolUser" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigParametersQueryToPoolUser obj] : ["queryUserName" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigParametersQueryUserName obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1MiningHashTransferConfigParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1MiningHashTransferConfigParameters" (\obj -> ((((((((GHC.Base.pure PostSapiV1MiningHashTransferConfigParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAlgo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryHashRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartDate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryToPoolUser")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryUserName"))

-- | Create a new 'PostSapiV1MiningHashTransferConfigParameters' with all required fields.
mkPostSapiV1MiningHashTransferConfigParameters ::
  -- | 'postSapiV1MiningHashTransferConfigParametersQueryAlgo'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1MiningHashTransferConfigParametersQueryHashRate'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1MiningHashTransferConfigParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1MiningHashTransferConfigParametersQueryTimestamp'
  GHC.Int.Int64 ->
  -- | 'postSapiV1MiningHashTransferConfigParametersQueryToPoolUser'
  Data.Text.Internal.Text ->
  -- | 'postSapiV1MiningHashTransferConfigParametersQueryUserName'
  Data.Text.Internal.Text ->
  PostSapiV1MiningHashTransferConfigParameters
mkPostSapiV1MiningHashTransferConfigParameters postSapiV1MiningHashTransferConfigParametersQueryAlgo postSapiV1MiningHashTransferConfigParametersQueryHashRate postSapiV1MiningHashTransferConfigParametersQuerySignature postSapiV1MiningHashTransferConfigParametersQueryTimestamp postSapiV1MiningHashTransferConfigParametersQueryToPoolUser postSapiV1MiningHashTransferConfigParametersQueryUserName =
  PostSapiV1MiningHashTransferConfigParameters
    { postSapiV1MiningHashTransferConfigParametersQueryAlgo = postSapiV1MiningHashTransferConfigParametersQueryAlgo,
      postSapiV1MiningHashTransferConfigParametersQueryEndDate = GHC.Maybe.Nothing,
      postSapiV1MiningHashTransferConfigParametersQueryHashRate = postSapiV1MiningHashTransferConfigParametersQueryHashRate,
      postSapiV1MiningHashTransferConfigParametersQueryRecvWindow = GHC.Maybe.Nothing,
      postSapiV1MiningHashTransferConfigParametersQuerySignature = postSapiV1MiningHashTransferConfigParametersQuerySignature,
      postSapiV1MiningHashTransferConfigParametersQueryStartDate = GHC.Maybe.Nothing,
      postSapiV1MiningHashTransferConfigParametersQueryTimestamp = postSapiV1MiningHashTransferConfigParametersQueryTimestamp,
      postSapiV1MiningHashTransferConfigParametersQueryToPoolUser = postSapiV1MiningHashTransferConfigParametersQueryToPoolUser,
      postSapiV1MiningHashTransferConfigParametersQueryUserName = postSapiV1MiningHashTransferConfigParametersQueryUserName
    }

-- | Represents a response of the operation 'postSapiV1MiningHashTransferConfig'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostSapiV1MiningHashTransferConfigResponseError' is used.
data PostSapiV1MiningHashTransferConfigResponse
  = -- | Means either no matching case available or a parse error
    PostSapiV1MiningHashTransferConfigResponseError GHC.Base.String
  | -- | Mining Account Id
    PostSapiV1MiningHashTransferConfigResponse200 PostSapiV1MiningHashTransferConfigResponseBody200
  | -- | Bad Request
    PostSapiV1MiningHashTransferConfigResponse400 Error
  | -- | Unauthorized Request
    PostSapiV1MiningHashTransferConfigResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/mining\/hash-transfer\/config.POST.responses.200.content.application\/json.schema@ in the specification.
data PostSapiV1MiningHashTransferConfigResponseBody200 = PostSapiV1MiningHashTransferConfigResponseBody200
  { -- | code
    postSapiV1MiningHashTransferConfigResponseBody200Code :: GHC.Int.Int64,
    -- | data: Mining Account
    postSapiV1MiningHashTransferConfigResponseBody200Data :: GHC.Int.Int64,
    -- | msg
    postSapiV1MiningHashTransferConfigResponseBody200Msg :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSapiV1MiningHashTransferConfigResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["code" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigResponseBody200Code obj] : ["data" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigResponseBody200Data obj] : ["msg" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigResponseBody200Msg obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["code" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigResponseBody200Code obj] : ["data" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigResponseBody200Data obj] : ["msg" Data.Aeson.Types.ToJSON..= postSapiV1MiningHashTransferConfigResponseBody200Msg obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSapiV1MiningHashTransferConfigResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSapiV1MiningHashTransferConfigResponseBody200" (\obj -> ((GHC.Base.pure PostSapiV1MiningHashTransferConfigResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "msg"))

-- | Create a new 'PostSapiV1MiningHashTransferConfigResponseBody200' with all required fields.
mkPostSapiV1MiningHashTransferConfigResponseBody200 ::
  -- | 'postSapiV1MiningHashTransferConfigResponseBody200Code'
  GHC.Int.Int64 ->
  -- | 'postSapiV1MiningHashTransferConfigResponseBody200Data'
  GHC.Int.Int64 ->
  -- | 'postSapiV1MiningHashTransferConfigResponseBody200Msg'
  Data.Text.Internal.Text ->
  PostSapiV1MiningHashTransferConfigResponseBody200
mkPostSapiV1MiningHashTransferConfigResponseBody200 postSapiV1MiningHashTransferConfigResponseBody200Code postSapiV1MiningHashTransferConfigResponseBody200Data postSapiV1MiningHashTransferConfigResponseBody200Msg =
  PostSapiV1MiningHashTransferConfigResponseBody200
    { postSapiV1MiningHashTransferConfigResponseBody200Code = postSapiV1MiningHashTransferConfigResponseBody200Code,
      postSapiV1MiningHashTransferConfigResponseBody200Data = postSapiV1MiningHashTransferConfigResponseBody200Data,
      postSapiV1MiningHashTransferConfigResponseBody200Msg = postSapiV1MiningHashTransferConfigResponseBody200Msg
    }

-- | > POST /sapi/v1/mining/hash-transfer/config
--
-- The same as 'postSapiV1MiningHashTransferConfig' but accepts an explicit configuration.
postSapiV1MiningHashTransferConfigWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1MiningHashTransferConfigParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response PostSapiV1MiningHashTransferConfigResponse)
postSapiV1MiningHashTransferConfigWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either PostSapiV1MiningHashTransferConfigResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1MiningHashTransferConfigResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              PostSapiV1MiningHashTransferConfigResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1MiningHashTransferConfigResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSapiV1MiningHashTransferConfigResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/mining/hash-transfer/config")
          [ Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startDate") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MiningHashTransferConfigParametersQueryStartDate parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endDate") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MiningHashTransferConfigParametersQueryEndDate parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "toPoolUser") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryToPoolUser parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "hashRate") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryHashRate parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MiningHashTransferConfigParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > POST /sapi/v1/mining/hash-transfer/config
--
-- The same as 'postSapiV1MiningHashTransferConfig' but returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1MiningHashTransferConfigRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1MiningHashTransferConfigParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1MiningHashTransferConfigRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
        (Data.Text.pack "/sapi/v1/mining/hash-transfer/config")
        [ Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startDate") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MiningHashTransferConfigParametersQueryStartDate parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endDate") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MiningHashTransferConfigParametersQueryEndDate parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "toPoolUser") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryToPoolUser parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "hashRate") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryHashRate parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MiningHashTransferConfigParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > POST /sapi/v1/mining/hash-transfer/config
--
-- The same as 'postSapiV1MiningHashTransferConfig' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
postSapiV1MiningHashTransferConfigWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  PostSapiV1MiningHashTransferConfigParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
postSapiV1MiningHashTransferConfigWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST")
          (Data.Text.pack "/sapi/v1/mining/hash-transfer/config")
          [ Binance.Common.QueryParameter (Data.Text.pack "userName") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryUserName parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "algo") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryAlgo parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startDate") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MiningHashTransferConfigParametersQueryStartDate parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endDate") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MiningHashTransferConfigParametersQueryEndDate parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "toPoolUser") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryToPoolUser parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "hashRate") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryHashRate parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> postSapiV1MiningHashTransferConfigParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (postSapiV1MiningHashTransferConfigParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
