{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1MarginOpenOrderList
module Binance.Operations.GetSapiV1MarginOpenOrderList where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/margin/openOrderList
--
-- Weight(IP): 10
getSapiV1MarginOpenOrderList ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginOpenOrderListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1MarginOpenOrderListResponse)
getSapiV1MarginOpenOrderList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1MarginOpenOrderListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginOpenOrderListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ([GetSapiV1MarginOpenOrderListResponseBody200])
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginOpenOrderListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginOpenOrderListResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/openOrderList")
        [ Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOpenOrderListParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOpenOrderListParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOpenOrderListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOpenOrderListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOpenOrderListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/openOrderList.GET.parameters@ in the specification.
data GetSapiV1MarginOpenOrderListParameters = GetSapiV1MarginOpenOrderListParameters
  { -- | queryIsIsolated: Represents the parameter named \'isIsolated\'
    --
    -- * \`TRUE\` - For isolated margin
    -- * \`FALSE\` - Default, not for isolated margin
    getSapiV1MarginOpenOrderListParametersQueryIsIsolated :: (GHC.Maybe.Maybe GetSapiV1MarginOpenOrderListParametersQueryIsIsolated),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1MarginOpenOrderListParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1MarginOpenOrderListParametersQuerySignature :: Data.Text.Internal.Text,
    -- | querySymbol: Represents the parameter named \'symbol\'
    --
    -- Mandatory for isolated margin, not supported for cross margin
    getSapiV1MarginOpenOrderListParametersQuerySymbol :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginOpenOrderListParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginOpenOrderListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsIsolated" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOpenOrderListParametersQueryIsIsolated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOpenOrderListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOpenOrderListParametersQuerySymbol obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsIsolated" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOpenOrderListParametersQueryIsIsolated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOpenOrderListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOpenOrderListParametersQuerySymbol obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginOpenOrderListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginOpenOrderListParameters" (\obj -> ((((GHC.Base.pure GetSapiV1MarginOpenOrderListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryIsIsolated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySymbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1MarginOpenOrderListParameters' with all required fields.
mkGetSapiV1MarginOpenOrderListParameters ::
  -- | 'getSapiV1MarginOpenOrderListParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginOpenOrderListParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1MarginOpenOrderListParameters
mkGetSapiV1MarginOpenOrderListParameters getSapiV1MarginOpenOrderListParametersQuerySignature getSapiV1MarginOpenOrderListParametersQueryTimestamp =
  GetSapiV1MarginOpenOrderListParameters
    { getSapiV1MarginOpenOrderListParametersQueryIsIsolated = GHC.Maybe.Nothing,
      getSapiV1MarginOpenOrderListParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1MarginOpenOrderListParametersQuerySignature = getSapiV1MarginOpenOrderListParametersQuerySignature,
      getSapiV1MarginOpenOrderListParametersQuerySymbol = GHC.Maybe.Nothing,
      getSapiV1MarginOpenOrderListParametersQueryTimestamp = getSapiV1MarginOpenOrderListParametersQueryTimestamp
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/margin\/openOrderList.GET.parameters.properties.queryIsIsolated@ in the specification.
--
-- Represents the parameter named \'isIsolated\'
--
-- * \`TRUE\` - For isolated margin
-- * \`FALSE\` - Default, not for isolated margin
data GetSapiV1MarginOpenOrderListParametersQueryIsIsolated
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1MarginOpenOrderListParametersQueryIsIsolatedOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1MarginOpenOrderListParametersQueryIsIsolatedTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"TRUE"@
    GetSapiV1MarginOpenOrderListParametersQueryIsIsolatedEnumTRUE
  | -- | Represents the JSON value @"FALSE"@
    GetSapiV1MarginOpenOrderListParametersQueryIsIsolatedEnumFALSE
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginOpenOrderListParametersQueryIsIsolated where
  toJSON (GetSapiV1MarginOpenOrderListParametersQueryIsIsolatedOther val) = val
  toJSON (GetSapiV1MarginOpenOrderListParametersQueryIsIsolatedTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1MarginOpenOrderListParametersQueryIsIsolatedEnumTRUE) = "TRUE"
  toJSON (GetSapiV1MarginOpenOrderListParametersQueryIsIsolatedEnumFALSE) = "FALSE"

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginOpenOrderListParametersQueryIsIsolated where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "TRUE" -> GetSapiV1MarginOpenOrderListParametersQueryIsIsolatedEnumTRUE
            | val GHC.Classes.== "FALSE" -> GetSapiV1MarginOpenOrderListParametersQueryIsIsolatedEnumFALSE
            | GHC.Base.otherwise -> GetSapiV1MarginOpenOrderListParametersQueryIsIsolatedOther val
      )

-- | Represents a response of the operation 'getSapiV1MarginOpenOrderList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1MarginOpenOrderListResponseError' is used.
data GetSapiV1MarginOpenOrderListResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1MarginOpenOrderListResponseError GHC.Base.String
  | -- | List of Open Margin OCO orders
    GetSapiV1MarginOpenOrderListResponse200 ([GetSapiV1MarginOpenOrderListResponseBody200])
  | -- | Bad Request
    GetSapiV1MarginOpenOrderListResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1MarginOpenOrderListResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/openOrderList.GET.responses.200.content.application\/json.schema.items@ in the specification.
data GetSapiV1MarginOpenOrderListResponseBody200 = GetSapiV1MarginOpenOrderListResponseBody200
  { -- | contingencyType
    getSapiV1MarginOpenOrderListResponseBody200ContingencyType :: Data.Text.Internal.Text,
    -- | isIsolated
    getSapiV1MarginOpenOrderListResponseBody200IsIsolated :: GHC.Types.Bool,
    -- | listClientOrderId
    getSapiV1MarginOpenOrderListResponseBody200ListClientOrderId :: Data.Text.Internal.Text,
    -- | listOrderStatus
    getSapiV1MarginOpenOrderListResponseBody200ListOrderStatus :: Data.Text.Internal.Text,
    -- | listStatusType
    getSapiV1MarginOpenOrderListResponseBody200ListStatusType :: Data.Text.Internal.Text,
    -- | orderListId
    getSapiV1MarginOpenOrderListResponseBody200OrderListId :: GHC.Int.Int64,
    -- | orders
    getSapiV1MarginOpenOrderListResponseBody200Orders :: ([GetSapiV1MarginOpenOrderListResponseBody200Orders]),
    -- | symbol
    getSapiV1MarginOpenOrderListResponseBody200Symbol :: Data.Text.Internal.Text,
    -- | transactionTime
    getSapiV1MarginOpenOrderListResponseBody200TransactionTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginOpenOrderListResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["contingencyType" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200ContingencyType obj] : ["isIsolated" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200IsIsolated obj] : ["listClientOrderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200ListClientOrderId obj] : ["listOrderStatus" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200ListOrderStatus obj] : ["listStatusType" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200ListStatusType obj] : ["orderListId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200OrderListId obj] : ["orders" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200Orders obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200Symbol obj] : ["transactionTime" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200TransactionTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["contingencyType" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200ContingencyType obj] : ["isIsolated" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200IsIsolated obj] : ["listClientOrderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200ListClientOrderId obj] : ["listOrderStatus" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200ListOrderStatus obj] : ["listStatusType" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200ListStatusType obj] : ["orderListId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200OrderListId obj] : ["orders" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200Orders obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200Symbol obj] : ["transactionTime" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200TransactionTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginOpenOrderListResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginOpenOrderListResponseBody200" (\obj -> ((((((((GHC.Base.pure GetSapiV1MarginOpenOrderListResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "contingencyType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "isIsolated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "listClientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "listOrderStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "listStatusType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderListId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orders")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transactionTime"))

-- | Create a new 'GetSapiV1MarginOpenOrderListResponseBody200' with all required fields.
mkGetSapiV1MarginOpenOrderListResponseBody200 ::
  -- | 'getSapiV1MarginOpenOrderListResponseBody200ContingencyType'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginOpenOrderListResponseBody200IsIsolated'
  GHC.Types.Bool ->
  -- | 'getSapiV1MarginOpenOrderListResponseBody200ListClientOrderId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginOpenOrderListResponseBody200ListOrderStatus'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginOpenOrderListResponseBody200ListStatusType'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginOpenOrderListResponseBody200OrderListId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MarginOpenOrderListResponseBody200Orders'
  [GetSapiV1MarginOpenOrderListResponseBody200Orders] ->
  -- | 'getSapiV1MarginOpenOrderListResponseBody200Symbol'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginOpenOrderListResponseBody200TransactionTime'
  GHC.Int.Int64 ->
  GetSapiV1MarginOpenOrderListResponseBody200
mkGetSapiV1MarginOpenOrderListResponseBody200 getSapiV1MarginOpenOrderListResponseBody200ContingencyType getSapiV1MarginOpenOrderListResponseBody200IsIsolated getSapiV1MarginOpenOrderListResponseBody200ListClientOrderId getSapiV1MarginOpenOrderListResponseBody200ListOrderStatus getSapiV1MarginOpenOrderListResponseBody200ListStatusType getSapiV1MarginOpenOrderListResponseBody200OrderListId getSapiV1MarginOpenOrderListResponseBody200Orders getSapiV1MarginOpenOrderListResponseBody200Symbol getSapiV1MarginOpenOrderListResponseBody200TransactionTime =
  GetSapiV1MarginOpenOrderListResponseBody200
    { getSapiV1MarginOpenOrderListResponseBody200ContingencyType = getSapiV1MarginOpenOrderListResponseBody200ContingencyType,
      getSapiV1MarginOpenOrderListResponseBody200IsIsolated = getSapiV1MarginOpenOrderListResponseBody200IsIsolated,
      getSapiV1MarginOpenOrderListResponseBody200ListClientOrderId = getSapiV1MarginOpenOrderListResponseBody200ListClientOrderId,
      getSapiV1MarginOpenOrderListResponseBody200ListOrderStatus = getSapiV1MarginOpenOrderListResponseBody200ListOrderStatus,
      getSapiV1MarginOpenOrderListResponseBody200ListStatusType = getSapiV1MarginOpenOrderListResponseBody200ListStatusType,
      getSapiV1MarginOpenOrderListResponseBody200OrderListId = getSapiV1MarginOpenOrderListResponseBody200OrderListId,
      getSapiV1MarginOpenOrderListResponseBody200Orders = getSapiV1MarginOpenOrderListResponseBody200Orders,
      getSapiV1MarginOpenOrderListResponseBody200Symbol = getSapiV1MarginOpenOrderListResponseBody200Symbol,
      getSapiV1MarginOpenOrderListResponseBody200TransactionTime = getSapiV1MarginOpenOrderListResponseBody200TransactionTime
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/openOrderList.GET.responses.200.content.application\/json.schema.items.properties.orders.items@ in the specification.
data GetSapiV1MarginOpenOrderListResponseBody200Orders = GetSapiV1MarginOpenOrderListResponseBody200Orders
  { -- | clientOrderId
    getSapiV1MarginOpenOrderListResponseBody200OrdersClientOrderId :: Data.Text.Internal.Text,
    -- | orderId
    getSapiV1MarginOpenOrderListResponseBody200OrdersOrderId :: GHC.Int.Int64,
    -- | symbol
    getSapiV1MarginOpenOrderListResponseBody200OrdersSymbol :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginOpenOrderListResponseBody200Orders where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200OrdersClientOrderId obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200OrdersOrderId obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200OrdersSymbol obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200OrdersClientOrderId obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200OrdersOrderId obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginOpenOrderListResponseBody200OrdersSymbol obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginOpenOrderListResponseBody200Orders where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginOpenOrderListResponseBody200Orders" (\obj -> ((GHC.Base.pure GetSapiV1MarginOpenOrderListResponseBody200Orders GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "clientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol"))

-- | Create a new 'GetSapiV1MarginOpenOrderListResponseBody200Orders' with all required fields.
mkGetSapiV1MarginOpenOrderListResponseBody200Orders ::
  -- | 'getSapiV1MarginOpenOrderListResponseBody200OrdersClientOrderId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginOpenOrderListResponseBody200OrdersOrderId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MarginOpenOrderListResponseBody200OrdersSymbol'
  Data.Text.Internal.Text ->
  GetSapiV1MarginOpenOrderListResponseBody200Orders
mkGetSapiV1MarginOpenOrderListResponseBody200Orders getSapiV1MarginOpenOrderListResponseBody200OrdersClientOrderId getSapiV1MarginOpenOrderListResponseBody200OrdersOrderId getSapiV1MarginOpenOrderListResponseBody200OrdersSymbol =
  GetSapiV1MarginOpenOrderListResponseBody200Orders
    { getSapiV1MarginOpenOrderListResponseBody200OrdersClientOrderId = getSapiV1MarginOpenOrderListResponseBody200OrdersClientOrderId,
      getSapiV1MarginOpenOrderListResponseBody200OrdersOrderId = getSapiV1MarginOpenOrderListResponseBody200OrdersOrderId,
      getSapiV1MarginOpenOrderListResponseBody200OrdersSymbol = getSapiV1MarginOpenOrderListResponseBody200OrdersSymbol
    }

-- | > GET /sapi/v1/margin/openOrderList
--
-- The same as 'getSapiV1MarginOpenOrderList' but accepts an explicit configuration.
getSapiV1MarginOpenOrderListWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginOpenOrderListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1MarginOpenOrderListResponse)
getSapiV1MarginOpenOrderListWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1MarginOpenOrderListResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginOpenOrderListResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              ([GetSapiV1MarginOpenOrderListResponseBody200])
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginOpenOrderListResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginOpenOrderListResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/openOrderList")
          [ Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOpenOrderListParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOpenOrderListParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOpenOrderListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOpenOrderListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOpenOrderListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/margin/openOrderList
--
-- The same as 'getSapiV1MarginOpenOrderList' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginOpenOrderListRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginOpenOrderListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginOpenOrderListRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/openOrderList")
        [ Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOpenOrderListParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOpenOrderListParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOpenOrderListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOpenOrderListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOpenOrderListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/margin/openOrderList
--
-- The same as 'getSapiV1MarginOpenOrderList' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginOpenOrderListWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginOpenOrderListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginOpenOrderListWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/openOrderList")
          [ Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOpenOrderListParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOpenOrderListParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOpenOrderListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOpenOrderListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOpenOrderListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
