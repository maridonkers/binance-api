{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1MarginLoan
module Binance.Operations.GetSapiV1MarginLoan where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/margin/loan
--
-- - \`txId\` or \`startTime\` must be sent. \`txId\` takes precedence.
-- - Response in descending order
-- - If \`isolatedSymbol\` is not sent, crossed margin data will be returned
-- - Set \`archived\` to \`true\` to query data from 6 months ago
--
-- Weight(IP): 10
getSapiV1MarginLoan ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginLoanParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1MarginLoanResponse)
getSapiV1MarginLoan parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1MarginLoanResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginLoanResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1MarginLoanResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginLoanResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginLoanResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/loan")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginLoanParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "txId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryTxId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "archived") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryArchived parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginLoanParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginLoanParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/loan.GET.parameters@ in the specification.
data GetSapiV1MarginLoanParameters = GetSapiV1MarginLoanParameters
  { -- | queryArchived: Represents the parameter named \'archived\'
    --
    -- Default: false. Set to true for archived data from 6 months ago
    getSapiV1MarginLoanParametersQueryArchived :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryAsset: Represents the parameter named \'asset\'
    getSapiV1MarginLoanParametersQueryAsset :: Data.Text.Internal.Text,
    -- | queryCurrent: Represents the parameter named \'current\'
    --
    -- Current querying page. Start from 1. Default:1
    getSapiV1MarginLoanParametersQueryCurrent :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginLoanParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryIsolatedSymbol: Represents the parameter named \'isolatedSymbol\'
    --
    -- Isolated symbol
    getSapiV1MarginLoanParametersQueryIsolatedSymbol :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1MarginLoanParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1MarginLoanParametersQuerySignature :: Data.Text.Internal.Text,
    -- | querySize: Represents the parameter named \'size\'
    --
    -- Default:10 Max:100
    getSapiV1MarginLoanParametersQuerySize :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginLoanParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginLoanParametersQueryTimestamp :: GHC.Int.Int64,
    -- | queryTxId: Represents the parameter named \'txId\'
    --
    -- the tranId in  \`POST \/sapi\/v1\/margin\/loan\`
    getSapiV1MarginLoanParametersQueryTxId :: (GHC.Maybe.Maybe GHC.Int.Int64)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginLoanParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryArchived" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQueryArchived obj) : ["queryAsset" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanParametersQueryAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsolatedSymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQueryIsolatedSymbol obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQuerySize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTxId" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQueryTxId obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryArchived" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQueryArchived obj) : ["queryAsset" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanParametersQueryAsset obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsolatedSymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQueryIsolatedSymbol obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySize" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQuerySize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanParametersQueryTimestamp obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryTxId" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginLoanParametersQueryTxId obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginLoanParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginLoanParameters" (\obj -> ((((((((((GHC.Base.pure GetSapiV1MarginLoanParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryArchived")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryAsset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCurrent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryIsolatedSymbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySize")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryTxId"))

-- | Create a new 'GetSapiV1MarginLoanParameters' with all required fields.
mkGetSapiV1MarginLoanParameters ::
  -- | 'getSapiV1MarginLoanParametersQueryAsset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginLoanParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginLoanParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1MarginLoanParameters
mkGetSapiV1MarginLoanParameters getSapiV1MarginLoanParametersQueryAsset getSapiV1MarginLoanParametersQuerySignature getSapiV1MarginLoanParametersQueryTimestamp =
  GetSapiV1MarginLoanParameters
    { getSapiV1MarginLoanParametersQueryArchived = GHC.Maybe.Nothing,
      getSapiV1MarginLoanParametersQueryAsset = getSapiV1MarginLoanParametersQueryAsset,
      getSapiV1MarginLoanParametersQueryCurrent = GHC.Maybe.Nothing,
      getSapiV1MarginLoanParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1MarginLoanParametersQueryIsolatedSymbol = GHC.Maybe.Nothing,
      getSapiV1MarginLoanParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1MarginLoanParametersQuerySignature = getSapiV1MarginLoanParametersQuerySignature,
      getSapiV1MarginLoanParametersQuerySize = GHC.Maybe.Nothing,
      getSapiV1MarginLoanParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1MarginLoanParametersQueryTimestamp = getSapiV1MarginLoanParametersQueryTimestamp,
      getSapiV1MarginLoanParametersQueryTxId = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'getSapiV1MarginLoan'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1MarginLoanResponseError' is used.
data GetSapiV1MarginLoanResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1MarginLoanResponseError GHC.Base.String
  | -- | Loan records
    GetSapiV1MarginLoanResponse200 GetSapiV1MarginLoanResponseBody200
  | -- | Bad Request
    GetSapiV1MarginLoanResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1MarginLoanResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/loan.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1MarginLoanResponseBody200 = GetSapiV1MarginLoanResponseBody200
  { -- | rows
    getSapiV1MarginLoanResponseBody200Rows :: ([GetSapiV1MarginLoanResponseBody200Rows]),
    -- | total
    getSapiV1MarginLoanResponseBody200Total :: GHC.Int.Int32
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginLoanResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200Total obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200Total obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginLoanResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginLoanResponseBody200" (\obj -> (GHC.Base.pure GetSapiV1MarginLoanResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "rows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'GetSapiV1MarginLoanResponseBody200' with all required fields.
mkGetSapiV1MarginLoanResponseBody200 ::
  -- | 'getSapiV1MarginLoanResponseBody200Rows'
  [GetSapiV1MarginLoanResponseBody200Rows] ->
  -- | 'getSapiV1MarginLoanResponseBody200Total'
  GHC.Int.Int32 ->
  GetSapiV1MarginLoanResponseBody200
mkGetSapiV1MarginLoanResponseBody200 getSapiV1MarginLoanResponseBody200Rows getSapiV1MarginLoanResponseBody200Total =
  GetSapiV1MarginLoanResponseBody200
    { getSapiV1MarginLoanResponseBody200Rows = getSapiV1MarginLoanResponseBody200Rows,
      getSapiV1MarginLoanResponseBody200Total = getSapiV1MarginLoanResponseBody200Total
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/loan.GET.responses.200.content.application\/json.schema.properties.rows.items@ in the specification.
data GetSapiV1MarginLoanResponseBody200Rows = GetSapiV1MarginLoanResponseBody200Rows
  { -- | asset
    getSapiV1MarginLoanResponseBody200RowsAsset :: Data.Text.Internal.Text,
    -- | isolatedSymbol
    getSapiV1MarginLoanResponseBody200RowsIsolatedSymbol :: Data.Text.Internal.Text,
    -- | principal
    getSapiV1MarginLoanResponseBody200RowsPrincipal :: Data.Text.Internal.Text,
    -- | status
    getSapiV1MarginLoanResponseBody200RowsStatus :: Data.Text.Internal.Text,
    -- | timestamp
    getSapiV1MarginLoanResponseBody200RowsTimestamp :: GHC.Int.Int64,
    -- | txId
    getSapiV1MarginLoanResponseBody200RowsTxId :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginLoanResponseBody200Rows where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200RowsAsset obj] : ["isolatedSymbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200RowsIsolatedSymbol obj] : ["principal" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200RowsPrincipal obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200RowsStatus obj] : ["timestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200RowsTimestamp obj] : ["txId" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200RowsTxId obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["asset" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200RowsAsset obj] : ["isolatedSymbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200RowsIsolatedSymbol obj] : ["principal" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200RowsPrincipal obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200RowsStatus obj] : ["timestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200RowsTimestamp obj] : ["txId" Data.Aeson.Types.ToJSON..= getSapiV1MarginLoanResponseBody200RowsTxId obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginLoanResponseBody200Rows where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginLoanResponseBody200Rows" (\obj -> (((((GHC.Base.pure GetSapiV1MarginLoanResponseBody200Rows GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "asset")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "isolatedSymbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "principal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "timestamp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "txId"))

-- | Create a new 'GetSapiV1MarginLoanResponseBody200Rows' with all required fields.
mkGetSapiV1MarginLoanResponseBody200Rows ::
  -- | 'getSapiV1MarginLoanResponseBody200RowsAsset'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginLoanResponseBody200RowsIsolatedSymbol'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginLoanResponseBody200RowsPrincipal'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginLoanResponseBody200RowsStatus'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginLoanResponseBody200RowsTimestamp'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MarginLoanResponseBody200RowsTxId'
  GHC.Int.Int64 ->
  GetSapiV1MarginLoanResponseBody200Rows
mkGetSapiV1MarginLoanResponseBody200Rows getSapiV1MarginLoanResponseBody200RowsAsset getSapiV1MarginLoanResponseBody200RowsIsolatedSymbol getSapiV1MarginLoanResponseBody200RowsPrincipal getSapiV1MarginLoanResponseBody200RowsStatus getSapiV1MarginLoanResponseBody200RowsTimestamp getSapiV1MarginLoanResponseBody200RowsTxId =
  GetSapiV1MarginLoanResponseBody200Rows
    { getSapiV1MarginLoanResponseBody200RowsAsset = getSapiV1MarginLoanResponseBody200RowsAsset,
      getSapiV1MarginLoanResponseBody200RowsIsolatedSymbol = getSapiV1MarginLoanResponseBody200RowsIsolatedSymbol,
      getSapiV1MarginLoanResponseBody200RowsPrincipal = getSapiV1MarginLoanResponseBody200RowsPrincipal,
      getSapiV1MarginLoanResponseBody200RowsStatus = getSapiV1MarginLoanResponseBody200RowsStatus,
      getSapiV1MarginLoanResponseBody200RowsTimestamp = getSapiV1MarginLoanResponseBody200RowsTimestamp,
      getSapiV1MarginLoanResponseBody200RowsTxId = getSapiV1MarginLoanResponseBody200RowsTxId
    }

-- | > GET /sapi/v1/margin/loan
--
-- The same as 'getSapiV1MarginLoan' but accepts an explicit configuration.
getSapiV1MarginLoanWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginLoanParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1MarginLoanResponse)
getSapiV1MarginLoanWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1MarginLoanResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginLoanResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1MarginLoanResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginLoanResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginLoanResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/loan")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginLoanParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "txId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryTxId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "archived") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryArchived parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginLoanParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginLoanParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/margin/loan
--
-- The same as 'getSapiV1MarginLoan' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginLoanRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginLoanParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginLoanRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/loan")
        [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginLoanParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "txId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryTxId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "archived") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryArchived parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginLoanParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginLoanParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/margin/loan
--
-- The same as 'getSapiV1MarginLoan' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginLoanWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginLoanParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginLoanWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/loan")
          [ Binance.Common.QueryParameter (Data.Text.pack "asset") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginLoanParametersQueryAsset parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "isolatedSymbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryIsolatedSymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "txId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryTxId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "size") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQuerySize parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "archived") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryArchived parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginLoanParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginLoanParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginLoanParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
