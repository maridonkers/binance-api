{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1ManagedSubaccountAsset
module Binance.Operations.GetSapiV1ManagedSubaccountAsset where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/managed-subaccount/asset
--
-- Weight(IP): 1
getSapiV1ManagedSubaccountAsset ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1ManagedSubaccountAssetParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1ManagedSubaccountAssetResponse)
getSapiV1ManagedSubaccountAsset parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1ManagedSubaccountAssetResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1ManagedSubaccountAssetResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ([GetSapiV1ManagedSubaccountAssetResponseBody200])
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1ManagedSubaccountAssetResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1ManagedSubaccountAssetResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/managed-subaccount/asset")
        [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAssetParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAssetParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAssetParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAssetParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/managed-subaccount\/asset.GET.parameters@ in the specification.
data GetSapiV1ManagedSubaccountAssetParameters = GetSapiV1ManagedSubaccountAssetParameters
  { -- | queryEmail: Represents the parameter named \'email\'
    --
    -- Sub-account email
    getSapiV1ManagedSubaccountAssetParametersQueryEmail :: Data.Text.Internal.Text,
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1ManagedSubaccountAssetParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1ManagedSubaccountAssetParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1ManagedSubaccountAssetParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1ManagedSubaccountAssetParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["queryEmail" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetParametersQueryEmail obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1ManagedSubaccountAssetParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["queryEmail" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetParametersQueryEmail obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1ManagedSubaccountAssetParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1ManagedSubaccountAssetParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1ManagedSubaccountAssetParameters" (\obj -> (((GHC.Base.pure GetSapiV1ManagedSubaccountAssetParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryEmail")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1ManagedSubaccountAssetParameters' with all required fields.
mkGetSapiV1ManagedSubaccountAssetParameters ::
  -- | 'getSapiV1ManagedSubaccountAssetParametersQueryEmail'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1ManagedSubaccountAssetParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1ManagedSubaccountAssetParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1ManagedSubaccountAssetParameters
mkGetSapiV1ManagedSubaccountAssetParameters getSapiV1ManagedSubaccountAssetParametersQueryEmail getSapiV1ManagedSubaccountAssetParametersQuerySignature getSapiV1ManagedSubaccountAssetParametersQueryTimestamp =
  GetSapiV1ManagedSubaccountAssetParameters
    { getSapiV1ManagedSubaccountAssetParametersQueryEmail = getSapiV1ManagedSubaccountAssetParametersQueryEmail,
      getSapiV1ManagedSubaccountAssetParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1ManagedSubaccountAssetParametersQuerySignature = getSapiV1ManagedSubaccountAssetParametersQuerySignature,
      getSapiV1ManagedSubaccountAssetParametersQueryTimestamp = getSapiV1ManagedSubaccountAssetParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1ManagedSubaccountAsset'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1ManagedSubaccountAssetResponseError' is used.
data GetSapiV1ManagedSubaccountAssetResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1ManagedSubaccountAssetResponseError GHC.Base.String
  | -- | List of asset details
    GetSapiV1ManagedSubaccountAssetResponse200 ([GetSapiV1ManagedSubaccountAssetResponseBody200])
  | -- | Bad Request
    GetSapiV1ManagedSubaccountAssetResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1ManagedSubaccountAssetResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/managed-subaccount\/asset.GET.responses.200.content.application\/json.schema.items@ in the specification.
data GetSapiV1ManagedSubaccountAssetResponseBody200 = GetSapiV1ManagedSubaccountAssetResponseBody200
  { -- | availableBalance
    getSapiV1ManagedSubaccountAssetResponseBody200AvailableBalance :: Data.Text.Internal.Text,
    -- | btcValue
    getSapiV1ManagedSubaccountAssetResponseBody200BtcValue :: Data.Text.Internal.Text,
    -- | coin
    getSapiV1ManagedSubaccountAssetResponseBody200Coin :: Data.Text.Internal.Text,
    -- | inOrder
    getSapiV1ManagedSubaccountAssetResponseBody200InOrder :: Data.Text.Internal.Text,
    -- | name
    getSapiV1ManagedSubaccountAssetResponseBody200Name :: Data.Text.Internal.Text,
    -- | totalBalance
    getSapiV1ManagedSubaccountAssetResponseBody200TotalBalance :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1ManagedSubaccountAssetResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["availableBalance" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetResponseBody200AvailableBalance obj] : ["btcValue" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetResponseBody200BtcValue obj] : ["coin" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetResponseBody200Coin obj] : ["inOrder" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetResponseBody200InOrder obj] : ["name" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetResponseBody200Name obj] : ["totalBalance" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetResponseBody200TotalBalance obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["availableBalance" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetResponseBody200AvailableBalance obj] : ["btcValue" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetResponseBody200BtcValue obj] : ["coin" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetResponseBody200Coin obj] : ["inOrder" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetResponseBody200InOrder obj] : ["name" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetResponseBody200Name obj] : ["totalBalance" Data.Aeson.Types.ToJSON..= getSapiV1ManagedSubaccountAssetResponseBody200TotalBalance obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1ManagedSubaccountAssetResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1ManagedSubaccountAssetResponseBody200" (\obj -> (((((GHC.Base.pure GetSapiV1ManagedSubaccountAssetResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "availableBalance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "btcValue")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "coin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "inOrder")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "totalBalance"))

-- | Create a new 'GetSapiV1ManagedSubaccountAssetResponseBody200' with all required fields.
mkGetSapiV1ManagedSubaccountAssetResponseBody200 ::
  -- | 'getSapiV1ManagedSubaccountAssetResponseBody200AvailableBalance'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1ManagedSubaccountAssetResponseBody200BtcValue'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1ManagedSubaccountAssetResponseBody200Coin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1ManagedSubaccountAssetResponseBody200InOrder'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1ManagedSubaccountAssetResponseBody200Name'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1ManagedSubaccountAssetResponseBody200TotalBalance'
  Data.Text.Internal.Text ->
  GetSapiV1ManagedSubaccountAssetResponseBody200
mkGetSapiV1ManagedSubaccountAssetResponseBody200 getSapiV1ManagedSubaccountAssetResponseBody200AvailableBalance getSapiV1ManagedSubaccountAssetResponseBody200BtcValue getSapiV1ManagedSubaccountAssetResponseBody200Coin getSapiV1ManagedSubaccountAssetResponseBody200InOrder getSapiV1ManagedSubaccountAssetResponseBody200Name getSapiV1ManagedSubaccountAssetResponseBody200TotalBalance =
  GetSapiV1ManagedSubaccountAssetResponseBody200
    { getSapiV1ManagedSubaccountAssetResponseBody200AvailableBalance = getSapiV1ManagedSubaccountAssetResponseBody200AvailableBalance,
      getSapiV1ManagedSubaccountAssetResponseBody200BtcValue = getSapiV1ManagedSubaccountAssetResponseBody200BtcValue,
      getSapiV1ManagedSubaccountAssetResponseBody200Coin = getSapiV1ManagedSubaccountAssetResponseBody200Coin,
      getSapiV1ManagedSubaccountAssetResponseBody200InOrder = getSapiV1ManagedSubaccountAssetResponseBody200InOrder,
      getSapiV1ManagedSubaccountAssetResponseBody200Name = getSapiV1ManagedSubaccountAssetResponseBody200Name,
      getSapiV1ManagedSubaccountAssetResponseBody200TotalBalance = getSapiV1ManagedSubaccountAssetResponseBody200TotalBalance
    }

-- | > GET /sapi/v1/managed-subaccount/asset
--
-- The same as 'getSapiV1ManagedSubaccountAsset' but accepts an explicit configuration.
getSapiV1ManagedSubaccountAssetWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1ManagedSubaccountAssetParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1ManagedSubaccountAssetResponse)
getSapiV1ManagedSubaccountAssetWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1ManagedSubaccountAssetResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1ManagedSubaccountAssetResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              ([GetSapiV1ManagedSubaccountAssetResponseBody200])
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1ManagedSubaccountAssetResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1ManagedSubaccountAssetResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/managed-subaccount/asset")
          [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAssetParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAssetParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAssetParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAssetParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/managed-subaccount/asset
--
-- The same as 'getSapiV1ManagedSubaccountAsset' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1ManagedSubaccountAssetRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1ManagedSubaccountAssetParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1ManagedSubaccountAssetRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/managed-subaccount/asset")
        [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAssetParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAssetParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAssetParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAssetParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/managed-subaccount/asset
--
-- The same as 'getSapiV1ManagedSubaccountAsset' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1ManagedSubaccountAssetWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1ManagedSubaccountAssetParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1ManagedSubaccountAssetWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/managed-subaccount/asset")
          [ Binance.Common.QueryParameter (Data.Text.pack "email") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAssetParametersQueryEmail parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1ManagedSubaccountAssetParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAssetParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1ManagedSubaccountAssetParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
