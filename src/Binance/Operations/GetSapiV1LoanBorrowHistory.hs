{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1LoanBorrowHistory
module Binance.Operations.GetSapiV1LoanBorrowHistory where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/loan/borrow/history
--
-- - If startTime and endTime are not sent, the recent 90-day data will be returned.
-- - The max interval between startTime and endTime is 180 days.
--
-- Weight(IP): 400
getSapiV1LoanBorrowHistory ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LoanBorrowHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1LoanBorrowHistoryResponse)
getSapiV1LoanBorrowHistory parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1LoanBorrowHistoryResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LoanBorrowHistoryResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1LoanBorrowHistoryResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LoanBorrowHistoryResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1LoanBorrowHistoryResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/loan/borrow/history")
        [ Binance.Common.QueryParameter (Data.Text.pack "orderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanBorrowHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanBorrowHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/loan\/borrow\/history.GET.parameters@ in the specification.
data GetSapiV1LoanBorrowHistoryParameters = GetSapiV1LoanBorrowHistoryParameters
  { -- | queryCollateralCoin: Represents the parameter named \'collateralCoin\'
    --
    -- Coin used as collateral
    getSapiV1LoanBorrowHistoryParametersQueryCollateralCoin :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryCurrent: Represents the parameter named \'current\'
    --
    -- Current querying page. Start from 1. Default:1
    getSapiV1LoanBorrowHistoryParametersQueryCurrent :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1LoanBorrowHistoryParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- default 10, max 100
    getSapiV1LoanBorrowHistoryParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLoanCoin: Represents the parameter named \'loanCoin\'
    --
    -- Coin loaned
    getSapiV1LoanBorrowHistoryParametersQueryLoanCoin :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryOrderId: Represents the parameter named \'orderId\'
    --
    -- orderId in POST \/sapi\/v1\/loan\/borrow
    getSapiV1LoanBorrowHistoryParametersQueryOrderId :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1LoanBorrowHistoryParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1LoanBorrowHistoryParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1LoanBorrowHistoryParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1LoanBorrowHistoryParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LoanBorrowHistoryParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCollateralCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryCollateralCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLoanCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryLoanCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrderId" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCollateralCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryCollateralCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLoanCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryLoanCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrderId" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1LoanBorrowHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LoanBorrowHistoryParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LoanBorrowHistoryParameters" (\obj -> (((((((((GHC.Base.pure GetSapiV1LoanBorrowHistoryParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCollateralCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCurrent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLoanCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1LoanBorrowHistoryParameters' with all required fields.
mkGetSapiV1LoanBorrowHistoryParameters ::
  -- | 'getSapiV1LoanBorrowHistoryParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanBorrowHistoryParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1LoanBorrowHistoryParameters
mkGetSapiV1LoanBorrowHistoryParameters getSapiV1LoanBorrowHistoryParametersQuerySignature getSapiV1LoanBorrowHistoryParametersQueryTimestamp =
  GetSapiV1LoanBorrowHistoryParameters
    { getSapiV1LoanBorrowHistoryParametersQueryCollateralCoin = GHC.Maybe.Nothing,
      getSapiV1LoanBorrowHistoryParametersQueryCurrent = GHC.Maybe.Nothing,
      getSapiV1LoanBorrowHistoryParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1LoanBorrowHistoryParametersQueryLimit = GHC.Maybe.Nothing,
      getSapiV1LoanBorrowHistoryParametersQueryLoanCoin = GHC.Maybe.Nothing,
      getSapiV1LoanBorrowHistoryParametersQueryOrderId = GHC.Maybe.Nothing,
      getSapiV1LoanBorrowHistoryParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1LoanBorrowHistoryParametersQuerySignature = getSapiV1LoanBorrowHistoryParametersQuerySignature,
      getSapiV1LoanBorrowHistoryParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1LoanBorrowHistoryParametersQueryTimestamp = getSapiV1LoanBorrowHistoryParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1LoanBorrowHistory'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1LoanBorrowHistoryResponseError' is used.
data GetSapiV1LoanBorrowHistoryResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1LoanBorrowHistoryResponseError GHC.Base.String
  | -- | Borrow History
    GetSapiV1LoanBorrowHistoryResponse200 GetSapiV1LoanBorrowHistoryResponseBody200
  | -- | Bad Request
    GetSapiV1LoanBorrowHistoryResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1LoanBorrowHistoryResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/loan\/borrow\/history.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1LoanBorrowHistoryResponseBody200 = GetSapiV1LoanBorrowHistoryResponseBody200
  { -- | rows
    getSapiV1LoanBorrowHistoryResponseBody200Rows :: ([GetSapiV1LoanBorrowHistoryResponseBody200Rows]),
    -- | total
    getSapiV1LoanBorrowHistoryResponseBody200Total :: GHC.Int.Int32
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LoanBorrowHistoryResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200Total obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200Total obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LoanBorrowHistoryResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LoanBorrowHistoryResponseBody200" (\obj -> (GHC.Base.pure GetSapiV1LoanBorrowHistoryResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "rows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'GetSapiV1LoanBorrowHistoryResponseBody200' with all required fields.
mkGetSapiV1LoanBorrowHistoryResponseBody200 ::
  -- | 'getSapiV1LoanBorrowHistoryResponseBody200Rows'
  [GetSapiV1LoanBorrowHistoryResponseBody200Rows] ->
  -- | 'getSapiV1LoanBorrowHistoryResponseBody200Total'
  GHC.Int.Int32 ->
  GetSapiV1LoanBorrowHistoryResponseBody200
mkGetSapiV1LoanBorrowHistoryResponseBody200 getSapiV1LoanBorrowHistoryResponseBody200Rows getSapiV1LoanBorrowHistoryResponseBody200Total =
  GetSapiV1LoanBorrowHistoryResponseBody200
    { getSapiV1LoanBorrowHistoryResponseBody200Rows = getSapiV1LoanBorrowHistoryResponseBody200Rows,
      getSapiV1LoanBorrowHistoryResponseBody200Total = getSapiV1LoanBorrowHistoryResponseBody200Total
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/loan\/borrow\/history.GET.responses.200.content.application\/json.schema.properties.rows.items@ in the specification.
data GetSapiV1LoanBorrowHistoryResponseBody200Rows = GetSapiV1LoanBorrowHistoryResponseBody200Rows
  { -- | borrowTime
    getSapiV1LoanBorrowHistoryResponseBody200RowsBorrowTime :: GHC.Int.Int64,
    -- | collateralCoin
    getSapiV1LoanBorrowHistoryResponseBody200RowsCollateralCoin :: Data.Text.Internal.Text,
    -- | hourlyInterestRate
    getSapiV1LoanBorrowHistoryResponseBody200RowsHourlyInterestRate :: Data.Text.Internal.Text,
    -- | initialCollateralAmount
    getSapiV1LoanBorrowHistoryResponseBody200RowsInitialCollateralAmount :: Data.Text.Internal.Text,
    -- | initialLoanAmount
    getSapiV1LoanBorrowHistoryResponseBody200RowsInitialLoanAmount :: Data.Text.Internal.Text,
    -- | loanCoin
    getSapiV1LoanBorrowHistoryResponseBody200RowsLoanCoin :: Data.Text.Internal.Text,
    -- | loanTerm
    getSapiV1LoanBorrowHistoryResponseBody200RowsLoanTerm :: Data.Text.Internal.Text,
    -- | orderId
    getSapiV1LoanBorrowHistoryResponseBody200RowsOrderId :: GHC.Int.Int64,
    -- | status
    getSapiV1LoanBorrowHistoryResponseBody200RowsStatus :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1LoanBorrowHistoryResponseBody200Rows where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["borrowTime" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsBorrowTime obj] : ["collateralCoin" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsCollateralCoin obj] : ["hourlyInterestRate" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsHourlyInterestRate obj] : ["initialCollateralAmount" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsInitialCollateralAmount obj] : ["initialLoanAmount" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsInitialLoanAmount obj] : ["loanCoin" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsLoanCoin obj] : ["loanTerm" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsLoanTerm obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsOrderId obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsStatus obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["borrowTime" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsBorrowTime obj] : ["collateralCoin" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsCollateralCoin obj] : ["hourlyInterestRate" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsHourlyInterestRate obj] : ["initialCollateralAmount" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsInitialCollateralAmount obj] : ["initialLoanAmount" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsInitialLoanAmount obj] : ["loanCoin" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsLoanCoin obj] : ["loanTerm" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsLoanTerm obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsOrderId obj] : ["status" Data.Aeson.Types.ToJSON..= getSapiV1LoanBorrowHistoryResponseBody200RowsStatus obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1LoanBorrowHistoryResponseBody200Rows where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1LoanBorrowHistoryResponseBody200Rows" (\obj -> ((((((((GHC.Base.pure GetSapiV1LoanBorrowHistoryResponseBody200Rows GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "borrowTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "collateralCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "hourlyInterestRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "initialCollateralAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "initialLoanAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "loanCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "loanTerm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status"))

-- | Create a new 'GetSapiV1LoanBorrowHistoryResponseBody200Rows' with all required fields.
mkGetSapiV1LoanBorrowHistoryResponseBody200Rows ::
  -- | 'getSapiV1LoanBorrowHistoryResponseBody200RowsBorrowTime'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LoanBorrowHistoryResponseBody200RowsCollateralCoin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanBorrowHistoryResponseBody200RowsHourlyInterestRate'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanBorrowHistoryResponseBody200RowsInitialCollateralAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanBorrowHistoryResponseBody200RowsInitialLoanAmount'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanBorrowHistoryResponseBody200RowsLoanCoin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanBorrowHistoryResponseBody200RowsLoanTerm'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1LoanBorrowHistoryResponseBody200RowsOrderId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1LoanBorrowHistoryResponseBody200RowsStatus'
  Data.Text.Internal.Text ->
  GetSapiV1LoanBorrowHistoryResponseBody200Rows
mkGetSapiV1LoanBorrowHistoryResponseBody200Rows getSapiV1LoanBorrowHistoryResponseBody200RowsBorrowTime getSapiV1LoanBorrowHistoryResponseBody200RowsCollateralCoin getSapiV1LoanBorrowHistoryResponseBody200RowsHourlyInterestRate getSapiV1LoanBorrowHistoryResponseBody200RowsInitialCollateralAmount getSapiV1LoanBorrowHistoryResponseBody200RowsInitialLoanAmount getSapiV1LoanBorrowHistoryResponseBody200RowsLoanCoin getSapiV1LoanBorrowHistoryResponseBody200RowsLoanTerm getSapiV1LoanBorrowHistoryResponseBody200RowsOrderId getSapiV1LoanBorrowHistoryResponseBody200RowsStatus =
  GetSapiV1LoanBorrowHistoryResponseBody200Rows
    { getSapiV1LoanBorrowHistoryResponseBody200RowsBorrowTime = getSapiV1LoanBorrowHistoryResponseBody200RowsBorrowTime,
      getSapiV1LoanBorrowHistoryResponseBody200RowsCollateralCoin = getSapiV1LoanBorrowHistoryResponseBody200RowsCollateralCoin,
      getSapiV1LoanBorrowHistoryResponseBody200RowsHourlyInterestRate = getSapiV1LoanBorrowHistoryResponseBody200RowsHourlyInterestRate,
      getSapiV1LoanBorrowHistoryResponseBody200RowsInitialCollateralAmount = getSapiV1LoanBorrowHistoryResponseBody200RowsInitialCollateralAmount,
      getSapiV1LoanBorrowHistoryResponseBody200RowsInitialLoanAmount = getSapiV1LoanBorrowHistoryResponseBody200RowsInitialLoanAmount,
      getSapiV1LoanBorrowHistoryResponseBody200RowsLoanCoin = getSapiV1LoanBorrowHistoryResponseBody200RowsLoanCoin,
      getSapiV1LoanBorrowHistoryResponseBody200RowsLoanTerm = getSapiV1LoanBorrowHistoryResponseBody200RowsLoanTerm,
      getSapiV1LoanBorrowHistoryResponseBody200RowsOrderId = getSapiV1LoanBorrowHistoryResponseBody200RowsOrderId,
      getSapiV1LoanBorrowHistoryResponseBody200RowsStatus = getSapiV1LoanBorrowHistoryResponseBody200RowsStatus
    }

-- | > GET /sapi/v1/loan/borrow/history
--
-- The same as 'getSapiV1LoanBorrowHistory' but accepts an explicit configuration.
getSapiV1LoanBorrowHistoryWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LoanBorrowHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1LoanBorrowHistoryResponse)
getSapiV1LoanBorrowHistoryWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1LoanBorrowHistoryResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LoanBorrowHistoryResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1LoanBorrowHistoryResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LoanBorrowHistoryResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1LoanBorrowHistoryResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/loan/borrow/history")
          [ Binance.Common.QueryParameter (Data.Text.pack "orderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanBorrowHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanBorrowHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/loan/borrow/history
--
-- The same as 'getSapiV1LoanBorrowHistory' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LoanBorrowHistoryRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LoanBorrowHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LoanBorrowHistoryRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/loan/borrow/history")
        [ Binance.Common.QueryParameter (Data.Text.pack "orderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanBorrowHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanBorrowHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/loan/borrow/history
--
-- The same as 'getSapiV1LoanBorrowHistory' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1LoanBorrowHistoryWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1LoanBorrowHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1LoanBorrowHistoryWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/loan/borrow/history")
          [ Binance.Common.QueryParameter (Data.Text.pack "orderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "loanCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryLoanCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1LoanBorrowHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanBorrowHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1LoanBorrowHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
