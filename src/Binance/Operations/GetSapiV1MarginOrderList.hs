{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1MarginOrderList
module Binance.Operations.GetSapiV1MarginOrderList where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/margin/orderList
--
-- Retrieves a specific OCO based on provided optional parameters
--
-- - Either \`orderListId\` or \`origClientOrderId\` must be provided
--
-- Weight(IP): 10
getSapiV1MarginOrderList ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginOrderListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1MarginOrderListResponse)
getSapiV1MarginOrderList parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1MarginOrderListResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginOrderListResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1MarginOrderListResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginOrderListResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1MarginOrderListResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/orderList")
        [ Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "orderListId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryOrderListId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "origClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryOrigClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOrderListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOrderListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/orderList.GET.parameters@ in the specification.
data GetSapiV1MarginOrderListParameters = GetSapiV1MarginOrderListParameters
  { -- | queryIsIsolated: Represents the parameter named \'isIsolated\'
    --
    -- * \`TRUE\` - For isolated margin
    -- * \`FALSE\` - Default, not for isolated margin
    getSapiV1MarginOrderListParametersQueryIsIsolated :: (GHC.Maybe.Maybe GetSapiV1MarginOrderListParametersQueryIsIsolated),
    -- | queryOrderListId: Represents the parameter named \'orderListId\'
    --
    -- Order list id
    getSapiV1MarginOrderListParametersQueryOrderListId :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryOrigClientOrderId: Represents the parameter named \'origClientOrderId\'
    --
    -- Order id from client
    getSapiV1MarginOrderListParametersQueryOrigClientOrderId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1MarginOrderListParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1MarginOrderListParametersQuerySignature :: Data.Text.Internal.Text,
    -- | querySymbol: Represents the parameter named \'symbol\'
    --
    -- Mandatory for isolated margin, not supported for cross margin
    getSapiV1MarginOrderListParametersQuerySymbol :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1MarginOrderListParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginOrderListParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsIsolated" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOrderListParametersQueryIsIsolated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrderListId" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOrderListParametersQueryOrderListId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrigClientOrderId" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOrderListParametersQueryOrigClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOrderListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOrderListParametersQuerySymbol obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryIsIsolated" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOrderListParametersQueryIsIsolated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrderListId" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOrderListParametersQueryOrderListId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrigClientOrderId" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOrderListParametersQueryOrigClientOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOrderListParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySymbol" Data.Aeson.Types.ToJSON..=)) (getSapiV1MarginOrderListParametersQuerySymbol obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginOrderListParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginOrderListParameters" (\obj -> ((((((GHC.Base.pure GetSapiV1MarginOrderListParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryIsIsolated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrderListId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrigClientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySymbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1MarginOrderListParameters' with all required fields.
mkGetSapiV1MarginOrderListParameters ::
  -- | 'getSapiV1MarginOrderListParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginOrderListParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1MarginOrderListParameters
mkGetSapiV1MarginOrderListParameters getSapiV1MarginOrderListParametersQuerySignature getSapiV1MarginOrderListParametersQueryTimestamp =
  GetSapiV1MarginOrderListParameters
    { getSapiV1MarginOrderListParametersQueryIsIsolated = GHC.Maybe.Nothing,
      getSapiV1MarginOrderListParametersQueryOrderListId = GHC.Maybe.Nothing,
      getSapiV1MarginOrderListParametersQueryOrigClientOrderId = GHC.Maybe.Nothing,
      getSapiV1MarginOrderListParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1MarginOrderListParametersQuerySignature = getSapiV1MarginOrderListParametersQuerySignature,
      getSapiV1MarginOrderListParametersQuerySymbol = GHC.Maybe.Nothing,
      getSapiV1MarginOrderListParametersQueryTimestamp = getSapiV1MarginOrderListParametersQueryTimestamp
    }

-- | Defines the enum schema located at @paths.\/sapi\/v1\/margin\/orderList.GET.parameters.properties.queryIsIsolated@ in the specification.
--
-- Represents the parameter named \'isIsolated\'
--
-- * \`TRUE\` - For isolated margin
-- * \`FALSE\` - Default, not for isolated margin
data GetSapiV1MarginOrderListParametersQueryIsIsolated
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetSapiV1MarginOrderListParametersQueryIsIsolatedOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetSapiV1MarginOrderListParametersQueryIsIsolatedTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"TRUE"@
    GetSapiV1MarginOrderListParametersQueryIsIsolatedEnumTRUE
  | -- | Represents the JSON value @"FALSE"@
    GetSapiV1MarginOrderListParametersQueryIsIsolatedEnumFALSE
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginOrderListParametersQueryIsIsolated where
  toJSON (GetSapiV1MarginOrderListParametersQueryIsIsolatedOther val) = val
  toJSON (GetSapiV1MarginOrderListParametersQueryIsIsolatedTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetSapiV1MarginOrderListParametersQueryIsIsolatedEnumTRUE) = "TRUE"
  toJSON (GetSapiV1MarginOrderListParametersQueryIsIsolatedEnumFALSE) = "FALSE"

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginOrderListParametersQueryIsIsolated where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "TRUE" -> GetSapiV1MarginOrderListParametersQueryIsIsolatedEnumTRUE
            | val GHC.Classes.== "FALSE" -> GetSapiV1MarginOrderListParametersQueryIsIsolatedEnumFALSE
            | GHC.Base.otherwise -> GetSapiV1MarginOrderListParametersQueryIsIsolatedOther val
      )

-- | Represents a response of the operation 'getSapiV1MarginOrderList'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1MarginOrderListResponseError' is used.
data GetSapiV1MarginOrderListResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1MarginOrderListResponseError GHC.Base.String
  | -- | Margin OCO details
    GetSapiV1MarginOrderListResponse200 GetSapiV1MarginOrderListResponseBody200
  | -- | Bad Request
    GetSapiV1MarginOrderListResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1MarginOrderListResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/orderList.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1MarginOrderListResponseBody200 = GetSapiV1MarginOrderListResponseBody200
  { -- | contingencyType
    getSapiV1MarginOrderListResponseBody200ContingencyType :: Data.Text.Internal.Text,
    -- | isIsolated
    getSapiV1MarginOrderListResponseBody200IsIsolated :: GHC.Types.Bool,
    -- | listClientOrderId
    getSapiV1MarginOrderListResponseBody200ListClientOrderId :: Data.Text.Internal.Text,
    -- | listOrderStatus
    getSapiV1MarginOrderListResponseBody200ListOrderStatus :: Data.Text.Internal.Text,
    -- | listStatusType
    getSapiV1MarginOrderListResponseBody200ListStatusType :: Data.Text.Internal.Text,
    -- | orderListId
    getSapiV1MarginOrderListResponseBody200OrderListId :: GHC.Int.Int64,
    -- | orders
    getSapiV1MarginOrderListResponseBody200Orders :: ([GetSapiV1MarginOrderListResponseBody200Orders]),
    -- | symbol
    getSapiV1MarginOrderListResponseBody200Symbol :: Data.Text.Internal.Text,
    -- | transactionTime
    getSapiV1MarginOrderListResponseBody200TransactionTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginOrderListResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["contingencyType" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200ContingencyType obj] : ["isIsolated" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200IsIsolated obj] : ["listClientOrderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200ListClientOrderId obj] : ["listOrderStatus" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200ListOrderStatus obj] : ["listStatusType" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200ListStatusType obj] : ["orderListId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200OrderListId obj] : ["orders" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200Orders obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200Symbol obj] : ["transactionTime" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200TransactionTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["contingencyType" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200ContingencyType obj] : ["isIsolated" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200IsIsolated obj] : ["listClientOrderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200ListClientOrderId obj] : ["listOrderStatus" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200ListOrderStatus obj] : ["listStatusType" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200ListStatusType obj] : ["orderListId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200OrderListId obj] : ["orders" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200Orders obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200Symbol obj] : ["transactionTime" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200TransactionTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginOrderListResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginOrderListResponseBody200" (\obj -> ((((((((GHC.Base.pure GetSapiV1MarginOrderListResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "contingencyType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "isIsolated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "listClientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "listOrderStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "listStatusType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderListId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orders")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transactionTime"))

-- | Create a new 'GetSapiV1MarginOrderListResponseBody200' with all required fields.
mkGetSapiV1MarginOrderListResponseBody200 ::
  -- | 'getSapiV1MarginOrderListResponseBody200ContingencyType'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginOrderListResponseBody200IsIsolated'
  GHC.Types.Bool ->
  -- | 'getSapiV1MarginOrderListResponseBody200ListClientOrderId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginOrderListResponseBody200ListOrderStatus'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginOrderListResponseBody200ListStatusType'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginOrderListResponseBody200OrderListId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MarginOrderListResponseBody200Orders'
  [GetSapiV1MarginOrderListResponseBody200Orders] ->
  -- | 'getSapiV1MarginOrderListResponseBody200Symbol'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginOrderListResponseBody200TransactionTime'
  GHC.Int.Int64 ->
  GetSapiV1MarginOrderListResponseBody200
mkGetSapiV1MarginOrderListResponseBody200 getSapiV1MarginOrderListResponseBody200ContingencyType getSapiV1MarginOrderListResponseBody200IsIsolated getSapiV1MarginOrderListResponseBody200ListClientOrderId getSapiV1MarginOrderListResponseBody200ListOrderStatus getSapiV1MarginOrderListResponseBody200ListStatusType getSapiV1MarginOrderListResponseBody200OrderListId getSapiV1MarginOrderListResponseBody200Orders getSapiV1MarginOrderListResponseBody200Symbol getSapiV1MarginOrderListResponseBody200TransactionTime =
  GetSapiV1MarginOrderListResponseBody200
    { getSapiV1MarginOrderListResponseBody200ContingencyType = getSapiV1MarginOrderListResponseBody200ContingencyType,
      getSapiV1MarginOrderListResponseBody200IsIsolated = getSapiV1MarginOrderListResponseBody200IsIsolated,
      getSapiV1MarginOrderListResponseBody200ListClientOrderId = getSapiV1MarginOrderListResponseBody200ListClientOrderId,
      getSapiV1MarginOrderListResponseBody200ListOrderStatus = getSapiV1MarginOrderListResponseBody200ListOrderStatus,
      getSapiV1MarginOrderListResponseBody200ListStatusType = getSapiV1MarginOrderListResponseBody200ListStatusType,
      getSapiV1MarginOrderListResponseBody200OrderListId = getSapiV1MarginOrderListResponseBody200OrderListId,
      getSapiV1MarginOrderListResponseBody200Orders = getSapiV1MarginOrderListResponseBody200Orders,
      getSapiV1MarginOrderListResponseBody200Symbol = getSapiV1MarginOrderListResponseBody200Symbol,
      getSapiV1MarginOrderListResponseBody200TransactionTime = getSapiV1MarginOrderListResponseBody200TransactionTime
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/margin\/orderList.GET.responses.200.content.application\/json.schema.properties.orders.items@ in the specification.
data GetSapiV1MarginOrderListResponseBody200Orders = GetSapiV1MarginOrderListResponseBody200Orders
  { -- | clientOrderId
    getSapiV1MarginOrderListResponseBody200OrdersClientOrderId :: Data.Text.Internal.Text,
    -- | orderId
    getSapiV1MarginOrderListResponseBody200OrdersOrderId :: GHC.Int.Int64,
    -- | symbol
    getSapiV1MarginOrderListResponseBody200OrdersSymbol :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1MarginOrderListResponseBody200Orders where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200OrdersClientOrderId obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200OrdersOrderId obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200OrdersSymbol obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["clientOrderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200OrdersClientOrderId obj] : ["orderId" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200OrdersOrderId obj] : ["symbol" Data.Aeson.Types.ToJSON..= getSapiV1MarginOrderListResponseBody200OrdersSymbol obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1MarginOrderListResponseBody200Orders where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1MarginOrderListResponseBody200Orders" (\obj -> ((GHC.Base.pure GetSapiV1MarginOrderListResponseBody200Orders GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "clientOrderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "symbol"))

-- | Create a new 'GetSapiV1MarginOrderListResponseBody200Orders' with all required fields.
mkGetSapiV1MarginOrderListResponseBody200Orders ::
  -- | 'getSapiV1MarginOrderListResponseBody200OrdersClientOrderId'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1MarginOrderListResponseBody200OrdersOrderId'
  GHC.Int.Int64 ->
  -- | 'getSapiV1MarginOrderListResponseBody200OrdersSymbol'
  Data.Text.Internal.Text ->
  GetSapiV1MarginOrderListResponseBody200Orders
mkGetSapiV1MarginOrderListResponseBody200Orders getSapiV1MarginOrderListResponseBody200OrdersClientOrderId getSapiV1MarginOrderListResponseBody200OrdersOrderId getSapiV1MarginOrderListResponseBody200OrdersSymbol =
  GetSapiV1MarginOrderListResponseBody200Orders
    { getSapiV1MarginOrderListResponseBody200OrdersClientOrderId = getSapiV1MarginOrderListResponseBody200OrdersClientOrderId,
      getSapiV1MarginOrderListResponseBody200OrdersOrderId = getSapiV1MarginOrderListResponseBody200OrdersOrderId,
      getSapiV1MarginOrderListResponseBody200OrdersSymbol = getSapiV1MarginOrderListResponseBody200OrdersSymbol
    }

-- | > GET /sapi/v1/margin/orderList
--
-- The same as 'getSapiV1MarginOrderList' but accepts an explicit configuration.
getSapiV1MarginOrderListWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginOrderListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1MarginOrderListResponse)
getSapiV1MarginOrderListWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1MarginOrderListResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginOrderListResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1MarginOrderListResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginOrderListResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1MarginOrderListResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/orderList")
          [ Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "orderListId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryOrderListId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "origClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryOrigClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOrderListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOrderListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/margin/orderList
--
-- The same as 'getSapiV1MarginOrderList' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginOrderListRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginOrderListParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginOrderListRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/margin/orderList")
        [ Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "orderListId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryOrderListId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "origClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryOrigClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOrderListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOrderListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/margin/orderList
--
-- The same as 'getSapiV1MarginOrderList' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1MarginOrderListWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1MarginOrderListParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1MarginOrderListWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/margin/orderList")
          [ Binance.Common.QueryParameter (Data.Text.pack "isIsolated") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryIsIsolated parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "symbol") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQuerySymbol parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "orderListId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryOrderListId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "origClientOrderId") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryOrigClientOrderId parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1MarginOrderListParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOrderListParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1MarginOrderListParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
