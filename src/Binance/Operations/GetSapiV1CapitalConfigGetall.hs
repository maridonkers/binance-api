{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1CapitalConfigGetall
module Binance.Operations.GetSapiV1CapitalConfigGetall where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/capital/config/getall
--
-- Get information of coins (available for deposit and withdraw) for user.
--
-- Weight(IP): 10
getSapiV1CapitalConfigGetall ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1CapitalConfigGetallParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1CapitalConfigGetallResponse)
getSapiV1CapitalConfigGetall parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1CapitalConfigGetallResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1CapitalConfigGetallResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            ([GetSapiV1CapitalConfigGetallResponseBody200])
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1CapitalConfigGetallResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1CapitalConfigGetallResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/capital/config/getall")
        [ Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalConfigGetallParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalConfigGetallParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalConfigGetallParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/capital\/config\/getall.GET.parameters@ in the specification.
data GetSapiV1CapitalConfigGetallParameters = GetSapiV1CapitalConfigGetallParameters
  { -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1CapitalConfigGetallParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1CapitalConfigGetallParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1CapitalConfigGetallParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1CapitalConfigGetallParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalConfigGetallParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1CapitalConfigGetallParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallParametersQuerySignature obj] : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1CapitalConfigGetallParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1CapitalConfigGetallParameters" (\obj -> ((GHC.Base.pure GetSapiV1CapitalConfigGetallParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1CapitalConfigGetallParameters' with all required fields.
mkGetSapiV1CapitalConfigGetallParameters ::
  -- | 'getSapiV1CapitalConfigGetallParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1CapitalConfigGetallParameters
mkGetSapiV1CapitalConfigGetallParameters getSapiV1CapitalConfigGetallParametersQuerySignature getSapiV1CapitalConfigGetallParametersQueryTimestamp =
  GetSapiV1CapitalConfigGetallParameters
    { getSapiV1CapitalConfigGetallParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1CapitalConfigGetallParametersQuerySignature = getSapiV1CapitalConfigGetallParametersQuerySignature,
      getSapiV1CapitalConfigGetallParametersQueryTimestamp = getSapiV1CapitalConfigGetallParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1CapitalConfigGetall'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1CapitalConfigGetallResponseError' is used.
data GetSapiV1CapitalConfigGetallResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1CapitalConfigGetallResponseError GHC.Base.String
  | -- | All coins details information
    GetSapiV1CapitalConfigGetallResponse200 ([GetSapiV1CapitalConfigGetallResponseBody200])
  | -- | Bad Request
    GetSapiV1CapitalConfigGetallResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1CapitalConfigGetallResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/capital\/config\/getall.GET.responses.200.content.application\/json.schema.items@ in the specification.
data GetSapiV1CapitalConfigGetallResponseBody200 = GetSapiV1CapitalConfigGetallResponseBody200
  { -- | coin
    getSapiV1CapitalConfigGetallResponseBody200Coin :: Data.Text.Internal.Text,
    -- | depositAllEnable
    getSapiV1CapitalConfigGetallResponseBody200DepositAllEnable :: GHC.Types.Bool,
    -- | free
    getSapiV1CapitalConfigGetallResponseBody200Free :: Data.Text.Internal.Text,
    -- | freeze
    getSapiV1CapitalConfigGetallResponseBody200Freeze :: Data.Text.Internal.Text,
    -- | ipoable
    getSapiV1CapitalConfigGetallResponseBody200Ipoable :: Data.Text.Internal.Text,
    -- | ipoing
    getSapiV1CapitalConfigGetallResponseBody200Ipoing :: Data.Text.Internal.Text,
    -- | isLegalMoney
    getSapiV1CapitalConfigGetallResponseBody200IsLegalMoney :: GHC.Types.Bool,
    -- | locked
    getSapiV1CapitalConfigGetallResponseBody200Locked :: Data.Text.Internal.Text,
    -- | name
    getSapiV1CapitalConfigGetallResponseBody200Name :: Data.Text.Internal.Text,
    -- | networkList
    getSapiV1CapitalConfigGetallResponseBody200NetworkList :: ([GetSapiV1CapitalConfigGetallResponseBody200NetworkList]),
    -- | storage
    getSapiV1CapitalConfigGetallResponseBody200Storage :: Data.Text.Internal.Text,
    -- | trading
    getSapiV1CapitalConfigGetallResponseBody200Trading :: GHC.Types.Bool,
    -- | withdrawAllEnable
    getSapiV1CapitalConfigGetallResponseBody200WithdrawAllEnable :: GHC.Types.Bool,
    -- | withdrawing
    getSapiV1CapitalConfigGetallResponseBody200Withdrawing :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1CapitalConfigGetallResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["coin" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Coin obj] : ["depositAllEnable" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200DepositAllEnable obj] : ["free" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Free obj] : ["freeze" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Freeze obj] : ["ipoable" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Ipoable obj] : ["ipoing" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Ipoing obj] : ["isLegalMoney" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200IsLegalMoney obj] : ["locked" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Locked obj] : ["name" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Name obj] : ["networkList" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkList obj] : ["storage" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Storage obj] : ["trading" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Trading obj] : ["withdrawAllEnable" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200WithdrawAllEnable obj] : ["withdrawing" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Withdrawing obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["coin" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Coin obj] : ["depositAllEnable" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200DepositAllEnable obj] : ["free" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Free obj] : ["freeze" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Freeze obj] : ["ipoable" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Ipoable obj] : ["ipoing" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Ipoing obj] : ["isLegalMoney" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200IsLegalMoney obj] : ["locked" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Locked obj] : ["name" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Name obj] : ["networkList" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkList obj] : ["storage" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Storage obj] : ["trading" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Trading obj] : ["withdrawAllEnable" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200WithdrawAllEnable obj] : ["withdrawing" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200Withdrawing obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1CapitalConfigGetallResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1CapitalConfigGetallResponseBody200" (\obj -> (((((((((((((GHC.Base.pure GetSapiV1CapitalConfigGetallResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "coin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "depositAllEnable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "free")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "freeze")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "ipoable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "ipoing")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "isLegalMoney")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "locked")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "networkList")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "storage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "trading")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "withdrawAllEnable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "withdrawing"))

-- | Create a new 'GetSapiV1CapitalConfigGetallResponseBody200' with all required fields.
mkGetSapiV1CapitalConfigGetallResponseBody200 ::
  -- | 'getSapiV1CapitalConfigGetallResponseBody200Coin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200DepositAllEnable'
  GHC.Types.Bool ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200Free'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200Freeze'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200Ipoable'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200Ipoing'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200IsLegalMoney'
  GHC.Types.Bool ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200Locked'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200Name'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkList'
  [GetSapiV1CapitalConfigGetallResponseBody200NetworkList] ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200Storage'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200Trading'
  GHC.Types.Bool ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200WithdrawAllEnable'
  GHC.Types.Bool ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200Withdrawing'
  Data.Text.Internal.Text ->
  GetSapiV1CapitalConfigGetallResponseBody200
mkGetSapiV1CapitalConfigGetallResponseBody200 getSapiV1CapitalConfigGetallResponseBody200Coin getSapiV1CapitalConfigGetallResponseBody200DepositAllEnable getSapiV1CapitalConfigGetallResponseBody200Free getSapiV1CapitalConfigGetallResponseBody200Freeze getSapiV1CapitalConfigGetallResponseBody200Ipoable getSapiV1CapitalConfigGetallResponseBody200Ipoing getSapiV1CapitalConfigGetallResponseBody200IsLegalMoney getSapiV1CapitalConfigGetallResponseBody200Locked getSapiV1CapitalConfigGetallResponseBody200Name getSapiV1CapitalConfigGetallResponseBody200NetworkList getSapiV1CapitalConfigGetallResponseBody200Storage getSapiV1CapitalConfigGetallResponseBody200Trading getSapiV1CapitalConfigGetallResponseBody200WithdrawAllEnable getSapiV1CapitalConfigGetallResponseBody200Withdrawing =
  GetSapiV1CapitalConfigGetallResponseBody200
    { getSapiV1CapitalConfigGetallResponseBody200Coin = getSapiV1CapitalConfigGetallResponseBody200Coin,
      getSapiV1CapitalConfigGetallResponseBody200DepositAllEnable = getSapiV1CapitalConfigGetallResponseBody200DepositAllEnable,
      getSapiV1CapitalConfigGetallResponseBody200Free = getSapiV1CapitalConfigGetallResponseBody200Free,
      getSapiV1CapitalConfigGetallResponseBody200Freeze = getSapiV1CapitalConfigGetallResponseBody200Freeze,
      getSapiV1CapitalConfigGetallResponseBody200Ipoable = getSapiV1CapitalConfigGetallResponseBody200Ipoable,
      getSapiV1CapitalConfigGetallResponseBody200Ipoing = getSapiV1CapitalConfigGetallResponseBody200Ipoing,
      getSapiV1CapitalConfigGetallResponseBody200IsLegalMoney = getSapiV1CapitalConfigGetallResponseBody200IsLegalMoney,
      getSapiV1CapitalConfigGetallResponseBody200Locked = getSapiV1CapitalConfigGetallResponseBody200Locked,
      getSapiV1CapitalConfigGetallResponseBody200Name = getSapiV1CapitalConfigGetallResponseBody200Name,
      getSapiV1CapitalConfigGetallResponseBody200NetworkList = getSapiV1CapitalConfigGetallResponseBody200NetworkList,
      getSapiV1CapitalConfigGetallResponseBody200Storage = getSapiV1CapitalConfigGetallResponseBody200Storage,
      getSapiV1CapitalConfigGetallResponseBody200Trading = getSapiV1CapitalConfigGetallResponseBody200Trading,
      getSapiV1CapitalConfigGetallResponseBody200WithdrawAllEnable = getSapiV1CapitalConfigGetallResponseBody200WithdrawAllEnable,
      getSapiV1CapitalConfigGetallResponseBody200Withdrawing = getSapiV1CapitalConfigGetallResponseBody200Withdrawing
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/capital\/config\/getall.GET.responses.200.content.application\/json.schema.items.properties.networkList.items@ in the specification.
data GetSapiV1CapitalConfigGetallResponseBody200NetworkList = GetSapiV1CapitalConfigGetallResponseBody200NetworkList
  { -- | addressRegex
    getSapiV1CapitalConfigGetallResponseBody200NetworkListAddressRegex :: Data.Text.Internal.Text,
    -- | coin
    getSapiV1CapitalConfigGetallResponseBody200NetworkListCoin :: Data.Text.Internal.Text,
    -- | depositDesc: shown only when \"depositEnable\" is false.
    getSapiV1CapitalConfigGetallResponseBody200NetworkListDepositDesc :: Data.Text.Internal.Text,
    -- | depositEnable
    getSapiV1CapitalConfigGetallResponseBody200NetworkListDepositEnable :: GHC.Types.Bool,
    -- | isDefault
    getSapiV1CapitalConfigGetallResponseBody200NetworkListIsDefault :: GHC.Types.Bool,
    -- | memoRegex
    getSapiV1CapitalConfigGetallResponseBody200NetworkListMemoRegex :: Data.Text.Internal.Text,
    -- | minConfirm: min number for balance confirmation.
    getSapiV1CapitalConfigGetallResponseBody200NetworkListMinConfirm :: GHC.Int.Int64,
    -- | name
    getSapiV1CapitalConfigGetallResponseBody200NetworkListName :: Data.Text.Internal.Text,
    -- | network
    getSapiV1CapitalConfigGetallResponseBody200NetworkListNetwork :: Data.Text.Internal.Text,
    -- | resetAddressStatus
    getSapiV1CapitalConfigGetallResponseBody200NetworkListResetAddressStatus :: GHC.Types.Bool,
    -- | sameAddress
    getSapiV1CapitalConfigGetallResponseBody200NetworkListSameAddress :: GHC.Types.Bool,
    -- | specialTips
    getSapiV1CapitalConfigGetallResponseBody200NetworkListSpecialTips :: Data.Text.Internal.Text,
    -- | unLockConfirm: confirmation number for balance unlock.
    getSapiV1CapitalConfigGetallResponseBody200NetworkListUnLockConfirm :: GHC.Int.Int64,
    -- | withdrawDesc: shown only when \"withdrawEnable\" is false
    getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawDesc :: Data.Text.Internal.Text,
    -- | withdrawEnable
    getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawEnable :: GHC.Types.Bool,
    -- | withdrawFee
    getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawFee :: Data.Text.Internal.Text,
    -- | withdrawIntegerMultiple
    getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawIntegerMultiple :: Data.Text.Internal.Text,
    -- | withdrawMax
    getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawMax :: Data.Text.Internal.Text,
    -- | withdrawMin
    getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawMin :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1CapitalConfigGetallResponseBody200NetworkList where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["addressRegex" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListAddressRegex obj] : ["coin" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListCoin obj] : ["depositDesc" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListDepositDesc obj] : ["depositEnable" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListDepositEnable obj] : ["isDefault" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListIsDefault obj] : ["memoRegex" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListMemoRegex obj] : ["minConfirm" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListMinConfirm obj] : ["name" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListName obj] : ["network" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListNetwork obj] : ["resetAddressStatus" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListResetAddressStatus obj] : ["sameAddress" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListSameAddress obj] : ["specialTips" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListSpecialTips obj] : ["unLockConfirm" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListUnLockConfirm obj] : ["withdrawDesc" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawDesc obj] : ["withdrawEnable" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawEnable obj] : ["withdrawFee" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawFee obj] : ["withdrawIntegerMultiple" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawIntegerMultiple obj] : ["withdrawMax" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawMax obj] : ["withdrawMin" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawMin obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["addressRegex" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListAddressRegex obj] : ["coin" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListCoin obj] : ["depositDesc" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListDepositDesc obj] : ["depositEnable" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListDepositEnable obj] : ["isDefault" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListIsDefault obj] : ["memoRegex" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListMemoRegex obj] : ["minConfirm" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListMinConfirm obj] : ["name" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListName obj] : ["network" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListNetwork obj] : ["resetAddressStatus" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListResetAddressStatus obj] : ["sameAddress" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListSameAddress obj] : ["specialTips" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListSpecialTips obj] : ["unLockConfirm" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListUnLockConfirm obj] : ["withdrawDesc" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawDesc obj] : ["withdrawEnable" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawEnable obj] : ["withdrawFee" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawFee obj] : ["withdrawIntegerMultiple" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawIntegerMultiple obj] : ["withdrawMax" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawMax obj] : ["withdrawMin" Data.Aeson.Types.ToJSON..= getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawMin obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1CapitalConfigGetallResponseBody200NetworkList where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1CapitalConfigGetallResponseBody200NetworkList" (\obj -> ((((((((((((((((((GHC.Base.pure GetSapiV1CapitalConfigGetallResponseBody200NetworkList GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "addressRegex")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "coin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "depositDesc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "depositEnable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "isDefault")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "memoRegex")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "minConfirm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "network")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "resetAddressStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "sameAddress")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "specialTips")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "unLockConfirm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "withdrawDesc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "withdrawEnable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "withdrawFee")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "withdrawIntegerMultiple")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "withdrawMax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "withdrawMin"))

-- | Create a new 'GetSapiV1CapitalConfigGetallResponseBody200NetworkList' with all required fields.
mkGetSapiV1CapitalConfigGetallResponseBody200NetworkList ::
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListAddressRegex'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListCoin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListDepositDesc'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListDepositEnable'
  GHC.Types.Bool ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListIsDefault'
  GHC.Types.Bool ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListMemoRegex'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListMinConfirm'
  GHC.Int.Int64 ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListName'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListNetwork'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListResetAddressStatus'
  GHC.Types.Bool ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListSameAddress'
  GHC.Types.Bool ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListSpecialTips'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListUnLockConfirm'
  GHC.Int.Int64 ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawDesc'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawEnable'
  GHC.Types.Bool ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawFee'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawIntegerMultiple'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawMax'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawMin'
  Data.Text.Internal.Text ->
  GetSapiV1CapitalConfigGetallResponseBody200NetworkList
mkGetSapiV1CapitalConfigGetallResponseBody200NetworkList getSapiV1CapitalConfigGetallResponseBody200NetworkListAddressRegex getSapiV1CapitalConfigGetallResponseBody200NetworkListCoin getSapiV1CapitalConfigGetallResponseBody200NetworkListDepositDesc getSapiV1CapitalConfigGetallResponseBody200NetworkListDepositEnable getSapiV1CapitalConfigGetallResponseBody200NetworkListIsDefault getSapiV1CapitalConfigGetallResponseBody200NetworkListMemoRegex getSapiV1CapitalConfigGetallResponseBody200NetworkListMinConfirm getSapiV1CapitalConfigGetallResponseBody200NetworkListName getSapiV1CapitalConfigGetallResponseBody200NetworkListNetwork getSapiV1CapitalConfigGetallResponseBody200NetworkListResetAddressStatus getSapiV1CapitalConfigGetallResponseBody200NetworkListSameAddress getSapiV1CapitalConfigGetallResponseBody200NetworkListSpecialTips getSapiV1CapitalConfigGetallResponseBody200NetworkListUnLockConfirm getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawDesc getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawEnable getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawFee getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawIntegerMultiple getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawMax getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawMin =
  GetSapiV1CapitalConfigGetallResponseBody200NetworkList
    { getSapiV1CapitalConfigGetallResponseBody200NetworkListAddressRegex = getSapiV1CapitalConfigGetallResponseBody200NetworkListAddressRegex,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListCoin = getSapiV1CapitalConfigGetallResponseBody200NetworkListCoin,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListDepositDesc = getSapiV1CapitalConfigGetallResponseBody200NetworkListDepositDesc,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListDepositEnable = getSapiV1CapitalConfigGetallResponseBody200NetworkListDepositEnable,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListIsDefault = getSapiV1CapitalConfigGetallResponseBody200NetworkListIsDefault,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListMemoRegex = getSapiV1CapitalConfigGetallResponseBody200NetworkListMemoRegex,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListMinConfirm = getSapiV1CapitalConfigGetallResponseBody200NetworkListMinConfirm,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListName = getSapiV1CapitalConfigGetallResponseBody200NetworkListName,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListNetwork = getSapiV1CapitalConfigGetallResponseBody200NetworkListNetwork,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListResetAddressStatus = getSapiV1CapitalConfigGetallResponseBody200NetworkListResetAddressStatus,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListSameAddress = getSapiV1CapitalConfigGetallResponseBody200NetworkListSameAddress,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListSpecialTips = getSapiV1CapitalConfigGetallResponseBody200NetworkListSpecialTips,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListUnLockConfirm = getSapiV1CapitalConfigGetallResponseBody200NetworkListUnLockConfirm,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawDesc = getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawDesc,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawEnable = getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawEnable,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawFee = getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawFee,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawIntegerMultiple = getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawIntegerMultiple,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawMax = getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawMax,
      getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawMin = getSapiV1CapitalConfigGetallResponseBody200NetworkListWithdrawMin
    }

-- | > GET /sapi/v1/capital/config/getall
--
-- The same as 'getSapiV1CapitalConfigGetall' but accepts an explicit configuration.
getSapiV1CapitalConfigGetallWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1CapitalConfigGetallParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1CapitalConfigGetallResponse)
getSapiV1CapitalConfigGetallWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1CapitalConfigGetallResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1CapitalConfigGetallResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              ([GetSapiV1CapitalConfigGetallResponseBody200])
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1CapitalConfigGetallResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1CapitalConfigGetallResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/capital/config/getall")
          [ Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalConfigGetallParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalConfigGetallParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalConfigGetallParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/capital/config/getall
--
-- The same as 'getSapiV1CapitalConfigGetall' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1CapitalConfigGetallRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1CapitalConfigGetallParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1CapitalConfigGetallRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/capital/config/getall")
        [ Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalConfigGetallParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalConfigGetallParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalConfigGetallParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/capital/config/getall
--
-- The same as 'getSapiV1CapitalConfigGetall' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1CapitalConfigGetallWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1CapitalConfigGetallParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1CapitalConfigGetallWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/capital/config/getall")
          [ Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1CapitalConfigGetallParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalConfigGetallParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1CapitalConfigGetallParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
