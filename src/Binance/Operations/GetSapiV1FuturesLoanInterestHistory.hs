{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getSapiV1FuturesLoanInterestHistory
module Binance.Operations.GetSapiV1FuturesLoanInterestHistory where

import qualified Binance.Common
import Binance.Types
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /sapi/v1/futures/loan/interestHistory
--
-- Weight(IP): 1
getSapiV1FuturesLoanInterestHistory ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanInterestHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response GetSapiV1FuturesLoanInterestHistoryResponse)
getSapiV1FuturesLoanInterestHistory parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetSapiV1FuturesLoanInterestHistoryResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1FuturesLoanInterestHistoryResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetSapiV1FuturesLoanInterestHistoryResponseBody200
                                                      )
                                 | (\status_2 -> Network.HTTP.Types.Status.statusCode status_2 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1FuturesLoanInterestHistoryResponse400
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetSapiV1FuturesLoanInterestHistoryResponse401
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/futures/loan/interestHistory")
        [ Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanInterestHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanInterestHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | Defines the object schema located at @paths.\/sapi\/v1\/futures\/loan\/interestHistory.GET.parameters@ in the specification.
data GetSapiV1FuturesLoanInterestHistoryParameters = GetSapiV1FuturesLoanInterestHistoryParameters
  { -- | queryCollateralCoin: Represents the parameter named \'collateralCoin\'
    --
    -- Coin used as collateral
    getSapiV1FuturesLoanInterestHistoryParametersQueryCollateralCoin :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryCurrent: Represents the parameter named \'current\'
    --
    -- Current querying page. Start from 1. Default:1
    getSapiV1FuturesLoanInterestHistoryParametersQueryCurrent :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryEndTime: Represents the parameter named \'endTime\'
    --
    -- UTC timestamp in ms
    getSapiV1FuturesLoanInterestHistoryParametersQueryEndTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- Default 500; max 1000.
    getSapiV1FuturesLoanInterestHistoryParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Int.Int32),
    -- | queryRecvWindow: Represents the parameter named \'recvWindow\'
    --
    -- The value cannot be greater than 60000
    getSapiV1FuturesLoanInterestHistoryParametersQueryRecvWindow :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | querySignature: Represents the parameter named \'signature\'
    --
    -- Signature
    getSapiV1FuturesLoanInterestHistoryParametersQuerySignature :: Data.Text.Internal.Text,
    -- | queryStartTime: Represents the parameter named \'startTime\'
    --
    -- UTC timestamp in ms
    getSapiV1FuturesLoanInterestHistoryParametersQueryStartTime :: (GHC.Maybe.Maybe GHC.Int.Int64),
    -- | queryTimestamp: Represents the parameter named \'timestamp\'
    --
    -- UTC timestamp in ms
    getSapiV1FuturesLoanInterestHistoryParametersQueryTimestamp :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1FuturesLoanInterestHistoryParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCollateralCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanInterestHistoryParametersQueryCollateralCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanInterestHistoryParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanInterestHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanInterestHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanInterestHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanInterestHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryParametersQueryTimestamp obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCollateralCoin" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanInterestHistoryParametersQueryCollateralCoin obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCurrent" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanInterestHistoryParametersQueryCurrent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEndTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanInterestHistoryParametersQueryEndTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanInterestHistoryParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRecvWindow" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanInterestHistoryParametersQueryRecvWindow obj) : ["querySignature" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryParametersQuerySignature obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStartTime" Data.Aeson.Types.ToJSON..=)) (getSapiV1FuturesLoanInterestHistoryParametersQueryStartTime obj) : ["queryTimestamp" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryParametersQueryTimestamp obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1FuturesLoanInterestHistoryParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1FuturesLoanInterestHistoryParameters" (\obj -> (((((((GHC.Base.pure GetSapiV1FuturesLoanInterestHistoryParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCollateralCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCurrent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEndTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRecvWindow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "querySignature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStartTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryTimestamp"))

-- | Create a new 'GetSapiV1FuturesLoanInterestHistoryParameters' with all required fields.
mkGetSapiV1FuturesLoanInterestHistoryParameters ::
  -- | 'getSapiV1FuturesLoanInterestHistoryParametersQuerySignature'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanInterestHistoryParametersQueryTimestamp'
  GHC.Int.Int64 ->
  GetSapiV1FuturesLoanInterestHistoryParameters
mkGetSapiV1FuturesLoanInterestHistoryParameters getSapiV1FuturesLoanInterestHistoryParametersQuerySignature getSapiV1FuturesLoanInterestHistoryParametersQueryTimestamp =
  GetSapiV1FuturesLoanInterestHistoryParameters
    { getSapiV1FuturesLoanInterestHistoryParametersQueryCollateralCoin = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanInterestHistoryParametersQueryCurrent = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanInterestHistoryParametersQueryEndTime = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanInterestHistoryParametersQueryLimit = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanInterestHistoryParametersQueryRecvWindow = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanInterestHistoryParametersQuerySignature = getSapiV1FuturesLoanInterestHistoryParametersQuerySignature,
      getSapiV1FuturesLoanInterestHistoryParametersQueryStartTime = GHC.Maybe.Nothing,
      getSapiV1FuturesLoanInterestHistoryParametersQueryTimestamp = getSapiV1FuturesLoanInterestHistoryParametersQueryTimestamp
    }

-- | Represents a response of the operation 'getSapiV1FuturesLoanInterestHistory'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetSapiV1FuturesLoanInterestHistoryResponseError' is used.
data GetSapiV1FuturesLoanInterestHistoryResponse
  = -- | Means either no matching case available or a parse error
    GetSapiV1FuturesLoanInterestHistoryResponseError GHC.Base.String
  | -- | Cross-Collateral Interest History
    GetSapiV1FuturesLoanInterestHistoryResponse200 GetSapiV1FuturesLoanInterestHistoryResponseBody200
  | -- | Bad Request
    GetSapiV1FuturesLoanInterestHistoryResponse400 Error
  | -- | Unauthorized Request
    GetSapiV1FuturesLoanInterestHistoryResponse401 Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/sapi\/v1\/futures\/loan\/interestHistory.GET.responses.200.content.application\/json.schema@ in the specification.
data GetSapiV1FuturesLoanInterestHistoryResponseBody200 = GetSapiV1FuturesLoanInterestHistoryResponseBody200
  { -- | rows
    getSapiV1FuturesLoanInterestHistoryResponseBody200Rows :: ([GetSapiV1FuturesLoanInterestHistoryResponseBody200Rows]),
    -- | total
    getSapiV1FuturesLoanInterestHistoryResponseBody200Total :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1FuturesLoanInterestHistoryResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200Total obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["rows" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200Rows obj] : ["total" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200Total obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1FuturesLoanInterestHistoryResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1FuturesLoanInterestHistoryResponseBody200" (\obj -> (GHC.Base.pure GetSapiV1FuturesLoanInterestHistoryResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "rows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total"))

-- | Create a new 'GetSapiV1FuturesLoanInterestHistoryResponseBody200' with all required fields.
mkGetSapiV1FuturesLoanInterestHistoryResponseBody200 ::
  -- | 'getSapiV1FuturesLoanInterestHistoryResponseBody200Rows'
  [GetSapiV1FuturesLoanInterestHistoryResponseBody200Rows] ->
  -- | 'getSapiV1FuturesLoanInterestHistoryResponseBody200Total'
  GHC.Int.Int64 ->
  GetSapiV1FuturesLoanInterestHistoryResponseBody200
mkGetSapiV1FuturesLoanInterestHistoryResponseBody200 getSapiV1FuturesLoanInterestHistoryResponseBody200Rows getSapiV1FuturesLoanInterestHistoryResponseBody200Total =
  GetSapiV1FuturesLoanInterestHistoryResponseBody200
    { getSapiV1FuturesLoanInterestHistoryResponseBody200Rows = getSapiV1FuturesLoanInterestHistoryResponseBody200Rows,
      getSapiV1FuturesLoanInterestHistoryResponseBody200Total = getSapiV1FuturesLoanInterestHistoryResponseBody200Total
    }

-- | Defines the object schema located at @paths.\/sapi\/v1\/futures\/loan\/interestHistory.GET.responses.200.content.application\/json.schema.properties.rows.items@ in the specification.
data GetSapiV1FuturesLoanInterestHistoryResponseBody200Rows = GetSapiV1FuturesLoanInterestHistoryResponseBody200Rows
  { -- | collateralCoin
    getSapiV1FuturesLoanInterestHistoryResponseBody200RowsCollateralCoin :: Data.Text.Internal.Text,
    -- | interest
    getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterest :: Data.Text.Internal.Text,
    -- | interestCoin
    getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestCoin :: Data.Text.Internal.Text,
    -- | interestFreeLimitUsed
    getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestFreeLimitUsed :: Data.Text.Internal.Text,
    -- | interestRate
    getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestRate :: Data.Text.Internal.Text,
    -- | principalForInterest
    getSapiV1FuturesLoanInterestHistoryResponseBody200RowsPrincipalForInterest :: Data.Text.Internal.Text,
    -- | time
    getSapiV1FuturesLoanInterestHistoryResponseBody200RowsTime :: GHC.Int.Int64
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetSapiV1FuturesLoanInterestHistoryResponseBody200Rows where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["collateralCoin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200RowsCollateralCoin obj] : ["interest" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterest obj] : ["interestCoin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestCoin obj] : ["interestFreeLimitUsed" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestFreeLimitUsed obj] : ["interestRate" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestRate obj] : ["principalForInterest" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200RowsPrincipalForInterest obj] : ["time" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200RowsTime obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["collateralCoin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200RowsCollateralCoin obj] : ["interest" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterest obj] : ["interestCoin" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestCoin obj] : ["interestFreeLimitUsed" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestFreeLimitUsed obj] : ["interestRate" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestRate obj] : ["principalForInterest" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200RowsPrincipalForInterest obj] : ["time" Data.Aeson.Types.ToJSON..= getSapiV1FuturesLoanInterestHistoryResponseBody200RowsTime obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetSapiV1FuturesLoanInterestHistoryResponseBody200Rows where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetSapiV1FuturesLoanInterestHistoryResponseBody200Rows" (\obj -> ((((((GHC.Base.pure GetSapiV1FuturesLoanInterestHistoryResponseBody200Rows GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "collateralCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interest")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interestCoin")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interestFreeLimitUsed")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interestRate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "principalForInterest")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "time"))

-- | Create a new 'GetSapiV1FuturesLoanInterestHistoryResponseBody200Rows' with all required fields.
mkGetSapiV1FuturesLoanInterestHistoryResponseBody200Rows ::
  -- | 'getSapiV1FuturesLoanInterestHistoryResponseBody200RowsCollateralCoin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterest'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestCoin'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestFreeLimitUsed'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestRate'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanInterestHistoryResponseBody200RowsPrincipalForInterest'
  Data.Text.Internal.Text ->
  -- | 'getSapiV1FuturesLoanInterestHistoryResponseBody200RowsTime'
  GHC.Int.Int64 ->
  GetSapiV1FuturesLoanInterestHistoryResponseBody200Rows
mkGetSapiV1FuturesLoanInterestHistoryResponseBody200Rows getSapiV1FuturesLoanInterestHistoryResponseBody200RowsCollateralCoin getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterest getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestCoin getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestFreeLimitUsed getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestRate getSapiV1FuturesLoanInterestHistoryResponseBody200RowsPrincipalForInterest getSapiV1FuturesLoanInterestHistoryResponseBody200RowsTime =
  GetSapiV1FuturesLoanInterestHistoryResponseBody200Rows
    { getSapiV1FuturesLoanInterestHistoryResponseBody200RowsCollateralCoin = getSapiV1FuturesLoanInterestHistoryResponseBody200RowsCollateralCoin,
      getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterest = getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterest,
      getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestCoin = getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestCoin,
      getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestFreeLimitUsed = getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestFreeLimitUsed,
      getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestRate = getSapiV1FuturesLoanInterestHistoryResponseBody200RowsInterestRate,
      getSapiV1FuturesLoanInterestHistoryResponseBody200RowsPrincipalForInterest = getSapiV1FuturesLoanInterestHistoryResponseBody200RowsPrincipalForInterest,
      getSapiV1FuturesLoanInterestHistoryResponseBody200RowsTime = getSapiV1FuturesLoanInterestHistoryResponseBody200RowsTime
    }

-- | > GET /sapi/v1/futures/loan/interestHistory
--
-- The same as 'getSapiV1FuturesLoanInterestHistory' but accepts an explicit configuration.
getSapiV1FuturesLoanInterestHistoryWithConfiguration ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanInterestHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response GetSapiV1FuturesLoanInterestHistoryResponse)
getSapiV1FuturesLoanInterestHistoryWithConfiguration
  config
  parameters =
    GHC.Base.fmap
      ( \response_4 ->
          GHC.Base.fmap
            ( Data.Either.either GetSapiV1FuturesLoanInterestHistoryResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_5 -> Network.HTTP.Types.Status.statusCode status_5 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1FuturesLoanInterestHistoryResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetSapiV1FuturesLoanInterestHistoryResponseBody200
                                                        )
                                   | (\status_6 -> Network.HTTP.Types.Status.statusCode status_6 GHC.Classes.== 400) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1FuturesLoanInterestHistoryResponse400
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | (\status_7 -> Network.HTTP.Types.Status.statusCode status_7 GHC.Classes.== 401) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetSapiV1FuturesLoanInterestHistoryResponse401
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_4
            )
            response_4
      )
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/futures/loan/interestHistory")
          [ Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanInterestHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanInterestHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )

-- | > GET /sapi/v1/futures/loan/interestHistory
--
-- The same as 'getSapiV1FuturesLoanInterestHistory' but returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1FuturesLoanInterestHistoryRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanInterestHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  Binance.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1FuturesLoanInterestHistoryRaw parameters =
  GHC.Base.id
    ( Binance.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/sapi/v1/futures/loan/interestHistory")
        [ Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanInterestHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
          Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanInterestHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
        ]
    )

-- | > GET /sapi/v1/futures/loan/interestHistory
--
-- The same as 'getSapiV1FuturesLoanInterestHistory' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
getSapiV1FuturesLoanInterestHistoryWithConfigurationRaw ::
  forall m.
  Binance.Common.MonadHTTP m =>
  -- | The configuration to use in the request
  Binance.Common.Configuration ->
  -- | Contains all available parameters of this operation (query and path parameters)
  GetSapiV1FuturesLoanInterestHistoryParameters ->
  -- | Monadic computation which returns the result of the operation
  m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString)
getSapiV1FuturesLoanInterestHistoryWithConfigurationRaw
  config
  parameters =
    GHC.Base.id
      ( Binance.Common.doCallWithConfiguration
          config
          (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
          (Data.Text.pack "/sapi/v1/futures/loan/interestHistory")
          [ Binance.Common.QueryParameter (Data.Text.pack "collateralCoin") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryCollateralCoin parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "startTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryStartTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "endTime") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryEndTime parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "current") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryCurrent parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "recvWindow") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getSapiV1FuturesLoanInterestHistoryParametersQueryRecvWindow parameters) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "timestamp") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanInterestHistoryParametersQueryTimestamp parameters)) (Data.Text.pack "form") GHC.Types.False,
            Binance.Common.QueryParameter (Data.Text.pack "signature") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getSapiV1FuturesLoanInterestHistoryParametersQuerySignature parameters)) (Data.Text.pack "form") GHC.Types.False
          ]
      )
